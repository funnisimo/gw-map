{"version":3,"file":"gw-map.js","sources":["../js/flags/depth.js","../js/flags/entity.js","../js/flags/actor.js","../js/flags/item.js","../js/flags/tile.js","../js/flags/tileMech.js","../js/flags/cell.js","../js/flags/map.js","../js/flags/effect.js","../js/flags/horde.js","../js/entity/key.js","../js/action/action.js","../js/action/actions.js","../js/entity/entity.js","../js/entity/kind.js","../js/actor/status.js","../js/actor/stat.js","../js/actor/actor.js","../js/effect/effect.js","../js/tile/tile.js","../js/tile/index.js","../js/map/cell.js","../js/item/item.js","../js/entity/message.js","../js/actor/pain.js","../js/ai/utils.js","../js/ai/ai.js","../js/ai/wander.js","../js/ai/typical.js","../js/actor/kind.js","../js/actor/make.js","../js/item/kind.js","../js/item/make.js","../js/actions/standStill.js","../js/fx/fx.js","../js/actions/bump.js","../js/actions/moveDir.js","../js/actions/idle.js","../js/actions/pickup.js","../js/actions/climb.js","../js/effects/fn.js","../js/effects/activateMachine.js","../js/effects/chance.js","../js/effects/clear.js","../js/effects/emit.js","../js/effects/feature.js","../js/effects/msg.js","../js/effects/nourish.js","../js/effects/spread.js","../js/effects/stat.js","../js/effects/tile.js","../js/layer/mapLayer.js","../js/layer/tileLayer.js","../js/layer/gasLayer.js","../js/layer/fireLayer.js","../js/draw/basic.js","../js/map/map.js","../js/map/analyze.js","../js/map/snapshot.js","../js/map/utils.js","../js/map/make.js","../js/map/index.js","../js/horde/horde.js","../js/horde/make.js","../js/memory/index.js","../js/player/attribute.js","../js/player/skill.js","../js/player/scent.js","../js/player/player.js","../js/player/kind.js","../js/player/make.js","../js/game/viewport.js","../js/game/message.js","../js/game/flavor.js","../js/game/sidebar.js","../js/game/game.js","../js/tile/tiles.js"],"sourcesContent":["export var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Entity;\n(function (Entity) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    Entity[Entity[\"L_DESTROYED\"] = Fl(1)] = \"L_DESTROYED\";\n    Entity[Entity[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    Entity[Entity[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    Entity[Entity[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    Entity[Entity[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    Entity[Entity[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    Entity[Entity[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    Entity[Entity[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    Entity[Entity[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    Entity[Entity[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    Entity[Entity[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    Entity[Entity[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    Entity[Entity[\"L_NO_SIDEBAR\"] = Fl(13)] = \"L_NO_SIDEBAR\";\n    Entity[Entity[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    Entity[Entity[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    Entity[Entity[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    Entity[Entity[\"L_ON_MAP\"] = Fl(17)] = \"L_ON_MAP\";\n    Entity[Entity[\"L_IN_SIDEBAR\"] = Fl(18)] = \"L_IN_SIDEBAR\";\n    Entity[Entity[\"L_FORMAL_NAME\"] = Fl(20)] = \"L_FORMAL_NAME\";\n    Entity[Entity[\"L_ALWAYS_PLURAL\"] = Fl(21)] = \"L_ALWAYS_PLURAL\";\n    Entity[Entity[\"DEFAULT_ACTOR\"] = 0] = \"DEFAULT_ACTOR\";\n    Entity[Entity[\"DEFAULT_ITEM\"] = 0] = \"DEFAULT_ITEM\";\n    Entity[Entity[\"L_BLOCKED_BY_STAIRS\"] = Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_SURFACE |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    Entity[Entity[\"L_BLOCKS_SCENT\"] = Entity.L_BLOCKS_MOVE | Entity.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    Entity[Entity[\"L_DIVIDES_LEVEL\"] = Entity.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    Entity[Entity[\"L_WAYPOINT_BLOCKER\"] = Entity.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    Entity[Entity[\"L_WALL_FLAGS\"] = Entity.L_BLOCKS_MOVE |\n        Entity.L_BLOCKS_VISION |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    Entity[Entity[\"L_BLOCKS_EVERYTHING\"] = Entity.L_WALL_FLAGS |\n        Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_ACTORS |\n        Entity.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(Entity || (Entity = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n    Actor[Actor[\"HAS_MEMORY\"] = Fl(1)] = \"HAS_MEMORY\";\n    Actor[Actor[\"USES_FOV\"] = Fl(2)] = \"USES_FOV\";\n    Actor[Actor[\"STABLE_COST_MAP\"] = Fl(3)] = \"STABLE_COST_MAP\";\n    Actor[Actor[\"IS_VISIBLE\"] = Fl(4)] = \"IS_VISIBLE\";\n    Actor[Actor[\"WAS_VISIBLE\"] = Fl(5)] = \"WAS_VISIBLE\";\n    Actor[Actor[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Actor || (Actor = {}));\n","export var Item;\n(function (Item) {\n    Item[Item[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Item || (Item = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_SHALLOW_WATER\"] = Fl(4)] = \"T_SHALLOW_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_LIST_IN_SIDEBAR\"] = Fl(22)] = \"T_LIST_IN_SIDEBAR\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n    Tile[Tile[\"T_ANY_LIQUID\"] = Tile.T_IS_DEEP_LIQUID | Tile.T_SHALLOW_WATER] = \"T_ANY_LIQUID\";\n})(Tile || (Tile = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(0)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(1)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"KNOWN_TO_BE_SAFE\"] = Fl(2)] = \"KNOWN_TO_BE_SAFE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(11)] = \"IMPREGNABLE\";\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(13)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(14)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"STABLE_SNAPSHOT\"] = Fl(15)] = \"STABLE_SNAPSHOT\";\n    // These are to speed checks\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(16)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(17)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(18)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(19)] = \"HAS_ITEM\";\n    Cell[Cell[\"HAS_FX\"] = Fl(20)] = \"HAS_FX\";\n    Cell[Cell[\"HAS_TICK_EFFECT\"] = Fl(22)] = \"HAS_TICK_EFFECT\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(23)] = \"IS_CURSOR\";\n    Cell[Cell[\"IS_HIGHLIGHTED\"] = Fl(24)] = \"IS_HIGHLIGHTED\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(28)] = \"IS_POWERED\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"CHANGED\"] = Cell.NEEDS_REDRAW] = \"CHANGED\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_SAFE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_NEEDS_REDRAW\"] = Fl(1)] = \"MAP_NEEDS_REDRAW\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_HAS_LIQUID\"] = Fl(5)] = \"MAP_HAS_LIQUID\";\n    Map[Map[\"MAP_HAS_GAS\"] = Fl(6)] = \"MAP_HAS_GAS\";\n    Map[Map[\"MAP_HAS_FIRE\"] = Fl(7)] = \"MAP_HAS_FIRE\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(10)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(11)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(12)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_SIDEBAR_TILES_CHANGED\"] = Fl(13)] = \"MAP_SIDEBAR_TILES_CHANGED\";\n    Map[Map[\"MAP_SIDEBAR_CHANGED\"] = Fl(14)] = \"MAP_SIDEBAR_CHANGED\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_IGNORE_FOV\"] = Fl(12)] = \"E_IGNORE_FOV\";\n    // E_SPREAD_CIRCLE = Fl(13), // Spread in a circle around the spot (using FOV), radius calculated using spread+decrement\n    // E_SPREAD_LINE = Fl(14), // Spread in a line in one random direction\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Horde;\n(function (Horde) {\n    Horde[Horde[\"HORDE_DIES_ON_LEADER_DEATH\"] = Fl(0)] = \"HORDE_DIES_ON_LEADER_DEATH\";\n    Horde[Horde[\"HORDE_IS_SUMMONED\"] = Fl(1)] = \"HORDE_IS_SUMMONED\";\n    Horde[Horde[\"HORDE_SUMMONED_AT_DISTANCE\"] = Fl(2)] = \"HORDE_SUMMONED_AT_DISTANCE\";\n    Horde[Horde[\"HORDE_NO_PERIODIC_SPAWN\"] = Fl(4)] = \"HORDE_NO_PERIODIC_SPAWN\";\n    Horde[Horde[\"HORDE_ALLIED_WITH_PLAYER\"] = Fl(5)] = \"HORDE_ALLIED_WITH_PLAYER\";\n    Horde[Horde[\"HORDE_NEVER_OOD\"] = Fl(15)] = \"HORDE_NEVER_OOD\";\n    // Move all these to tags?\n    // HORDE_LEADER_CAPTIVE = Fl(3), // the leader is in chains and the followers are guards\n    // HORDE_MACHINE_BOSS = Fl(6), // used in machines for a boss challenge\n    // HORDE_MACHINE_WATER_MONSTER = Fl(7), // used in machines where the room floods with shallow water\n    // HORDE_MACHINE_CAPTIVE = Fl(8), // powerful captive monsters without any captors\n    // HORDE_MACHINE_STATUE = Fl(9), // the kinds of monsters that make sense in a statue\n    // HORDE_MACHINE_TURRET = Fl(10), // turrets, for hiding in walls\n    // HORDE_MACHINE_MUD = Fl(11), // bog monsters, for hiding in mud\n    // HORDE_MACHINE_KENNEL = Fl(12), // monsters that can appear in cages in kennels\n    // HORDE_VAMPIRE_FODDER = Fl(13), // monsters that are prone to capture and farming by vampires\n    // HORDE_MACHINE_LEGENDARY_ALLY = Fl(14), // legendary allies\n    // HORDE_MACHINE_THIEF = Fl(16), // monsters that can be generated in the key thief area machines\n    // HORDE_MACHINE_GOBLIN_WARREN = Fl(17), // can spawn in goblin warrens\n    // HORDE_SACRIFICE_TARGET = Fl(18), // can be the target of an assassination challenge; leader will get scary light.\n    // HORDE_MACHINE_ONLY = HORDE_MACHINE_BOSS |\n    //     HORDE_MACHINE_WATER_MONSTER |\n    //     HORDE_MACHINE_CAPTIVE |\n    //     HORDE_MACHINE_STATUE |\n    //     HORDE_MACHINE_TURRET |\n    //     HORDE_MACHINE_MUD |\n    //     HORDE_MACHINE_KENNEL |\n    //     HORDE_VAMPIRE_FODDER |\n    //     HORDE_MACHINE_LEGENDARY_ALLY |\n    //     HORDE_MACHINE_THIEF |\n    //     HORDE_MACHINE_GOBLIN_WARREN |\n    //     HORDE_SACRIFICE_TARGET,\n})(Horde || (Horde = {}));\n","// TODO - Do we need the machine?\nexport class KeyInfo {\n    constructor(x, y, disposable) {\n        this.x = x;\n        this.y = y;\n        this.disposable = disposable;\n    }\n    matches(x, y) {\n        return this.x === x && this.y === y;\n    }\n}\nexport function makeKeyInfo(x, y, disposable) {\n    return new KeyInfo(x, y, disposable);\n}\n","export class Action {\n    constructor(opts) {\n        this.actor = null; // actor doing the acting\n        this.item = null; // item being acted upon (if any/known)\n        this.x = 0;\n        this.y = 0;\n        this.target = null;\n        this.dir = null;\n        this.aware = false;\n        this.identified = false;\n        this.machine = 0;\n        this.try = false;\n        this.force = false;\n        this.good = false;\n        this.seen = false;\n        this.quiet = false;\n        // TODO - move to Game\n        // rng?: GWU.rng.Random;\n        // time = 0; // turn time (-1 means dead, 0 means no action, >0 means did something)\n        this.ok = false;\n        this.failed = false;\n        this.done = false;\n        this.logged = false; // message was logged\n        this.visible = false; // visible to player\n        this.data = {};\n        this.map = opts.map;\n        this.actor = opts.actor || null;\n        this.item = opts.item || null;\n        this.target = opts.target || null;\n        if (!this.map && this.actor) {\n            this.map = this.actor.map;\n        }\n        if (!this.map && this.item) {\n            this.map = this.item.map;\n        }\n        this.game = opts.game;\n        if (!this.game && this.map) {\n            this.game = this.map.game;\n        }\n        if (opts.x !== undefined) {\n            this.x = opts.x;\n            this.y = opts.y;\n        }\n        else if (this.actor) {\n            this.x = this.actor.x;\n            this.y = this.actor.y;\n        }\n        else if (this.item) {\n            this.x = this.item.x;\n            this.y = this.item.y;\n        }\n        this.originX = this.x;\n        this.originY = this.y;\n        this.key = !!opts.key;\n        if (opts.force)\n            this.force = true;\n        if (opts.aware)\n            this.aware = true;\n        if (opts.machine)\n            this.machine = opts.machine;\n    }\n    isSuccess() {\n        return this.ok;\n    }\n    isFailed() {\n        return this.failed;\n    }\n    didSomething() {\n        this.ok = true;\n    }\n    didNothing() { }\n    fail() {\n        this.failed = true;\n        this.done = true;\n    }\n    isDone() {\n        return this.done;\n    }\n    stop() {\n        this.done = true;\n    }\n    reset() {\n        this.done = false;\n        this.failed = false;\n        this.ok = false;\n    }\n}\n// export type ActionNext = () => boolean;\n// export type ActionFn = (req: ActionCtx, next: ActionNext) => boolean;\n// export type ActionAfterFn = (req: ActionCtx) => void;\n// export enum Priority {\n//     FIRST = 0,\n//     EARLY = 25,\n//     NORMAL = 50,\n//     LATE = 75,\n//     LAST = 100,\n// }\n// export interface Action {\n//     fn: ActionFn;\n//     priority: Priority;\n// }\n// interface ActionData {\n//     fns: Action[];\n//     afterFns: ActionAfterFn[];\n// }\n// export interface ActionObj {\n//     [key: string]: ActionFn | ActionFn[] | null | false;\n// }\n// export type ActionBase = ActionFn | ActionFn[];\n// export type ActionConfig = ActionBase | ActionObj;\n// // function isActionObj(arg: any): arg is ActionObj {\n// //     return typeof arg === 'object' && !Array.isArray(arg);\n// // }\n// export class ActionManager {\n//     ACTIONS: Record<string, ActionData> = {};\n//     has(name: string): boolean {\n//         return name in this.ACTIONS;\n//     }\n//     load(obj: ActionObj) {\n//         Object.entries(obj).forEach(([key, value]) => {\n//             if (!value) {\n//                 this.clear(key);\n//             } else {\n//                 this.use(key, value);\n//             }\n//         });\n//     }\n//     copy(other: ActionManager) {\n//         Object.entries(other.ACTIONS).forEach(([name, data]) => {\n//             this.ACTIONS[name] = {\n//                 fns: data.fns.slice(),\n//                 afterFns: data.afterFns.slice(),\n//             };\n//         });\n//     }\n//     clear(name: string) {\n//         delete this.ACTIONS[name];\n//     }\n//     use(name: string, fn: ActionBase): void;\n//     use(\n//         name: string,\n//         fn: ActionFn,\n//         afterFn?: ActionAfterFn,\n//         priority?: number | keyof typeof Priority\n//     ): void;\n//     use(\n//         name: string,\n//         fn: ActionFn,\n//         priority?: number | keyof typeof Priority\n//     ): void;\n//     use(\n//         name: string,\n//         fn: ActionBase,\n//         afterFn?: ActionAfterFn | number | keyof typeof Priority,\n//         priority?: number | keyof typeof Priority\n//     ): void {\n//         if (Array.isArray(fn)) {\n//             if (fn.length && !fn[0]) {\n//                 this.clear(name);\n//                 fn.shift();\n//             }\n//             fn = chain(...fn);\n//         }\n//         if (typeof afterFn !== 'function') {\n//             priority = afterFn;\n//             afterFn = undefined;\n//         }\n//         if (priority === undefined) priority = Priority.NORMAL;\n//         if (typeof priority === 'string') {\n//             priority = Priority[priority] || 50;\n//         }\n//         if (name.startsWith('!') || name.startsWith('^')) {\n//             name = name.substring(1);\n//             priority = Priority.FIRST;\n//         } else if (name.startsWith('-')) {\n//             name = name.substring(1);\n//             priority = Priority.EARLY;\n//         } else if (name.startsWith('+')) {\n//             name = name.substring(1);\n//             priority = Priority.LATE;\n//         } else if (name.startsWith('$')) {\n//             name = name.substring(1);\n//             priority = Priority.LAST;\n//         }\n//         if (!(name in this.ACTIONS)) {\n//             this.ACTIONS[name] = { fns: [], afterFns: [] };\n//         }\n//         const data = this.ACTIONS[name];\n//         const a = { fn, priority };\n//         data.fns.unshift(a); // should go before others with same priority\n//         data.fns.sort((a, b) => a.priority - b.priority);\n//         if (afterFn) {\n//             data.afterFns.push(afterFn);\n//         }\n//     }\n//     useAfter(name: string, fn: ActionAfterFn) {\n//         if (!(name in this.ACTIONS)) {\n//             this.ACTIONS[name] = { fns: [], afterFns: [] };\n//         }\n//         const data = this.ACTIONS[name];\n//         data.afterFns.push(fn);\n//     }\n//     trigger(action: string, req: ActionCtx, next?: ActionNext): boolean {\n//         const data = this.ACTIONS[action];\n//         if (data) {\n//             return this._trigger(req, data.fns, data.afterFns, next);\n//         }\n//         return true;\n//     }\n//     _trigger(\n//         req: ActionCtx,\n//         fns: Action[],\n//         afterFns: ActionAfterFn[] = [],\n//         next?: ActionNext\n//     ): boolean {\n//         let index = -1;\n//         function _next(): boolean {\n//             index += 1;\n//             if (index >= fns.length) {\n//                 return next ? next() : true;\n//             }\n//             const result = fns[index].fn(req, _next);\n//             return result;\n//         }\n//         const result = _next();\n//         afterFns.forEach((fn) => fn(req));\n//         return result;\n//     }\n// }\n// export function chain(...fns: ActionFn[]): ActionFn {\n//     return function (req: ActionCtx, next: ActionNext): boolean {\n//         let index = -1;\n//         function _next(): boolean {\n//             index += 1;\n//             if (index >= fns.length) {\n//                 return next();\n//             }\n//             return fns[index](req, _next);\n//         }\n//         return _next();\n//     };\n// }\n// export function each(...fns: ActionFn[]): ActionFn {\n//     return function (req: ActionCtx, next: ActionNext): boolean {\n//         for (let fn of fns) {\n//             fn(req, GWU.TRUE);\n//         }\n//         return next();\n//     };\n// }\n// export function make(opts?: ActionBase): ActionManager {\n// }\n/*\n    ActorKind\n        actions: Record<string,ActionFn[]>={};\n        use(action, fn, priority) {\n            // push\n            // sort\n        }\n        exec(action,req, res) {\n            // see exec\n        }\n*/\n/*\n\nfunction TRUE() { return true; }\n\ntype ActionCtx = any;\ntype ActionNext = () => boolean | boolean;\ntype ActionFn = (ctx: ActionCtx, next: ActionNext) => boolean | boolean;\n\ninterface ActionObj {\n  actions: Record<string, ActionFn[]>;\n}\n\n function actionObj(ev: string, ctx: ActionCtx, obj: ActionObj, next: ActionNext=TRUE): boolean {\n\n  const allActions = obj.actions;\n  if (!(ev in allActions)) return next();\n  const actions = allActions[ev];\n  \n  let index = -1;\n   function _next() : boolean {\n    ++index;\n    if (index >= actions.length) return next();\n    return actions[index](ctx, _next);\n  }\n\n  return _next();\n}\n\n// e.g. actionObj('test', {}, a, next);\n\n function actionObjs(ev: string, ctx: ActionCtx, objs: ActionObj[], next:ActionNext=TRUE): boolean {\n\n  let index = -1;\n   function _nextObj() {\n    ++index;\n    if (index >= objs.length) return next();\n    const obj = objs[index];\n    return actionObj(ev, ctx, obj, _nextObj);\n  }\n\n  return _nextObj();\n}\n\n// e.g. actionObjs('test', {}, a, b, c, next);\n\ntype ActionArg = ActionFn | { eg: string, obj: ActionObj };\ntype ChainList = [...ActionArg[], ActionNext] | ActionArg[];\n\n function actionChain(ctx: ActionCtx, ...args: ChainList) : boolean {\n\n\n\n  return true;\n}\n\n// map move might include something like...\n// e.g. actionChain({}, { ev: 'exit', obj: cell }, { ev: 'enter', obj: newCell }, next);\n// enter - covers bump/collide\n*/\n","import * as GWU from 'gw-utils';\nimport { Action } from './action';\nexport class Actions {\n    constructor(ctx) {\n        this._handlers = {};\n        this.onUnhandled = null;\n        this._ctx = ctx;\n    }\n    copy(other) {\n        Object.entries(other._handlers).forEach(([ev, fns]) => {\n            if (!fns)\n                return;\n            this._handlers[ev] = Array.isArray(fns) ? fns.slice() : fns;\n        });\n    }\n    has(ev) {\n        const events = this._handlers[ev];\n        if (!events)\n            return false;\n        return events.some((e) => e && !!e.fn);\n    }\n    on(ev, fn) {\n        if (Array.isArray(ev)) {\n            const cleanup = ev.map((e) => this.on(e, fn));\n            return () => {\n                cleanup.forEach((c) => c());\n            };\n        }\n        if (Array.isArray(fn)) {\n            const cleanup = fn.map((cb) => this.on(ev, cb));\n            return () => {\n                cleanup.forEach((c) => c());\n            };\n        }\n        let handlers = this._handlers[ev];\n        if (!handlers) {\n            handlers = this._handlers[ev] = [];\n        }\n        const info = { fn };\n        handlers.unshift(info);\n        return () => {\n            const events = this._handlers[ev];\n            if (Array.isArray(events)) {\n                GWU.arrayNullify(events, info);\n            }\n        };\n    }\n    load(obj) {\n        Object.entries(obj).forEach(([ev, cfg]) => {\n            this.on(ev, cfg);\n        });\n    }\n    once(ev, fn) {\n        if (Array.isArray(ev)) {\n            const cleanup = ev.map((e) => this.once(e, fn));\n            return () => {\n                cleanup.forEach((c) => c());\n            };\n        }\n        if (Array.isArray(fn)) {\n            const cleanup = fn.map((cb) => this.on(ev, cb));\n            return () => {\n                cleanup.forEach((c) => c());\n            };\n        }\n        let handlers = this._handlers[ev];\n        if (!handlers) {\n            handlers = this._handlers[ev] = [];\n        }\n        const info = { fn, once: true };\n        handlers.unshift(info);\n        return () => {\n            const events = this._handlers[ev];\n            if (Array.isArray(events)) {\n                GWU.arrayNullify(events, info);\n            }\n        };\n    }\n    off(ev, cb) {\n        if (Array.isArray(ev)) {\n            ev.forEach((e) => this.off(e, cb));\n            return;\n        }\n        const events = this._handlers[ev];\n        if (!events)\n            return;\n        if (cb) {\n            const current = events.findIndex((i) => i && i.fn === cb);\n            if (current > -1) {\n                events[current] = null;\n            }\n        }\n        else {\n            for (let i = 0; i < events.length; ++i) {\n                events[i] = null;\n            }\n        }\n    }\n    trigger(ev, action) {\n        if (!action)\n            throw new Error('Need Action parameter.');\n        if (Array.isArray(ev)) {\n            let didSomething = false;\n            for (let name of ev) {\n                didSomething = this.trigger(name, action) || didSomething;\n                if (action.isDone())\n                    return didSomething;\n            }\n            return didSomething;\n        }\n        const handlers = this._handlers[ev];\n        if (!handlers || handlers.length == 0) {\n            return this._unhandled(ev, action);\n        }\n        for (let i = 0; i < handlers.length; ++i) {\n            const info = handlers[i];\n            if (info) {\n                if (info.fn) {\n                    // console.log('info.fn', info.fn);\n                    info.fn.call(this._ctx, action);\n                }\n                if (info.once) {\n                    handlers[i] = null;\n                }\n            }\n            if (action.isDone())\n                break;\n        }\n        this._handlers[ev] = handlers.filter((i) => i);\n        return true;\n    }\n    _unhandled(ev, action) {\n        if (!this.onUnhandled)\n            return false;\n        this.onUnhandled(ev, action);\n        return true;\n    }\n    clear() {\n        this._handlers = {};\n        this.onUnhandled = null;\n    }\n    restart() {\n        Object.keys(this._handlers).forEach((ev) => {\n            this._handlers[ev] = this._handlers[ev].filter((i) => i && !i.once);\n        });\n        // this.onUnhandled = null;\n    }\n}\nconst global = new Actions();\nexport function install(ev, fn) {\n    fn.seen = false;\n    global.on(ev, fn);\n}\nexport function doAction(ev, action = {}) {\n    if (!(action instanceof Action)) {\n        action = new Action(action);\n    }\n    if (action.actor) {\n        if (!action.actor.canDoAction(ev)) {\n            return action.fail();\n        }\n    }\n    if (action.item) {\n        if (!action.item.canDoAction(ev)) {\n            return action.fail();\n        }\n    }\n    action.map.trigger(ev, action);\n    if (action.isDone())\n        return;\n    if (action.item) {\n        action.item.trigger(ev, action);\n        if (action.isDone())\n            return;\n    }\n    action.actor && action.actor.trigger(ev, action);\n    if (action.isDone())\n        return;\n    action.game.trigger(ev, action);\n    if (action.isDone())\n        return;\n    global.trigger(ev, action);\n}\nexport function defaultAction(ev, _action) {\n    // if we get here then there was no action installed, this is a problem\n    throw new Error('Unhandled action - ' + ev);\n}\nglobal.onUnhandled = defaultAction;\n","import * as Flags from '../flags/entity';\nimport * as ACTION from '../action';\nlet lastId = 0;\nexport class Entity {\n    // lastSeen: GWU.xy.Loc = [-1, -1];\n    constructor(kind) {\n        this._map = null;\n        this.key = null;\n        this.machineHome = 0;\n        this.changed = true;\n        this.actions = new ACTION.Actions(this);\n        this._actions = {};\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { entity: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n        this.kind = kind;\n        this.id = '' + ++lastId;\n    }\n    get map() {\n        return this._map;\n    }\n    isPlural() {\n        return this.hasEntityFlag(Flags.Entity.L_ALWAYS_PLURAL);\n    }\n    isOnMap() {\n        // return this.hasEntityFlag(Flags.Entity.L_ON_MAP);\n        return !!this._map;\n    }\n    addToMap(map, x, y) {\n        this.x = x;\n        this.y = y;\n        this.setEntityFlag(Flags.Entity.L_ON_MAP);\n        if (this._map === map) {\n            return false;\n        }\n        this._map = map;\n        this.kind.addToMap(this, map);\n        return true;\n    }\n    removeFromMap() {\n        this.clearEntityFlag(Flags.Entity.L_ON_MAP);\n        this.kind.removeFromMap(this);\n    }\n    get sprite() {\n        return this.kind.sprite;\n    }\n    get isDestroyed() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    isAt(x, y) {\n        return this.x === x && this.y === y;\n    }\n    clone() {\n        const other = new this.constructor(this.kind);\n        other.copy(this);\n        return other;\n    }\n    copy(other) {\n        this.depth = other.depth;\n        this.light = other.light;\n        Object.assign(this.flags, other.flags);\n        this.next = other.next;\n        this.x = other.x;\n        this.y = other.y;\n        this.kind = other.kind;\n        this.id = other.id;\n    }\n    canBeSeen() {\n        return this.kind.canBeSeen(this);\n    }\n    destroy() {\n        this.flags.entity |= Flags.Entity.L_DESTROYED;\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasAllEntityFlags(flags) {\n        return (this.flags.entity & flags) === flags;\n    }\n    setEntityFlag(flag) {\n        this.flags.entity |= flag;\n    }\n    clearEntityFlag(flag) {\n        this.flags.entity &= ~flag;\n    }\n    hasTag(tag) {\n        return this.kind.tags.includes(tag);\n    }\n    blocksMove() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    isKey(x, y) {\n        return this.key && this.key.matches(x, y);\n    }\n    forbidsCell(cell) {\n        return this.kind.forbidsCell(cell, this);\n    }\n    avoidsCell(cell) {\n        return this.kind.avoidsCell(cell, this);\n    }\n    getName(opts) {\n        return this.kind.getName(this, opts);\n    }\n    getDescription(opts) {\n        return this.kind.getDescription(this, opts);\n    }\n    getFlavor(opts) {\n        return this.kind.getFlavor(this, opts);\n    }\n    getVerb(verb) {\n        return this.kind.getVerb(this, verb);\n    }\n    drawSidebar(buffer, bounds) {\n        return this.kind.drawSidebar(this, buffer, bounds);\n    }\n    drawInto(dest, _observer) {\n        dest.drawSprite(this.sprite);\n    }\n    canDoAction(action) {\n        const v = this._actions[action];\n        if (v !== undefined)\n            return v;\n        return this.kind.canDoAction(action);\n    }\n    hasAction(action) {\n        return this.actions.has(action) || this.kind.actions.has(action);\n    }\n    on(action, fn) {\n        this.actions.on(action, fn);\n    }\n    once(action, fn) {\n        this.actions.once(action, fn);\n    }\n    off(action, fn) {\n        this.actions.off(action, fn);\n    }\n    trigger(name, action = {}) {\n        if (!(action instanceof ACTION.Action)) {\n            action = new ACTION.Action(action);\n        }\n        if (action.isDone())\n            return;\n        this.actions.trigger(name, action);\n        if (action.isDone())\n            return;\n        this.kind.trigger(name, action);\n    }\n    toString() {\n        return `${this.kind.id}-${this.id} @ ${this.x},${this.y}`;\n    }\n}\nEntity.default = {\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport { Entity } from './entity';\nimport * as Flags from '../flags';\nimport * as ACTION from '../action';\nexport class EntityKind {\n    constructor(config) {\n        this.tags = [];\n        this.requireTileFlags = 0;\n        this.forbidTileFlags = 0;\n        this.avoidTileFlags = 0;\n        this.requireTileTags = [];\n        this.forbidTileTags = [];\n        this.avoidTileTags = [];\n        this.actions = new ACTION.Actions(this);\n        this._actions = {};\n        this.id = config.id || config.name;\n        this.name = config.name;\n        this.flavor = config.flavor || this.name;\n        this.description = config.description || this.flavor;\n        this.sprite = GWU.sprite.make(config.sprite ? config.sprite : config);\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        if (config.requireTileFlags) {\n            this.requireTileFlags = GWU.flag.from(Flags.Tile, config.requireTileFlags);\n        }\n        if (config.avoidTileFlags) {\n            this.avoidTileFlags = GWU.flag.from(Flags.Tile, config.avoidTileFlags);\n        }\n        if (config.forbidTileFlags) {\n            this.forbidTileFlags = GWU.flag.from(Flags.Tile, config.forbidTileFlags);\n        }\n        if (config.requireTileTags) {\n            if (typeof config.requireTileTags === 'string') {\n                config.requireTileTags = config.requireTileTags.split(/[,|]/g);\n            }\n            this.requireTileTags = config.requireTileTags.map((t) => t.trim());\n        }\n        if (config.avoidTileTags) {\n            if (typeof config.avoidTileTags === 'string') {\n                config.avoidTileTags = config.avoidTileTags.split(/[,|]/g);\n            }\n            this.avoidTileTags = config.avoidTileTags.map((t) => t.trim());\n        }\n        if (config.forbidTileTags) {\n            if (typeof config.forbidTileTags === 'string') {\n                config.forbidTileTags = config.forbidTileTags.split(/[,|]/g);\n            }\n            this.forbidTileTags = config.forbidTileTags.map((t) => t.trim());\n        }\n        if (config.drawSidebar) {\n            this.drawSidebar = config.drawSidebar;\n        }\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Entity.default.sidebarFg);\n        if (config.actions) {\n            Object.entries(config.actions).forEach(([name, value]) => this.on(name, value));\n        }\n    }\n    make(opts) {\n        const entity = new Entity(this);\n        this.init(entity, opts);\n        return entity;\n    }\n    init(entity, opts = {}) {\n        if (opts.machineHome) {\n            entity.machineHome = opts.machineHome;\n        }\n    }\n    addToMap(_entity, _map) { }\n    removeFromMap(_entity) { }\n    canBeSeen(_entity) {\n        return true;\n    }\n    forbidsCell(cell, _entity) {\n        if (this.requireTileFlags &&\n            !cell.hasAllTileFlags(this.requireTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileFlags &&\n            cell.hasTileFlag(this.forbidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.requireTileTags.length &&\n            !cell.hasAllTileTags(this.requireTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileTags.length &&\n            cell.hasAnyTileTag(this.forbidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    avoidsCell(cell, entity) {\n        if (this.forbidsCell(cell, entity))\n            return true;\n        if (this.avoidTileFlags &&\n            cell.hasTileFlag(this.avoidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.avoidTileTags.length &&\n            cell.hasAnyTileTag(this.avoidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    getName(_entity, _opts) {\n        return this.name;\n    }\n    getDescription(_entity, _opts) {\n        return this.description;\n    }\n    getFlavor(_entity, _opts) {\n        return this.flavor;\n    }\n    getVerb(_entity, verb) {\n        return verb;\n    }\n    drawSidebar(entity, buffer, bounds) {\n        if (!entity.map)\n            return 0;\n        if (entity.isDestroyed)\n            return 0;\n        const mixer = new GWU.sprite.Mixer();\n        entity.map.getAppearanceAt(entity.x, entity.y, mixer);\n        buffer.drawSprite(bounds.x + 1, bounds.y, mixer);\n        buffer.wrapText(bounds.x + 3, bounds.y, bounds.width - 3, entity.getName(), this.sidebarFg);\n        return 1;\n    }\n    canDoAction(action) {\n        const v = this._actions[action];\n        if (v !== undefined)\n            return v;\n        return true; // by default you can do everything!\n    }\n    on(action, fn) {\n        if (Array.isArray(action)) {\n            action.forEach((a) => this.on(a, fn));\n            return;\n        }\n        if (fn === true) {\n            this._actions[action] = true;\n        }\n        else if (fn === false) {\n            this._actions[action] = false;\n        }\n        else {\n            this.actions.on(action, fn);\n            this._actions[action] = true;\n        }\n    }\n    off(action) {\n        if (Array.isArray(action)) {\n            action.forEach((a) => this.off(a));\n            return;\n        }\n        this._actions[action] = false;\n    }\n    trigger(name, action = {}) {\n        if (!(action instanceof ACTION.Action)) {\n            action = new ACTION.Action(action);\n        }\n        if (action.isDone())\n            return;\n        this.actions.trigger(name, action);\n    }\n}\nexport function make(opts, makeOpts = {}) {\n    const kind = new EntityKind(opts);\n    return kind.make(makeOpts);\n}\n","import * as GWU from 'gw-utils';\nexport class Status {\n    constructor() {\n        this._set = {};\n        this._time = {};\n        this._count = {};\n        this._done = {};\n        this._value = {};\n        this.changed = null;\n    }\n    clear(name) {\n        this.clearTime(name);\n        this.clearCount(name);\n        this.setOff(name);\n        return this._update(name);\n    }\n    get(name) {\n        return this._value[name] || false;\n    }\n    has(name) {\n        return this._value[name] || false;\n    }\n    _addDone(name, done) {\n        if (done) {\n            if (!this._done[name]) {\n                this._done[name] = done;\n            }\n        }\n    }\n    /**\n     * Sets the count for a status variable.\n     * If setting the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} count The count to set.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not setting the count turned the status on.\n     */\n    setCount(name, count, done) {\n        const status = this;\n        status._count[name] = Math.max(count, status._count[name] || 0);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Increments the count for the status by the given amount (1=default)\n     * If incrementing the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} [count=1] The count to incrmeent.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not incrementing the count turned the status on.\n     */\n    increment(name, count = 1, done) {\n        if (typeof count == 'function') {\n            done = count;\n            count = 1;\n        }\n        const status = this;\n        status._count[name] = (status._count[name] || 0) + count;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Decrements the count for the status by the given amount (1=default)\n     * If decrementing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @param {number} [count=1] The count to decrement.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    decrement(name, count = 1) {\n        const status = this;\n        status._count[name] = Math.max(0, (status._count[name] || 0) - count);\n        return this._update(name);\n    }\n    /**\n     * Clears all counts from the given status.\n     * If clearing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    clearCount(name) {\n        const status = this;\n        status._count[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Turns on the given status.\n     * @param {string} name The status to adjust.\n     * @param {function} [done] The function to call when the status is turned off.\n     * @returns {boolean} True if this turns on the status. (It could be on because of a time or count).\n     */\n    setOn(name, done) {\n        const status = this;\n        status._set[name] = true;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Turns off the given status.\n     *\n     * @param {string} name The status to adjust.\n     * @returns {boolean} True if this turns off the status. (It could be on because of a time or count).\n     */\n    setOff(name) {\n        const status = this;\n        status._set[name] = false;\n        return this._update(name);\n    }\n    /**\n     * Sets the time for a status variable.\n     * If setting the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to set.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not setting the time turned the status on.\n     */\n    setTime(name, value, done) {\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        const current = status._time[name] || 0;\n        status._time[name] = Math.max(value, current);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Adds to the time for a status variable.\n     * If adding to the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to add.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not adding the time turned the status on.\n     */\n    addTime(name, value = 1, done) {\n        if (typeof value == 'function') {\n            done = value;\n            value = 1;\n        }\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        status._time[name] = (status._time[name] || 0) + value;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Removes time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to remove.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    removeTime(name, value = 1) {\n        const status = this;\n        value = GWU.range.make(value).value();\n        status._time[name] = Math.max(0, (status._time[name] || 0) - value);\n        return this._update(name);\n    }\n    /**\n     * Removes all time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    clearTime(name) {\n        const status = this;\n        status._time[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Removes time for all status variables that have time.\n     * If removing the time turns off any status (it was on),\n     * then this function returns an object with all of those statuses as keys and false as the values.  Otherwise, false.\n     * @param {Status|object} source The object to set the status on.  If object.status is set then that is where the values are updated.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean|object} false or an object with the names of the statuses that were cleared as keys and false as the values.\n     */\n    decayAllTimes(delta = 1) {\n        const status = this;\n        const cleared = {};\n        let noticed = false;\n        for (let name in status._time) {\n            if (this.removeTime(name, delta)) {\n                noticed = true;\n                cleared[name] = false;\n            }\n        }\n        return noticed ? cleared : false;\n    }\n    /**\n     * Updates the value of the status and returns whether or not this change\n     * turned the status on or off (true = change, false = no change)\n     * @param {string} name The name of the status to update\n     * @returns {boolean} True if the value was turned on or off, False otherwise.\n     */\n    _update(name) {\n        const status = this;\n        const rec = this._value;\n        let was = rec[name];\n        let value = (rec[name] =\n            status._set[name] ||\n                status._time[name] > 0 ||\n                status._count[name] > 0 ||\n                false);\n        const doneFn = this._done[name];\n        if (!value && doneFn) {\n            doneFn(this, name);\n            status._done[name] = null;\n        }\n        if (was && !value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: false');\n            return true;\n        }\n        else if (!was && value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: true');\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Stats {\n    constructor(opts = {}) {\n        this._max = {};\n        this._rate = {};\n        this._value = {};\n        this.init(opts);\n    }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    getPct(name) {\n        const max = this.max(name);\n        return max ? Math.round((100 * this.get(name)) / max) : 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    regen(name) {\n        return this._rate[name] || null;\n    }\n    init(opts) {\n        for (let name in opts) {\n            this.set(name, opts[name]);\n        }\n    }\n    set(name, v, max) {\n        if (typeof v !== 'number') {\n            const r = GWU.range.make(v);\n            v = r.value();\n        }\n        this._value[name] = v;\n        this._max[name] = max || v;\n    }\n    gain(name, amount, allowOver = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        let v = this._value[name] + amount;\n        if (!allowOver) {\n            v = Math.min(v, this._max[name]);\n        }\n        this._value[name] = v;\n    }\n    drain(name, amount) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._value[name] = Math.max(0, this._value[name] - amount);\n    }\n    raiseMax(name, amount, raiseValue = true) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] += amount;\n        if (raiseValue) {\n            this.gain(name, amount);\n        }\n    }\n    reduceMax(name, amount, lowerValue = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] = Math.max(0, this._max[name] - amount);\n        if (lowerValue) {\n            this.drain(name, amount);\n        }\n    }\n    setRegen(name, turns, count = 1) {\n        const r = (this._rate[name] = this._rate[name] || { elapsed: 0 });\n        r.turns = turns;\n        r.count = count;\n    }\n    regenAll() {\n        for (let name in this._max) {\n            const r = this._rate[name];\n            r.elapsed += 1;\n            if (r.elapsed >= r.turns) {\n                this.gain(name, r.count);\n                r.elapsed -= r.turns;\n            }\n        }\n    }\n    restore(name, value) {\n        if (value === undefined)\n            value = this._max[name];\n        this._value[name] = value;\n    }\n    adjust(name, type, amount) {\n        amount = GWU.range.from(amount);\n        const v = amount.value();\n        const c = this.get(name);\n        if (type === 'inc') {\n            this.gain(name, amount);\n        }\n        else if (type === 'dec') {\n            this.drain(name, amount);\n        }\n        else if (type === 'set') {\n            this.set(name, amount);\n        }\n        else if (type === 'min') {\n            const v = amount.value();\n            if (this.get(name) < v) {\n                this.set(name, v);\n            }\n        }\n        else if (type === 'max') {\n            if (this.get(name) > v) {\n                this.set(name, v);\n            }\n        }\n        else {\n            throw new Error('Invalid stat adjust type: ' + type);\n        }\n        return c !== this.get(name);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity/entity';\nimport * as Flags from '../flags';\nimport { Status } from './status';\nimport { Stats } from './stat';\nimport * as ACTION from '../action';\nexport class Actor extends Entity.Entity {\n    constructor(kind) {\n        super(kind);\n        this.ai = {};\n        this._action = 'idle';\n        this._turnTime = 0;\n        this.leader = null;\n        this.items = null; // inventory\n        this.visionDistance = 99;\n        this.data = {};\n        this._costMap = null;\n        this._goalMap = null;\n        this._mapToMe = null;\n        this.next = null; // TODO - can we get rid of this?\n        // @ts-ignore - initialized in Entity\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n        this.kind = kind;\n        this.stats = new Stats();\n        this.status = new Status();\n    }\n    setData(key, value) {\n        this.data[key] = value;\n        this.changed = true;\n    }\n    copy(other) {\n        super.copy(other);\n        this.leader = other.leader;\n        this.items = other.items;\n        this.visionDistance = other.visionDistance;\n    }\n    destroy() {\n        this.setEntityFlag(Flags.Entity.L_DESTROYED);\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    setActorFlag(flag) {\n        this.flags.actor |= flag;\n    }\n    clearActorFlag(flag) {\n        this.flags.actor &= ~flag;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isDead() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n    /////////////// VISIBILITY\n    becameVisible() {\n        return (this.hasActorFlag(Flags.Actor.IS_VISIBLE) &&\n            !this.hasActorFlag(Flags.Actor.WAS_VISIBLE));\n    }\n    canSee(x, y) {\n        if (x instanceof Entity.Entity) {\n            return this.canSee(x.x, x.y) && this.kind.isAbleToSee(this, x);\n        }\n        else if (this.map) {\n            if (this.isPlayer()) {\n                return this.map.fov.isDirectlyVisible(x, y);\n            }\n            if (GWU.xy.distanceBetween(this.x, this.y, x, y) >\n                this.visionDistance) {\n                return false;\n            }\n            return GWU.xy.forLineBetween(this.x, this.y, x, y, (i, j) => {\n                if (this.map.cell(i, j).blocksVision())\n                    return false;\n            });\n        }\n        else {\n            return false; // need a map or an fov\n        }\n    }\n    canSeeOrSense(x, y) {\n        if (x instanceof Entity.Entity) {\n            return (this.canSeeOrSense(x.x, x.y) &&\n                (this.kind.isAbleToSee(this, x) ||\n                    this.kind.isAbleToSense(this, x)));\n        }\n        if (this.map && this.isPlayer()) {\n            return this.map.fov.isAnyKindOfVisible(x, y);\n        }\n        return this.canSee(x, y);\n    }\n    isAbleToSee(entity) {\n        return this.kind.isAbleToSee(this, entity);\n    }\n    isAbleToSense(entity) {\n        return this.kind.isAbleToSense(this, entity);\n    }\n    ////////////////// ACTOR\n    setAction(name) {\n        if (!this.canDoAction(name)) {\n            throw new Error('Actor cannot do action - ' + name);\n        }\n        this._action = name;\n    }\n    clearAction() {\n        this._action = 'idle';\n    }\n    act(game) {\n        let startedVisible = false;\n        if (game.player.canSee(this)) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            startedVisible = true;\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        if (this.becameVisible()) {\n            game.player.interrupt(this);\n        }\n        ACTION.doAction(this._action, { game, actor: this, map: this.map });\n        // let r = 0;\n        // if (this.ai && this.ai.fn) {\n        //     r = this.ai.fn(game, this);\n        // }\n        // if (r == 0 && this.kind.ai.fn) {\n        //     r = this.kind.ai.fn(game, this);\n        // }\n        // if (r) {\n        //     // did something\n        if (startedVisible || game.player.canSee(this)) {\n        }\n        //     return r;\n        // }\n        // // idle - always\n        return this._turnTime;\n    }\n    moveSpeed() {\n        return this.kind.moveSpeed;\n    }\n    startTurn() {\n        this._turnTime = 0;\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            if (!this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                !this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n            if (map &&\n                !this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        this._turnTime = Math.max(this._turnTime, Math.floor((pct * this.moveSpeed()) / 100));\n    }\n    ///////\n    willAttack(_other) {\n        return true;\n    }\n    canPass(_other) {\n        return false;\n    }\n    ////////////////// INVENTORY\n    avoidsItem(_item) {\n        return false;\n    }\n    canAddItem(_item) {\n        return false;\n    }\n    addItem(_item) { }\n    pickupItem(item, opts) {\n        return this.kind.pickupItem(this, item, opts);\n    }\n    dropItem(item, opts) {\n        return this.kind.dropItem(this, item, opts);\n    }\n    // PATHFINDING\n    addToMap(map, x, y) {\n        const mapChanged = super.addToMap(map, x, y);\n        if (mapChanged) {\n            this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n        }\n        return mapChanged;\n    }\n    removeFromMap() {\n        super.removeFromMap();\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    /*\n    Calculates and returns the actor's move cost map.\n    Used in pathfinding.\n    */\n    costMap() {\n        if (!this.map) {\n            throw new Error('Actor must have map to calculate costMap.');\n        }\n        const staleMap = !this.hasActorFlag(Flags.Actor.STABLE_COST_MAP);\n        if (staleMap && this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (!this._costMap) {\n            this._costMap = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        else if (!staleMap) {\n            return this._costMap;\n        }\n        const kind = this.kind;\n        const map = this.map;\n        this._costMap.update((_v, x, y) => {\n            const cell = map.cell(x, y);\n            return kind.cellCost(cell, this);\n        });\n        this.setActorFlag(Flags.Actor.STABLE_COST_MAP);\n        /*\n\n            if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n            && (!cellHasTMFlag(i, j, TM_IS_SECRET) || (discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)))\n            {\n                playerCostMap[i][j] = monsterCostMap[i][j] = cellHasTerrainFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? PDS_OBSTRUCTION : PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_SACRED)) {\n                    playerCostMap[i][j] = 1;\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_LAVA_INSTA_DEATH)) {\n        monsterCostMap[i][j] = PDS_FORBIDDEN;\n        if (player.status[STATUS_LEVITATING] || !player.status[STATUS_IMMUNE_TO_FIRE]) {\n            playerCostMap[i][j] = 1;\n        } else {\n            playerCostMap[i][j] = PDS_FORBIDDEN;\n        }\n            } else {\n                if (pmap[i][j].flags & HAS_MONSTER) {\n                    monst = monsterAtLoc(i, j);\n                    if ((monst.creatureState == MONSTER_SLEEPING\n                         || monst.turnsSpentStationary > 2\n             || (monst.info.flags & MONST_GETS_TURN_ON_ACTIVATION)\n                         || monst.creatureState == MONSTER_ALLY)\n                        && monst.creatureState != MONSTER_FLEEING)\n                    {\n                        playerCostMap[i][j] = 1;\n                        monsterCostMap[i][j] = PDS_FORBIDDEN;\n                        continue;\n                    }\n                }\n\n                if (cellHasTerrainFlag(i, j, (T_AUTO_DESCENT | T_IS_DF_TRAP))) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, T_IS_FIRE)) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_IMMUNE_TO_FIRE]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, (T_IS_DEEP_WATER | T_SPONTANEOUSLY_IGNITES))) {\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = 5;\n          }\n                    monsterCostMap[i][j] = 5;\n        } else if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n                   && cellHasTMFlag(i, j, TM_IS_SECRET) && !(discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)\n                   && !(pmap[i][j].flags & IN_FIELD_OF_VIEW))\n             {\n            // Secret door that the player can't currently see\n            playerCostMap[i][j] = 100;\n            monsterCostMap[i][j] = 1;\n                } else {\n                    playerCostMap[i][j] = monsterCostMap[i][j] = 1;\n                }\n            }\n        }\n    }\n        */\n        return this._costMap;\n    }\n    get goalMap() {\n        return this._goalMap;\n    }\n    hasGoal() {\n        return !!this._goalMap;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    clearGoal() {\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n    }\n    mapToMe() {\n        if (!this.map)\n            throw new Error('No map!');\n        if (!this._mapToMe) {\n            this._mapToMe = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        if (this._mapToMe.x !== this.x || this._mapToMe.y !== this.y) {\n            GWU.path.calculateDistances(this._mapToMe, this.x, this.y, this.costMap());\n        }\n        return this._mapToMe;\n    }\n}\nActor.default = {\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nexport const handlers = {};\nexport function installHandler(id, handler) {\n    handlers[id.toLowerCase()] = handler;\n}\nexport function make(id, config) {\n    if (!id)\n        return GWU.NOOP;\n    if (typeof id === 'string') {\n        if (!id.length)\n            throw new Error('Cannot create effect from empty string.');\n        if (!config) {\n            const parts = id.split(':');\n            id = parts.shift().toLowerCase();\n            config = parts;\n        }\n        const handler = handlers[id];\n        if (!handler)\n            throw new Error('Failed to find effect - ' + id);\n        return handler(config || {});\n    }\n    let steps;\n    if (Array.isArray(id)) {\n        steps = id\n            .map((config) => make(config))\n            .filter((a) => a !== null);\n    }\n    else if (typeof id === 'function') {\n        return id;\n    }\n    else {\n        steps = Object.entries(id)\n            .map(([key, config]) => make(key, config))\n            .filter((a) => a !== null);\n    }\n    if (steps.length === 1) {\n        return steps[0];\n    }\n    return (a) => {\n        const x = a.x;\n        const y = a.y;\n        for (let step of steps) {\n            a.x = x;\n            a.y = y;\n            step && step(a);\n            if (a.isDone())\n                return;\n        }\n    };\n}\nexport function makeArray(cfg) {\n    if (!cfg)\n        return [];\n    if (Array.isArray(cfg)) {\n        return cfg\n            .map((c) => make(c))\n            .filter((fn) => fn !== null);\n    }\n    if (typeof cfg === 'string') {\n        if (!cfg.length)\n            throw new Error('Cannot create effect from empty string.');\n        const parts = cfg.split(':');\n        cfg = parts.shift().toLowerCase();\n        const handler = handlers[cfg];\n        if (!handler)\n            return [];\n        return [handler(parts)];\n    }\n    else if (typeof cfg === 'function') {\n        return [cfg];\n    }\n    const steps = Object.entries(cfg).map(([key, config]) => make(key, config));\n    return steps.filter((s) => s !== null);\n}\nexport function trigger(effect, map, x, y, opts) {\n    const cfg = Object.assign({ map, x, y }, opts);\n    const action = new ACTION.Action(cfg);\n    const fn = handlers[effect];\n    if (!fn)\n        return;\n    fn(action);\n}\n/*\n\n/////////////////////////\n// TYPES\n\nexport type MakeEffectFn = (config: any) => Effect;\n\nexport const effectTypes: Record<string, MakeEffectFn> = {};\n\nexport function installType(id: string, type: MakeEffectFn) {\n    effectTypes[id] = type;\n}\n\n//////////////////////////\n// EFFECT\n\nexport interface Effect {\n    chance: number; //  100 * 100 =  100%\n    seen: boolean;\n    effects: EffectFn[];\n    next: Effect | null;\n\n    trigger(loc: MapXY, ctx?: EffectCtx): boolean;\n    // clone(): this;\n}\n\n//////////////////////////\n// MAKE\n\nexport interface EffectConfig {\n    chance?: number | string;\n    type?: string; // basic | bolt | beam | ball | burst | adjacent | spread\n\n    effects: string | EffectFn | (string | EffectFn)[] | Record<string, any>;\n    good?: boolean;\n    flags?: GWU.flag.FlagBase;\n\n    next?: EffectBase;\n\n    [key: string]: any;\n}\n\nexport type EffectBase =\n    | string\n    | EffectFn\n    | (string | EffectFn)[]\n    | EffectConfig\n    | Record<string, any>;\n\n*/\n// export class Effect {\n//     id = '';\n//     chance = 100 * 100; // 100%\n//     type: string; // self | bolt | beam | ball | burst | adjacent | spread\n//     aim: string; // actor | item | cell\n//     bolt: string | GWU.sprite.SpriteData | null = null;\n//     beam = false;\n//     range = 0;\n//     ball: string | GWU.sprite.SpriteData | null = null;\n//     radius = 0;\n//     center = false;\n//     effects: EffectFn[];\n//     good = false;\n//     seen = false;\n//     next: Effect | null = null;\n//     constructor(config: EffectConfig) {\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         this.aim = config.aim || 'actor';\n//         if (typeof config.chance === 'string') {\n//             // '20%' becomes 2000\n//             config.chance = Math.floor(Number.parseFloat(config.chance) * 100);\n//         }\n//         this.chance = config.chance || 100 * 100;\n//         const type = config.type || 'basic';\n//         const parts = type.split(':');\n//         if (type.startsWith('bolt') || type.startsWith('beam')) {\n//             // bolt:range:sprite\n//             this.type = parts[0];\n//             this.range = parts[1] ? Number.parseInt(parts[1]) : 99;\n//             this.bolt = parts[1] || 'missile';\n//             this.beam = type.startsWith('beam');\n//         } else if (\n//             type.startsWith('ball') ||\n//             type.startsWith('burst') ||\n//             type.startsWith('aura')\n//         ) {\n//             this.type = parts[0];\n//             this.radius = parts[1] ? Number.parseInt(parts[1]) : 2;\n//             this.range = parts[2] ? Number.parseInt(parts[2]) : 99;\n//             this.ball = parts[3] || 'explosion';\n//             this.center = !type.startsWith('aura');\n//         } else {\n//             this.type = 'basic';\n//         }\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         if (Array.isArray(config.effects)) {\n//             this.effects = config.effects.map((e) => {\n//                 if (typeof e === 'function') return e;\n//                 return effectFnFromString(e);\n//             });\n//         } else {\n//             this.effects = [];\n//             Object.entries(config.effects).forEach(([key, value]) => {\n//                 const handler = handlers[key.toLowerCase()];\n//                 if (handler) {\n//                     this.effects.push(handler(value));\n//                 } else if (typeof value === 'function') {\n//                     this.effects.push(value);\n//                 } else {\n//                     throw new Error('Unknown effect: ' + key);\n//                 }\n//             });\n//         }\n//         if (this.effects.length === 0) throw new Error('No effects!');\n//     }\n//     clone(): this {\n//         const other = new (this.constructor as new (\n//             config: EffectConfig\n//         ) => this)(this as EffectConfig);\n//         return other;\n//     }\n//     fire(map: Map.MapType, x: number, y: number, ctx: EffectCtx = {}): boolean {\n//         let didSomething = false;\n//         ctx.good = this.good;\n//         ctx.seen = this.seen;\n//         if (!this.chance || map.rng.chance(this.chance, 10000)) {\n//             // fire\n//             for (let effect of this.effects) {\n//                 if (GWU.data.gameHasEnded) break;\n//                 if (effect(map, x, y, ctx)) {\n//                     didSomething = true;\n//                 } else {\n//                     break;\n//                 }\n//             }\n//         }\n//         if (ctx.aware && didSomething) {\n//             this.seen = true;\n//         }\n//         this.good = ctx.good;\n//         return didSomething;\n//     }\n//     reset() {\n//         this.seen = false;\n//     }\n// }\n// export function effectFnFromString(e: string): EffectFn {\n//     const parts = e.split(':');\n//     if (parts.length === 0) throw new Error('Invalid effect string.');\n//     // @ts-ignore\n//     const name = parts.shift().toLowerCase();\n//     const handler = handlers[name] || null;\n//     if (!handler) {\n//         throw new Error('Failed to find effect handler: ' + name);\n//     }\n//     return handler(parts);\n// }\n/*\nexport function make(opts: EffectBase): Effect {\n    if (!opts) throw new Error('opts required to make effect.');\n    let config = {} as EffectConfig;\n\n    if (typeof opts === 'string') {\n        // Special case\n        if (opts.toLowerCase().startsWith('spread:')) {\n            const endPos = opts.indexOf(':', 8);\n            const tile = opts.substring(8, endPos);\n            config = {\n                type: 'spread:' + opts.substring(endPos),\n                effects: ['tile:' + tile],\n            };\n        } else {\n            config = { type: 'basic', effects: [opts] };\n        }\n    } else if (typeof opts === 'function') {\n        config = { type: 'basic', effects: [opts] };\n    } else if (Array.isArray(opts)) {\n        config = { type: 'basic', effects: opts };\n    } else {\n        // @ts-ignore\n        if (opts.effect) {\n            // @ts-ignore\n            opts.effects = [opts.effect];\n            delete opts.effect;\n        }\n\n        // object only\n        if (opts.effects) {\n            Object.assign(config, opts);\n            if (typeof config.effects === 'string') {\n                config.effects = [opts.effects];\n            } else if (typeof config.effects === 'function') {\n                config.effects = [opts.effects];\n            }\n        } else {\n            config.effects = {} as Record<string, any>;\n            Object.entries(opts).forEach(([key, value]) => {\n                const handler = handlers[key.toLowerCase()];\n                if (handler !== undefined) {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                } else if (typeof value === 'function') {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                } else {\n                    // @ts-ignore\n                    config[key] = value;\n                }\n            });\n        }\n    }\n\n    config.type = config.type || 'basic';\n\n    if (typeof config.type !== 'string')\n        throw new Error('Invalid effect type: ' + JSON.stringify(config.type));\n\n    const typeParts = config.type.split(':').map((t) => t.trim());\n    const typeName = typeParts.shift()!;\n\n    const makeFn = effectTypes[typeName.toLowerCase()];\n    if (!makeFn) throw new Error('Invalid effect type: ' + typeName);\n\n    const effect = makeFn(config);\n\n    if (Array.isArray(config.effects)) {\n        config.effects.forEach((e: string | EffectFn) => {\n            if (typeof e === 'function') {\n                effect.effects.push(e);\n            } else {\n                const parts = e.split(':').map((t: string) => t.trim());\n\n                if (parts.length === 1) {\n                    const effect = installedEffects[parts[0]];\n                    if (!effect)\n                        throw new Error(\n                            'Failed to find effect with id: ' + parts[0]\n                        );\n                    effect.effects.push(effect.trigger.bind(effect));\n                } else {\n                    const handler = handlers[parts[0].toLowerCase()];\n                    if (!handler)\n                        throw new Error('Unknown effect: ' + parts[0]);\n                    parts.shift();\n                    effect.effects.push(handler(parts));\n                }\n            }\n        });\n    } else {\n        Object.entries(config.effects).forEach(([key, value]) => {\n            const handler = handlers[key.toLowerCase()];\n            if (!handler)\n                throw new Error('Failed to find handler type: ' + key);\n\n            effect.effects.push(handler(value));\n        });\n    }\n\n    if (config.next) {\n        effect.next = make(config.next);\n    }\n\n    return effect;\n}\n\nexport function from(opts: EffectBase): Effect {\n    if (!opts) throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'object' && 'trigger' in opts) {\n        return opts as Effect;\n    }\n\n    if (typeof opts === 'string') {\n        const effect = installedEffects[opts];\n        if (effect) return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\n*/\n//////////////////////////////\n// INSTALL\nexport const installed = {};\nexport function install(id, config) {\n    const effect = make(config);\n    if (!effect)\n        throw new Error('Failed to make effect.');\n    installed[id] = effect;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(installed).forEach((e) => (e.seen = false));\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as ACTION from '../action';\nimport * as EFFECT from '../effect';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.actions = new ACTION.Actions(this);\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.tags = [];\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = GWU.sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { entity: 0, tile: 0, tileMech: 0 };\n        if (config.actions) {\n            Object.entries(config.actions).forEach(([ev, fn]) => {\n                this.on(ev, fn);\n            });\n        }\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                config.tags\n                    .split(/[,|]/)\n                    .map((t) => t.trim())\n                    .forEach((t) => {\n                    this.tags.push(t);\n                });\n            }\n            else {\n                this.tags = config.tags.slice().map((t) => t.trim());\n            }\n        }\n    }\n    hasTag(tag) {\n        return this.tags.includes(tag);\n    }\n    hasAnyTag(tags) {\n        return GWU.arraysIntersect(this.tags, tags);\n    }\n    hasAllTags(tags) {\n        return tags.every((t) => this.tags.includes(t));\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllEntityFlags(flag) {\n        return (this.flags.entity & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    // ACTIONS\n    hasAction(name) {\n        return this.actions.has(name);\n    }\n    on(name, fn) {\n        if (!fn) {\n            this.actions.off(name);\n            if (name === 'fire') {\n                this.flags.tile &= ~Flags.Tile.T_IS_FLAMMABLE;\n            }\n            return;\n        }\n        if (typeof fn === 'string') {\n            const effect = EFFECT.make(fn);\n            if (effect === null)\n                throw new Error('Failed to make effect: ' + fn);\n            fn = effect;\n        }\n        if (Array.isArray(fn)) {\n            fn.reverse().forEach((cb) => this.on(name, cb));\n        }\n        else if (typeof fn === 'object') {\n            Object.entries(fn)\n                .reverse()\n                .forEach(([key, value]) => {\n                const effect = EFFECT.make(key, value);\n                effect && this.on(name, effect);\n            });\n        }\n        else {\n            this.actions.on(name, fn);\n            if (name === 'fire') {\n                this.flags.tile |= Flags.Tile.T_IS_FLAMMABLE;\n            }\n        }\n    }\n    trigger(name, action = {}) {\n        if (!(action instanceof ACTION.Action)) {\n            action = new ACTION.Action(action);\n        }\n        if (!action.map)\n            throw new Error('Need action with a map.');\n        this.actions.trigger(name, action);\n    }\n    // INFO\n    isNull() {\n        return this === NULL;\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllEntityFlags(Flags.Entity.L_WALL_FLAGS);\n    }\n    isDoor() {\n        return this.hasTileFlag(Flags.Tile.T_IS_DOOR);\n    }\n    isStairs() {\n        return this.hasTileFlag(Flags.Tile.T_HAS_STAIRS);\n    }\n    isFloor() {\n        // Floor tiles do not block anything...\n        return (!this.hasEntityFlag(Flags.Entity.L_BLOCKS_EVERYTHING) &&\n            !this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    isDiggable() {\n        return this.isNull() || this.isWall();\n    }\n    getName(arg) {\n        let opts = {};\n        if (typeof arg === 'boolean') {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = GWU.color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription(opts) {\n        return this.description || this.getName(opts);\n    }\n    getFlavor(opts) {\n        return this.flavor || this.getName(opts);\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f;\n    let base = { flags: {}, sprite: {}, priority: 50 };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    let priority = base.priority;\n    if (typeof options.priority === 'string') {\n        let text = options.priority.replace(/ /g, '');\n        let index = text.search(/[+-]/);\n        if (index == 0) {\n            priority = base.priority + Number.parseInt(text);\n        }\n        else if (index == -1) {\n            if (text.search(/[a-zA-Z]/) == 0) {\n                const tile = tiles[text];\n                if (!tile)\n                    throw new Error('Failed to find tile for priority - ' + text + '.');\n                priority = tile.priority;\n            }\n            else {\n                priority = Number.parseInt(text);\n            }\n        }\n        else {\n            const id = text.substring(0, index);\n            const delta = Number.parseInt(text.substring(index));\n            const tile = tiles[id];\n            if (!tile)\n                throw new Error('Failed to find tile for priority - ' + id + '.');\n            priority = tile.priority + delta;\n        }\n    }\n    else if (options.priority !== undefined) {\n        priority = options.priority;\n    }\n    const flags = {\n        entity: GWU.flag.from(Flags.Entity, base.flags.entity, options.flags),\n        tile: GWU.flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: GWU.flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Flags.Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = GWU.light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        priority,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_b = options.ch) !== null && _b !== void 0 ? _b : base.sprite.ch,\n        fg: (_c = options.fg) !== null && _c !== void 0 ? _c : base.sprite.fg,\n        bg: (_d = options.bg) !== null && _d !== void 0 ? _d : base.sprite.bg,\n        opacity: (_e = options.opacity) !== null && _e !== void 0 ? _e : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_f = options.article) !== null && _f !== void 0 ? _f : base.article,\n        tags: options.tags || null,\n    };\n    const tile = new Tile(config);\n    if (base && base.actions) {\n        tile.actions.copy(base.actions);\n    }\n    if (options.actions) {\n        Object.entries(options.actions).forEach(([key, value]) => {\n            tile.on(key, value);\n        });\n    }\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string') {\n        const t = tiles[id];\n        if (t)\n            return t;\n        throw new Error('Failed to find tile with id - ' + id);\n    }\n    const t = all[id];\n    if (t)\n        return t;\n    throw new Error('Failed to find tile with index - ' + id);\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n// These are the minimal set of tiles to make the diggers work\nexport const NULL = install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\n","import { Tile, TileMech } from '../flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\n// import './tiles';\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as TILE from '../tile';\nimport * as ACTION from '../action';\nGWU.color.install('cellStatusName', 'light_blue');\nexport const NEVER_SEEN = {\n    tiles: [TILE.NULL],\n    item: null,\n    actor: null,\n    flags: {\n        cell: 0,\n        entity: TILE.NULL.flags.entity,\n        tile: TILE.NULL.flags.tile,\n        tileMech: TILE.NULL.flags.tileMech,\n    },\n};\nexport class Cell {\n    constructor(map, x, y, groundTile) {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.x = -1;\n        this.y = -1;\n        // toFire: Partial<Effect.EffectCtx>[] = [];\n        this.memory = null;\n        this.volume = 0;\n        // this._entities = new CellEntities(this);\n        this.flags = { cell: Flags.Cell.NEEDS_REDRAW };\n        this.tiles = [TILE.tiles.NULL];\n        this.map = map;\n        this.x = x;\n        this.y = y;\n        this.snapshot = GWU.sprite.makeMixer();\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n        this.memory = NEVER_SEEN;\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    get hasStableSnapshot() {\n        return this.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    }\n    get hasStableMemory() {\n        return this.hasCellFlag(Flags.Cell.STABLE_MEMORY);\n    }\n    storeMemory() {\n        var _a;\n        this.setCellFlag(Flags.Cell.STABLE_MEMORY);\n        // store memory\n        this.memory = {\n            flags: {\n                cell: this.flags.cell,\n                entity: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.entity) || 0), 0),\n                tile: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tile) || 0), 0),\n                tileMech: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tileMech) || 0), 0),\n            },\n            tiles: this.tiles.slice(),\n            item: ((_a = this.item) === null || _a === void 0 ? void 0 : _a.clone()) || null,\n            actor: null,\n        };\n        if (this.hasItem()) {\n            const item = this.item;\n            if (item) {\n                this.memory.flags.entity |= item.flags.entity;\n            }\n        }\n        if (this.hasActor()) {\n            const actor = this.actor;\n            if (actor) {\n                this.memory.flags.entity |= actor.flags.entity;\n            }\n            this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n    }\n    clearMemory() {\n        this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT | Flags.Cell.STABLE_MEMORY);\n        this.memory = null;\n        this.needsRedraw = true;\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles.length = other.tiles.length;\n        for (let i = 0; i < this.tiles.length; ++i) {\n            this.tiles[i] = other.tiles[i];\n        }\n        this.machineId = other.machineId;\n        // this._actor = other.actor;\n        // this._item = other.item;\n        this.memory = other.memory;\n        this.volume = other.volume;\n        this.map = other.map;\n        this.x = other.x;\n        this.y = other.y;\n        other.getSnapshot(this.snapshot);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasEntityFlag(flag, checkEntities = false) {\n        var _a, _b;\n        if (this.tiles.some((t) => t && t.flags.entity & flag))\n            return true;\n        if (!checkEntities)\n            return false;\n        if (this.hasItem()) {\n            if ((_a = this.item) === null || _a === void 0 ? void 0 : _a.hasEntityFlag(flag))\n                return true;\n        }\n        if (this.hasActor()) {\n            if ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.hasEntityFlag(flag))\n                return true;\n        }\n        return false;\n    }\n    hasAllEntityFlags(flags, checkEntities = false) {\n        return (this.entityFlags(checkEntities) & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    hasTileTag(tag) {\n        return this.tiles.some((tile) => tile && tile.hasTag(tag));\n    }\n    hasAllTileTags(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAllTags(tags);\n        });\n    }\n    hasAnyTileTag(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAnyTag(tags);\n        });\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    entityFlags(withEntities = false) {\n        var _a, _b;\n        let flag = this.tiles.reduce((out, t) => out | (t ? t.flags.entity : 0), 0);\n        if (withEntities) {\n            if (this.hasItem()) {\n                flag |= ((_a = this.item) === null || _a === void 0 ? void 0 : _a.flags.entity) || 0;\n            }\n            if (this.hasActor()) {\n                flag |= ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.flags.entity) || 0;\n            }\n        }\n        return flag;\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.Cell.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            if (!this.memory) {\n                this.flags.cell |= Flags.Cell.NEEDS_REDRAW;\n                this.flags.cell &= ~Flags.Cell.STABLE_SNAPSHOT;\n                this.map.needsRedraw = true;\n            }\n        }\n        else {\n            this.flags.cell &= ~Flags.Cell.NEEDS_REDRAW;\n        }\n    }\n    get changed() {\n        return !!(this.flags.cell & Flags.Cell.CHANGED);\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.entity & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return this.tiles.some((t) => t && t.blocksVision());\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) &&\n            !this.tiles.some((t) => t && t.hasTileFlag(Flags.Tile.T_BRIDGE)));\n    }\n    blocksMove() {\n        return this.tiles.some((t) => t && t.blocksMove());\n    }\n    blocksEffects() {\n        return this.tiles.some((t) => t && t.blocksEffects());\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isNull() {\n        return this.tiles.every((t) => !t || t === TILE.tiles.NULL);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllEntityFlags(Flags.Entity.L_WALL_FLAGS);\n    }\n    isDoor() {\n        return this.hasTileFlag(Flags.Tile.T_IS_DOOR);\n    }\n    isStairs() {\n        return this.hasTileFlag(Flags.Tile.T_HAS_STAIRS);\n    }\n    isFloor() {\n        // Floor tiles do not block anything...\n        return (!this.hasEntityFlag(Flags.Entity.L_BLOCKS_EVERYTHING) &&\n            !this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    isGateSite() {\n        return this.hasCellFlag(Flags.Cell.IS_GATE_SITE);\n    }\n    isSecretlyPassable() {\n        return this.hasEntityFlag(Flags.Entity.L_SECRETLY_PASSABLE);\n    }\n    // hasKey(): boolean {\n    //     return this._entities.some(\n    //         (e) => !!e.key && e.key.matches(this.x, this.y)\n    //     );\n    // }\n    hasLiquid() {\n        return this.hasTileFlag(Flags.Tile.T_ANY_LIQUID);\n    }\n    // @returns - whether or not the change results in a change to the cell tiles.\n    //          - If there is a change to cell lighting, the cell will have the\n    //          - LIGHT_CHANGED flag set.\n    setTile(tile, opts = {}) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        if (current === tile) {\n            if (opts.volume) {\n                this.volume += opts.volume;\n            }\n            return false;\n        }\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (this.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && this.hasItem())\n            return false;\n        if (opts.blockedByActors && this.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && this.highestPriority() > tile.priority)\n            return false;\n        // TODO - Are we blocked by other layer (L_BLOCKS_SURFACE on an already present tile)?\n        if (tile.depth > Flags.Depth.GROUND && tile.groundTile) {\n            const currentGround = this.depthTile(Flags.Depth.GROUND);\n            const wantGround = TILE.get(tile.groundTile);\n            if (currentGround !== wantGround) {\n                if (!this.setTile(wantGround, opts)) {\n                    return false;\n                }\n            }\n        }\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        if (tile.hasEntityFlag(Flags.Entity.L_BLOCKS_SURFACE)) {\n            this.clearDepth(Flags.Depth.SURFACE);\n        }\n        if (opts.machine) {\n            this.machineId = opts.machine;\n        }\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (current.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR) !==\n            tile.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.map.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            this.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            this.map.setMapFlag(Flags.Map.MAP_HAS_FIRE);\n        }\n        this.volume = opts.volume || 0;\n        if (tile.depth === Flags.Depth.GAS) {\n            this.map.setMapFlag(Flags.Map.MAP_HAS_GAS);\n        }\n        if (tile.depth === Flags.Depth.LIQUID) {\n            this.map.setMapFlag(Flags.Map.MAP_HAS_LIQUID);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clearTiles(tile) {\n        this.tiles[0] = TILE.tiles.NULL;\n        for (let i = 1; i < this.tiles.length; ++i) {\n            this.tiles[i] = null;\n        }\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.needsRedraw = true;\n    }\n    clear(tile) {\n        this.tiles = [TILE.tiles.NULL];\n        this.flags.cell = 0;\n        this.needsRedraw = true;\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.volume = 0;\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.snapshot.blackOut();\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            if (depth === Flags.Depth.GAS) {\n                this.volume = 0;\n            }\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    tileWithAction(name) {\n        return this.tiles.find((t) => t === null || t === void 0 ? void 0 : t.hasAction(name)) || null;\n    }\n    trigger(action, ctx = {}) {\n        if (!(ctx instanceof ACTION.Action)) {\n            ctx = new ACTION.Action(ctx);\n        }\n        ctx.x = this.x;\n        ctx.y = this.y;\n        ctx.map = this.map;\n        this.tiles.forEach((t) => t && t.trigger(action, ctx));\n    }\n    hasAction(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasAction(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.Cell.HAS_ITEM);\n    }\n    get item() {\n        return this.map.itemAt(this.x, this.y);\n    }\n    canAddItem(_item) {\n        return true;\n    }\n    canRemoveItem(_item) {\n        return true;\n    }\n    _addItem(_item) {\n        this.setCellFlag(Flags.Cell.HAS_ITEM);\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeItem(item) {\n        let hasItems = false;\n        let foundIndex = -1;\n        this.map.items.forEach((obj, index) => {\n            if (obj === item) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasItems = true;\n            }\n        });\n        if (!hasItems) {\n            this.clearCellFlag(Flags.Cell.HAS_ITEM);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.Cell.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.Cell.HAS_PLAYER);\n    }\n    get actor() {\n        return this.map.actorAt(this.x, this.y);\n    }\n    canAddActor(_actor) {\n        return !this.hasActor();\n    }\n    canRemoveActor(_actor) {\n        return true;\n    }\n    _addActor(actor) {\n        this.setCellFlag(Flags.Cell.HAS_ACTOR);\n        if (actor.isPlayer()) {\n            this.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeActor(actor) {\n        let hasActor = false;\n        let foundIndex = -1;\n        this.map.actors.forEach((obj, index) => {\n            if (obj === actor) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasActor = true;\n            }\n        });\n        if (!hasActor) {\n            this.clearCellFlag(Flags.Cell.HAS_ACTOR | Flags.Cell.HAS_PLAYER);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    hasFx() {\n        return !!(this.flags.cell & Flags.Cell.HAS_FX);\n    }\n    get fx() {\n        return this.map.fxAt(this.x, this.y);\n    }\n    _addFx(_fx) {\n        this.setCellFlag(Flags.Cell.HAS_FX);\n        this.needsRedraw = true;\n    }\n    _removeFx(_fx) {\n        if (!this.fx) {\n            this.clearCellFlag(Flags.Cell.HAS_FX);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        if (this.hasActor()) {\n            const actor = this.map.actorAt(this.x, this.y);\n            if (actor && actor.sprite.ch)\n                return actor.sprite.ch;\n        }\n        if (this.hasItem()) {\n            const item = this.map.itemAt(this.x, this.y);\n            if (item && item.sprite.ch)\n                return item.sprite.ch;\n        }\n        if (this.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return '=';\n        }\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n    drawSidebar(buffer, bounds) {\n        const mixer = new GWU.sprite.Mixer();\n        this.map.getAppearanceAt(this.x, this.y, mixer);\n        buffer.drawSprite(bounds.x + 1, bounds.y, mixer);\n        buffer.wrapText(bounds.x + 3, bounds.y, bounds.width - 3, this.getName(), 'cellStatusName');\n        return 1;\n    }\n    toString() {\n        return `Cell @ ${this.x},${this.y}`;\n    }\n}\n","import { Entity } from '../entity/entity';\nimport { Depth } from '../flags';\nexport class Item extends Entity {\n    constructor(kind) {\n        super(kind);\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore - initialized in constructor\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n        this.kind = kind;\n    }\n    isPlural() {\n        if (this.quantity > 1)\n            return true;\n        return super.isPlural();\n    }\n    copy(other) {\n        super.copy(other);\n        this.quantity = other.quantity;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    // getAction(name: string): ACTION.ItemActionBase | undefined {\n    //     const action = this.kind.actions[name];\n    //     return action;\n    // }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n}\nItem.default = {\n    sidebarFg: 'gold',\n};\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor/actor';\nimport { Cell } from '../map/cell';\nimport { Item } from '../item/item';\nimport * as Flags from '../flags';\nexport function messageYou(name, view, args) {\n    const field = args[0] || 'actor';\n    const actor = this.get(view, field);\n    if (actor && actor instanceof Actor) {\n        if (actor.isPlayer()) {\n            return 'you';\n        }\n        else {\n            return 'the ' + actor.getName();\n        }\n    }\n    return actor || name;\n}\nGWU.text.addHelper('you', messageYou);\nexport function messageThe(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else {\n                return 'the ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'the ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('the', messageThe);\nexport function messageA(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else if (value.hasEntityFlag(Flags.Entity.L_FORMAL_NAME)) {\n                return value.getName();\n            }\n        }\n        if ('getName' in value) {\n            const name = value.getName();\n            const char = GWU.text.firstChar(name);\n            const ana = /[aeiouy]/i.exec(char) ? 'an ' : 'a ';\n            return ana + name;\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('a', messageA);\nGWU.text.addHelper('an', messageA);\nexport function messageVerb(_name, view, args) {\n    const verb = args[0] || 'verb';\n    const value = args[1]\n        ? this.get(view, args[1])\n        : view.actor || view.target || view.item || view.cell;\n    let plural = false;\n    if (value) {\n        if (value instanceof Cell) {\n            plural = false;\n        }\n        else if (value instanceof Actor) {\n            plural = value.isPlural();\n        }\n        else if (value instanceof Item) {\n            plural = value.isPlural();\n        }\n    }\n    return plural ? GWU.text.toPluralVerb(verb) : GWU.text.toSingularVerb(verb);\n}\nGWU.text.addHelper('verb', messageVerb);\n","import * as GWU from 'gw-utils';\nexport class PainMessages {\n    constructor(msgs = []) {\n        this._msgs = [];\n        msgs.forEach((m) => this.add(m));\n    }\n    add(msg) {\n        this._msgs.push(msg);\n        return this;\n    }\n    get(pct, singular = true) {\n        const index = GWU.clamp(Math.floor(pct * this._msgs.length), 0, this._msgs.length - 1);\n        const msg = this._msgs[index];\n        return this._format(msg, singular);\n    }\n    _format(msg, singular = true) {\n        return msg.replace(/\\[(\\w+)\\|?(\\w*)\\]/g, singular ? '$1' : '$2');\n    }\n}\nexport const painMessages = {};\nexport function installPain(id, pain) {\n    if (Array.isArray(pain)) {\n        pain = new PainMessages(pain);\n    }\n    painMessages[id] = pain;\n}\nexport function getPain(id) {\n    const m = painMessages[id];\n    if (!m)\n        throw new Error('No such pain message index: ' + id);\n    return m;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nexport function fillSafetyMap(safetyMap, actor, target) {\n    const costGrid = GWU.grid.alloc(actor.costMap());\n    GWU.path.calculateDistances(safetyMap, target.x, target.y, costGrid, true);\n    safetyMap.update((v) => v * -1); // Can set factor to be < -1 e.g. -1.2\n    actor.map.actors.forEach((a) => {\n        if (a.willAttack(actor)) {\n            costGrid[a.x][a.y] = GWU.path.FORBIDDEN; // This is why we allocate a copy\n        }\n    });\n    actor.map.eachCell((c, x, y) => {\n        if (c.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n            safetyMap[x][y] -= GWU.path.AVOIDED; // loop cells are extra good\n        }\n    });\n    GWU.path.rescan(safetyMap, costGrid, true);\n    safetyMap.update((v) => (v <= -30000 ? 30000 : v));\n    GWU.grid.free(costGrid);\n}\n","// AI functions\n// actor is current actor\n// returns time until next turn for this actor\n// < 0 means do not requeue\nexport const ais = {};\nexport function install(name, fn) {\n    ais[name] = fn;\n}\nexport function make(opts) {\n    if (typeof opts === 'string') {\n        opts = { fn: opts };\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    if (typeof opts.fn === 'string') {\n        opts.fn = ais[opts.fn];\n    }\n    if (!opts.fn) {\n        opts.fn = ais.default;\n    }\n    return opts;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as ACTION from '../action';\nexport function wander(action) {\n    const map = action.map;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor required.');\n    // Do we have a wander target?\n    let goalMap = actor.goalMap;\n    if (!goalMap) {\n        //      pick new wander target\n        const costMap = actor.costMap();\n        const loc = GWU.random.matchingLoc(costMap.width, costMap.height, (x, y) => {\n            return costMap[x][y] > 0 && costMap[x][y] !== GWU.path.NO_PATH;\n        });\n        if (!loc || loc[0] < 0 || loc[1] < 0) {\n            console.log('No wander location found!');\n            return action.didNothing();\n        }\n        //      build distance map to target\n        goalMap = actor.setGoal(loc[0], loc[1]);\n    }\n    // take the next step to the target\n    const step = GWU.path.nextStep(goalMap, actor.x, actor.y, (x, y) => {\n        if (!map.hasActor(x, y))\n            return false;\n        const other = map.actorAt(x, y);\n        if (!other) {\n            console.log(`Cell @ ${x},${y} has actor flag, but no actor.`);\n            map.cell(x, y).clearCellFlag(Flags.Cell.HAS_ACTOR);\n            return false;\n        }\n        return !actor.canPass(other);\n    });\n    if (!step) {\n        actor.clearGoal();\n        return action.didNothing();\n    }\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        return action.didNothing();\n    }\n    action.dir = step;\n    return ACTION.doAction('moveDir', action);\n}\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nimport * as AI from './ai';\nimport { wander } from './wander';\n/*\nhttp://roguebasin.com/index.php/Roguelike_Intelligence_-_Stateless_AIs\n-- Typical AI\n*/\nexport function typical(action) {\n    // const map = action.map;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor required.');\n    if (actor.isDead())\n        return action.didNothing();\n    const target = action.game.player;\n    const tryAttack = actor.canSee(target) && actor.willAttack(target);\n    if (tryAttack) {\n        const damagePct = 100 - actor.stats.getPct('health');\n        const morale = actor.stats.get('morale');\n        const chargeChance = 100;\n        const retreatChance = 0;\n        actor.ai.lastSawPlayer = [target.x, target.y];\n        actor.clearGoal();\n        console.log('SAW YOU!', actor.id, target.x, target.y);\n        if (damagePct > morale) {\n            if (canRunAwayFrom(action)) {\n                runAwayFrom(action);\n            }\n            else if (canAttack(action)) {\n                attack(action);\n            }\n            return;\n        }\n        if (tooFarFrom(action) && canAttack(action) && canMoveToward(action)) {\n            if (GWU.random.chance(chargeChance)) {\n                moveToward(action);\n            }\n            else {\n                attack(action);\n            }\n            return;\n        }\n        if (tooCloseTo(action) &&\n            canAttack(action) &&\n            canMoveAwayFrom(action)) {\n            if (GWU.random.chance(retreatChance)) {\n                moveAwayFrom(action);\n            }\n            else {\n                attack(action);\n            }\n            return;\n        }\n        if (canAttack(action)) {\n            attack(action);\n            return;\n        }\n        if (tooFarFrom(action) && canMoveToward(action)) {\n            moveToward(action);\n            return;\n        }\n        if (tooCloseTo(action) && canMoveAwayFrom(action)) {\n            moveAwayFrom(action);\n            return;\n        }\n    }\n    // TODO - Use scent, menory, other teammates info, ...\n    else if (actor.ai.lastSawPlayer) {\n        if (!actor.hasGoal()) {\n            const loc = actor.ai.lastSawPlayer;\n            actor.setGoal(loc[0], loc[1]);\n        }\n        console.log('CHASING YOU!', actor.id, actor.goalMap.x, actor.goalMap.y);\n        moveTowardGoal(action);\n        if (action.isSuccess()) {\n            return;\n        }\n        actor.ai.lastSawPlayer = null; // no longer\n        actor.clearGoal();\n    }\n    // check if they noticed the player scent\n    if (target.scent) {\n        action.dir = target.scent.nextDir(actor.x, actor.y);\n        if (action.dir) {\n            console.log('tracking scent', actor.id, action.dir);\n            ACTION.doAction('moveDir', action);\n            if (action.isDone())\n                return;\n        }\n    }\n    const wanderOpt = GWU.object.firstOpt('wander', actor.ai, actor.kind.ai, false);\n    if (wanderOpt) {\n        if (actor.goalMap || // we have a current goal\n            typeof wanderOpt !== 'number' || // wander: true\n            GWU.random.chance(wanderOpt) // chance\n        ) {\n            wander(action);\n            if (action.isSuccess())\n                return;\n        }\n        else {\n            ACTION.doAction('idle', action);\n            if (action.isSuccess()) {\n                return;\n            }\n        }\n    }\n    return ACTION.doAction('standStill', action);\n}\nAI.install('typical', typical);\nAI.install('default', typical);\nexport function canMoveToward(action) {\n    // can move?\n    const map = action.map;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor required.');\n    const target = action.target;\n    if (!target)\n        throw new Error('No target.');\n    let x = target.x;\n    let y = target.y;\n    const distanceMap = GWU.grid.alloc(map.width, map.height);\n    const costMap = actor.costMap();\n    GWU.path.calculateDistances(distanceMap, x, y, costMap);\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        if (distanceMap[x][y] < center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    GWU.grid.free(distanceMap);\n    return count > 0;\n}\nexport function moveToward(action) {\n    // pathfinding?\n    const map = action.map;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor required.');\n    const target = action.target;\n    if (!target)\n        throw new Error('No target.');\n    let x = target.x;\n    let y = target.y;\n    const distanceMap = GWU.grid.alloc(map.width, map.height);\n    const costMap = actor.costMap();\n    GWU.path.calculateDistances(distanceMap, x, y, costMap);\n    const step = GWU.path.nextStep(distanceMap, actor.x, actor.y, (x, y) => {\n        const cell = map.cell(x, y);\n        if (!cell)\n            return true;\n        if (cell.hasActor() && cell.actor !== action.target)\n            return true;\n        if (cell.blocksMove())\n            return true;\n        return false;\n    });\n    GWU.grid.free(distanceMap);\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        return ACTION.doAction('standStill', action);\n    }\n    action.dir = step;\n    return ACTION.doAction('moveDir', action);\n}\nexport function canMoveAwayFrom(_action) {\n    // can move?\n    // const distanceMap = ctx.distanceMap;\n    // const canMoveDiagonal = false;\n    // // look for distance > current around me\n    // let center = distanceMap[actor.x][actor.y];\n    // let count = 0;\n    // GWU.xy.eachNeighbor(\n    //     actor.x,\n    //     actor.y,\n    //     (x, y) => {\n    //         const d = distanceMap[x][y];\n    //         if (d >= GWU.path.NO_PATH) return;\n    //         if (distanceMap[x][y] > center) {\n    //             ++count;\n    //         }\n    //     },\n    //     canMoveDiagonal\n    // );\n    // return ctx.done(count > 0);\n    return false;\n}\nexport function moveAwayFrom(action) {\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Need actor.');\n    // safety/strategy?\n    // always move using safety map?\n    actor.endTurn();\n    return action.didSomething();\n}\nexport function canRunAwayFrom(_action) {\n    // can move?\n    return false;\n}\nexport function runAwayFrom(action) {\n    // move toward loop if away from player\n    if (!action.actor)\n        throw new Error('Need actor.');\n    action.actor.endTurn();\n    return action.didSomething();\n}\nexport function canAttack(action) {\n    // has attack?\n    // attack affects player?\n    // cooldown?\n    const actor = action.actor;\n    const target = action.target;\n    if (!actor || !target)\n        return false;\n    return GWU.xy.distanceFromTo(actor, target) <= 1;\n}\nexport function attack(action) {\n    const actor = action.actor;\n    const target = action.target;\n    if (!actor || !target)\n        throw new Error('Actor and Target required to attack.');\n    console.log('attack!', actor.id, target.id);\n    return ACTION.doAction('attack', action);\n}\nexport function tooFarFrom(action) {\n    // diagonal?\n    const actor = action.actor;\n    const target = action.target;\n    if (!actor || !target)\n        return true;\n    return GWU.xy.distanceFromTo(actor, target) > 1;\n}\nexport function tooCloseTo(action) {\n    const actor = action.actor;\n    const target = action.target;\n    if (!actor || !target)\n        return true;\n    return GWU.xy.distanceFromTo(actor, target) < 1;\n}\n// TODO - make an action\nexport function moveTowardGoal(action) {\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Need actor.');\n    if (!actor.hasGoal())\n        return action.didNothing();\n    const nextStep = GWU.path.nextStep(actor.goalMap, actor.x, actor.y, (x, y) => {\n        return actor.map.hasActor(x, y);\n    });\n    if (!nextStep) {\n        actor.clearGoal();\n        return action.didNothing();\n    }\n    action.dir = nextStep;\n    return ACTION.doAction('moveDir', action);\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Actor } from './actor';\nimport * as AI from '../ai';\nexport class ActorKind extends Entity.EntityKind {\n    constructor(opts) {\n        super(opts);\n        this.flags = {\n            actor: Flags.Actor.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.vision = {};\n        this.bump = ['attack'];\n        this.moveSpeed = 100;\n        if (opts.flags) {\n            this.flags.actor = GWU.flag.from(Flags.Actor, this.flags.actor, opts.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, opts.flags);\n        }\n        if (opts.vision) {\n            this.vision.normal = opts.vision;\n        }\n        this.stats = Object.assign({ health: 1, morale: 100 }, opts.stats);\n        if (opts.moveSpeed) {\n            this.moveSpeed = opts.moveSpeed;\n        }\n        this.ai = AI.make(opts.ai || 'default');\n        if (opts.bump) {\n            if (typeof opts.bump === 'string') {\n                opts.bump = opts.bump.split(/[|,]/g).map((t) => t.trim());\n            }\n            if (typeof opts.bump === 'function') {\n                opts.bump = [opts.bump];\n            }\n            if (Array.isArray(opts.bump)) {\n                this.bump = opts.bump.slice();\n            }\n        }\n        if (opts.waterOnly) {\n            this.forbidTileFlags =\n                this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.avoidTileFlags =\n                this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.requireTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n        }\n        else if (opts.lavaOnly) {\n            this.forbidTileFlags = this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n            this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n            this.requireTileFlags |= Flags.Tile.T_LAVA;\n        }\n        else {\n            if (opts.swim) {\n                this.avoidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            else {\n                this.forbidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            if (opts.fly) {\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n                this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_LAVA;\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.avoidTileFlags =\n                    this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n        }\n        this.sidebarFg = GWU.color.from(opts.sidebarFg || Actor.default.sidebarFg);\n    }\n    make(options) {\n        const actor = new Actor(this);\n        this.init(actor, options);\n        return actor;\n    }\n    init(actor, options = {}) {\n        super.init(actor, options);\n        Object.assign(actor.flags, this.flags);\n        // if (options.fov) {\n        //     actor.fov = options.fov;\n        // }\n        // if (options.memory) {\n        //     actor.memory = options.memory;\n        // }\n        if (this.vision.normal) {\n            actor.visionDistance = this.vision.normal;\n        }\n        actor.stats.init(this.stats);\n    }\n    addToMap(actor, map) {\n        super.addToMap(actor, map);\n        // if (this.hasActorFlag(Flags.Actor.HAS_MEMORY)) {\n        //     actor.memory = Memory.get(actor, map);\n        // }\n        // if (this.hasActorFlag(Flags.Actor.USES_FOV)) {\n        //     actor.fov = new GWU.fov.FovSystem(map);\n        //     actor.fov.follow = actor;\n        //     if (actor.memory) {\n        //         actor.fov.callback = actor.memory;\n        //     }\n        // }\n    }\n    removeFromMap(actor) {\n        super.removeFromMap(actor);\n        // if (actor._map && actor.memory) {\n        //     Memory.store(actor, actor._map, actor.memory);\n        // }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    canSeeEntity(_actor, _entity) {\n        return true;\n    }\n    isAbleToSee(_actor, _entity) {\n        return true;\n    }\n    isAbleToSense(_actor, _entity) {\n        return true;\n    }\n    forbidsCell(cell, actor) {\n        if (super.forbidsCell(cell, actor)) {\n            return true;\n        }\n        if (cell.blocksMove())\n            return true;\n        return false;\n    }\n    avoidsCell(cell, actor) {\n        if (super.avoidsCell(cell, actor))\n            return true;\n        if (cell.blocksPathing())\n            return true;\n        return false;\n    }\n    getFlavor(actor, opts) {\n        const flavor = actor.isPlayer() ? 'yourself' : this.flavor;\n        if (opts && opts.action) {\n            return flavor + ' standing';\n        }\n        return flavor;\n    }\n    pickupItem(actor, item, _opts) {\n        if (!GWU.list.push(actor, 'items', item))\n            return false;\n        // TODO - Pickup effects\n        return true;\n    }\n    dropItem(actor, item, _opts) {\n        if (!GWU.list.remove(actor, 'items', item))\n            return false;\n        // TODO - Drop effects\n        return true;\n    }\n    cellCost(cell, actor) {\n        if (this.forbidsCell(cell, actor)) {\n            return cell.hasEntityFlag(Flags.Entity.L_BLOCKS_DIAGONAL)\n                ? GWU.path.OBSTRUCTION\n                : GWU.path.FORBIDDEN;\n        }\n        else if (this.avoidsCell(cell, actor)) {\n            return GWU.path.AVOIDED;\n        }\n        return GWU.path.OK;\n    }\n    drawSidebar(actor, buffer, bounds) {\n        let count = super.drawSidebar(actor, buffer, bounds);\n        if (actor.map.hasTileFlag(actor.x, actor.y, Flags.Tile.T_DEEP_WATER) &&\n            !actor.map.hasTileFlag(actor.x, actor.y, Flags.Tile.T_BRIDGE)) {\n            buffer.drawText(bounds.x + 3, bounds.y + count++, 'Swimming', '#66F');\n        }\n        return count;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ActorKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ActorKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ActorKind) {\n        kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ActorKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ActorKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Item } from './item';\nexport class ItemKind extends Entity.EntityKind {\n    constructor(config) {\n        super(config);\n        this.flags = {\n            item: Flags.Item.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.bump = [];\n        if (config.flags) {\n            this.flags.item = GWU.flag.from(Flags.Item, this.flags.item, config.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, config.flags);\n        }\n        if (config.bump) {\n            if (typeof config.bump === 'string' ||\n                typeof config.bump === 'function') {\n                config.bump = [config.bump];\n            }\n            if (Array.isArray(config.bump)) {\n                this.bump = config.bump.slice();\n            }\n        }\n        this.avoidTileFlags |= Flags.Tile.T_DEEP_WATER;\n        this.forbidTileFlags |= Flags.Tile.T_LAVA | Flags.Tile.T_AUTO_DESCENT;\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Item.default.sidebarFg);\n    }\n    make(options) {\n        const item = new Item(this);\n        this.init(item, options);\n        return item;\n    }\n    init(item, options = {}) {\n        super.init(item, options);\n        Object.assign(item.flags, this.flags);\n        item.quantity = options.quantity || 1;\n    }\n    avoidsCell(cell, item) {\n        if (cell.isDoor() || cell.isStairs())\n            return true;\n        return super.avoidsCell(cell, item);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ItemKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ItemKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ItemKind) {\n        kinds[id] = kind;\n        kind.id = id;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ItemKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ItemKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","import * as ACTION from '../action';\nexport function standStill(action) {\n    if (action.actor) {\n        action.actor.endTurn();\n        action.didSomething();\n    }\n}\nACTION.install('standStill', standStill);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nexport function flashSprite(map, x, y, sprite, duration = 100, count = 1) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ visible: true })\n        .to({ visible: false })\n        .repeat(count)\n        .repeatDelay(duration)\n        .duration(duration)\n        .onUpdate((obj) => {\n        if (obj.visible) {\n            map.addFx(x, y, entity);\n        }\n        else {\n            map.removeFx(entity);\n        }\n    });\n    return tween;\n}\nGWU.sprite.install('bump', 'white', 50);\nexport function hit(map, target, sprite, duration) {\n    sprite = sprite || 'hit';\n    duration = duration || 200;\n    return flashSprite(map, target.x, target.y, sprite, duration, 1);\n}\nGWU.sprite.install('hit', 'red', 50);\nexport function miss(map, target, sprite, duration) {\n    sprite = sprite || 'miss';\n    duration = duration || 200;\n    return flashSprite(map, target.x, target.y, sprite, duration, 1);\n}\nGWU.sprite.install('miss', 'green', 50);\nexport function fadeInOut(map, x, y, sprite, duration = 100) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite).clone();\n    }\n    else {\n        sprite = GWU.sprite.make(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ opacity: 0 })\n        .to({ opacity: 100 })\n        .repeat(2)\n        .yoyo(true)\n        .duration(Math.floor(duration / 2))\n        .onUpdate((obj) => {\n        entity.sprite.opacity = obj.opacity;\n        map.cell(x, y).needsRedraw = true; // we changed the sprite so redraw\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n    });\n    // realTime\n    return tween;\n}\nexport function moveSprite(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    const from = { x: GWU.xy.x(source), y: GWU.xy.y(source) };\n    map.addFx(from.x, from.y, entity);\n    let duration = opts.duration ||\n        Math.ceil(16 * (GWU.xy.maxAxisFromTo(source, target) / (opts.speed || 8)));\n    if (GWU.xy.isLoc(target)) {\n        target = { x: target[0], y: target[1] };\n    }\n    const tween = GWU.tween\n        .make(from)\n        .to(target)\n        .duration(duration)\n        .onUpdate((vals) => {\n        // tweens dont update every step, so...\n        // draw line from current pos to vals pos\n        // check each step for blocking...\n        // end at either vals or last blocking spot\n        const dest = { x: entity.x, y: entity.y };\n        const ok = GWU.xy.forLineBetween(dest.x, dest.y, vals.x, vals.y, (x, y) => {\n            if (opts.stepFn) {\n                if (opts.stepFn(x, y)) {\n                    if (!opts.stopBeforeWalls) {\n                        dest.x = x;\n                        dest.y = y;\n                    }\n                    return false;\n                }\n            }\n            else if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (!opts.stopBeforeWalls) {\n                    dest.x = x;\n                    dest.y = y;\n                }\n                return false;\n            }\n            dest.x = x;\n            dest.y = y;\n        });\n        map.moveFx(entity, dest.x, dest.y);\n        if (!ok) {\n            tween.stop();\n        }\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n        return entity;\n    });\n    return tween;\n}\nexport function bolt(map, source, target, sprite, opts = {}) {\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport function projectile(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    if (sprite.ch && sprite.ch.length == 4) {\n        const dir = GWU.xy.dirFromTo(source, target);\n        let index = 0;\n        if (dir[0] && dir[1]) {\n            index = 2;\n            if (dir[0] != dir[1]) {\n                // remember up is -y\n                index = 3;\n            }\n        }\n        else if (dir[0]) {\n            index = 1;\n        }\n        const ch = sprite.ch[index];\n        sprite = GWU.sprite.make(ch, sprite.fg, sprite.bg);\n    }\n    else if (sprite.ch && sprite.ch.length !== 1) {\n        throw new Error('projectile requires 4 chars - vert,horiz,diag-left,diag-right (e.g: \"|-\\\\/\")');\n    }\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport function beam(map, from, to, sprite, opts = {}) {\n    opts.fade = opts.fade || 100;\n    if (opts.stopAtWalls === undefined)\n        opts.stopAtWalls = true;\n    const line = [];\n    GWU.xy.forLineFromTo(from, to, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (opts.stepFn && opts.stepFn(x, y))\n            return false;\n        if (opts.stopAtWalls || opts.stopBeforeWalls) {\n            if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (opts.stopBeforeWalls)\n                    return false;\n                line.push([x, y]);\n                return false;\n            }\n        }\n        line.push([x, y]);\n        return true;\n    });\n    const duration = opts.duration || Math.ceil(16 * (line.length / (opts.speed || 8)));\n    let lastIndex = -1;\n    const tween = GWU.tween\n        .make({ index: 0 })\n        .to({ index: line.length - 1 })\n        .duration(duration)\n        .onUpdate((vals) => {\n        while (lastIndex < vals.index) {\n            ++lastIndex;\n            const loc = line[lastIndex] || [-1, -1];\n            tween.addChild(fadeInOut(map, loc[0], loc[1], sprite, opts.fade));\n        }\n    });\n    return tween;\n}\nfunction isInShape(shape, cx, cy, allowCenter, x, y) {\n    const sx = Math.abs(x - cx);\n    const sy = Math.abs(y - cy);\n    if (sx == 0 && sy == 0 && !allowCenter)\n        return false;\n    switch (shape) {\n        case '+':\n            return sx == 0 || sy == 0;\n        case 'x':\n        case 'X':\n            return sx == sy;\n        case '*':\n            return sx == 0 || sy == 0 || sx == sy;\n        default:\n            return true;\n    }\n}\nfunction checkExplosionOpts(opts) {\n    opts.speed = opts.speed || 2;\n    opts.fade = opts.fade || 100;\n    opts.shape = opts.shape || 'o';\n    if (opts.center === undefined) {\n        opts.center = true;\n    }\n}\nexport function explosion(map, x, y, radius, sprite, opts = {}) {\n    checkExplosionOpts(opts);\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const grid = GWU.grid.alloc(map.width, map.height);\n    const fov = new GWU.fov.FOV({\n        isBlocked(x, y) {\n            return map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE);\n        },\n        hasXY(x, y) {\n            return map.hasXY(x, y);\n        },\n    });\n    fov.calculate(x, y, radius, (x1, y1) => {\n        grid[x1][y1] = 1;\n    });\n    const duration = opts.duration || 32 * (radius / opts.speed);\n    const tween = GWU.tween\n        .make({ r: 0 })\n        .to({ r: radius })\n        .duration(duration)\n        .onUpdate((vals) => {\n        const minX = Math.max(0, x - vals.r);\n        const minY = Math.max(0, y - vals.r);\n        const maxX = Math.min(map.width - 1, x + vals.r);\n        const maxY = Math.min(map.height - 1, y + vals.r);\n        for (let x1 = minX; x1 <= maxX; ++x1) {\n            for (let y1 = minY; y1 <= maxY; ++y1) {\n                if (grid[x1][y1] &&\n                    GWU.xy.distanceBetween(x, y, x1, y1) <= vals.r) {\n                    grid[x1][y1] = 0;\n                    if (isInShape(opts.shape, x, y, opts.center, x1, y1)) {\n                        tween.addChild(fadeInOut(map, x1, y1, sprite, opts.fade));\n                    }\n                }\n            }\n        }\n    })\n        .onFinish(() => {\n        GWU.grid.free(grid);\n    });\n    return tween;\n}\n","import * as ACTION from '../action';\n// import * as ACTOR from '../actor';\n// BUMP\n//\n// prefixes:\n// @ : only for player\n// + : only for ally\n// - : only for opposed\n// = : only for same kind\n// $ : use my action (if used with one of the above, this comes last)\n//\nexport function bump(action) {\n    const other = action.target;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor is required for bump.');\n    if (other) {\n        const bumpActions = other.getBumpActions();\n        for (let actionName of bumpActions) {\n            if (typeof actionName === 'string') {\n                if (actionName.startsWith('@')) {\n                    if (!actor.isPlayer())\n                        continue;\n                    actionName = actionName.substring(1);\n                    // } else if (actionName.startsWith('+')) {\n                    //     if (!actor.isAllyWith(other)) continue;\n                    //     actionName = actionName.substring(1);\n                    // } else if (actionName.startsWith('-')) {\n                    //     if (actor.isAllyWith(other)) continue;\n                    //     actionName = actionName.substring(1);\n                }\n                else if (actionName.startsWith('=')) {\n                    if (actor.kind !== other.kind)\n                        continue;\n                    actionName = actionName.substring(1);\n                }\n                if (actionName.startsWith('$')) {\n                    const selfName = actionName.substring(1);\n                    if (!other.canDoAction(selfName))\n                        throw new Error('Invalid bump choice - ' + actionName);\n                    other.trigger(selfName, action);\n                    if (action.isDone())\n                        return;\n                    // let selfAction: ACTOR.ActorActionResult =\n                    //     other.getAction(selfName);\n                    // if (selfAction === false) {\n                    //     throw new Error(\n                    //         'Cannot have bump action for self action that actor cannot do: ' +\n                    //             action\n                    //     );\n                    // }\n                    // const ctx2 = Object.assign({}, ctx, { actor });\n                    // const result = selfAction(game, other, ctx2);\n                    // if (result) return result;\n                }\n                else {\n                    ACTION.doAction(actionName, action);\n                    if (action.isDone())\n                        return;\n                    // const config = actor.getAction(actionName);\n                    // if (config === false) {\n                    //     throw new Error(\n                    //         'Cannot configure actor with bump action they cannot do: ' +\n                    //             action\n                    //     );\n                    // } else {\n                    //     action = config;\n                    // }\n                    // const result = action(game, actor, ctx);\n                    // if (result) return result;\n                }\n            }\n            else {\n                actionName(action);\n                if (action.isDone())\n                    return;\n            }\n        }\n    }\n    const item = action.item;\n    if (item) {\n        // TODO - Item Actions\n    }\n}\nACTION.install('bump', bump);\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nimport * as FX from '../fx';\nimport * as Flags from '../flags';\nimport { bump } from './bump';\nimport { standStill } from './standStill';\nexport function moveDir(action) {\n    //\n    const step = action.dir;\n    if (!step)\n        throw new Error('moveDir called with no direction!');\n    const actor = action.actor;\n    const map = action.map;\n    // const game = action.game;\n    if (!actor)\n        throw new Error('moveDir requires actor!');\n    const newX = actor.x + step[0];\n    const newY = actor.y + step[1];\n    const currentCell = map.cell(actor.x, actor.y);\n    const newCell = map.cell(newX, newY);\n    // actor, map/cell/tiles, game, global\n    // - give them all a chance to handle this\n    // if (action.defaultPrevented) return;\n    if (actor.forbidsCell(newCell)) {\n        if (action.try)\n            return action.didNothing();\n        if (actor.isPlayer()) {\n            FX.hit(map, newCell, 'hit', 100);\n            GWU.message.addAt(newCell.x, newCell.y, '{{you}} {{verb bump~}} into {{a cell}}.', { actor, cell: newCell });\n        }\n        actor.clearGoal();\n        actor.endTurn();\n        return action.didSomething();\n    }\n    if (newCell.blocksMove()) {\n        if (action.try)\n            return action.didNothing();\n        FX.hit(map, newCell, 'hit', 100);\n        actor.clearGoal();\n        actor.endTurn();\n        return action.didSomething();\n    }\n    // can we leave?\n    if (!currentCell.canRemoveActor(actor)) {\n        if (action.try)\n            return action.didNothing();\n        // canActorLeave must add appropriate message\n        actor.endTurn();\n        return action.didSomething();\n    }\n    // is there an actor there?\n    if (newCell.hasActor() || newCell.hasItem()) {\n        if (action.try)\n            return action.didNothing();\n        action.target = newCell.actor;\n        action.item = newCell.item;\n        return bump(action);\n    }\n    // can we enter?\n    if (!newCell.canAddActor(actor)) {\n        if (action.try)\n            return action.didNothing();\n        actor.endTurn();\n        return action.didSomething();\n    }\n    if (!map.moveActor(actor, newX, newY)) {\n        return standStill(action);\n    }\n    let rate = 100;\n    if (newCell.hasTileFlag(Flags.Tile.T_DEEP_WATER)) {\n        rate = 150;\n    }\n    actor.endTurn(rate);\n    return action.didSomething();\n}\nACTION.install('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nimport { moveDir } from './moveDir';\nexport function idle(action) {\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Action requires an actor.');\n    if (GWU.random.chance(50)) {\n        // stand still\n        actor.endTurn();\n        return action.didSomething();\n    }\n    // try to step in a random direction\n    const dirIndex = GWU.random.number(4);\n    action.dir = GWU.xy.DIRS[dirIndex];\n    return moveDir(action);\n}\nACTION.install('idle', idle);\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nexport function pickup(action) {\n    const map = action.map;\n    if (!map)\n        throw new Error('Map is required!');\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor is required.');\n    const item = map.itemAt(action.x, action.y);\n    if (!item) {\n        if (!action.quiet) {\n            GWU.message.addAt(action.x, action.y, 'Nothing to pickup.');\n        }\n        return action.didNothing();\n    }\n    if (actor.avoidsItem(item))\n        return action.didNothing();\n    if (item.canDoAction('pickup') === false) {\n        if (!action.quiet) {\n            GWU.message.addAt(actor.x, actor.y, '{{you}} cannot pickup {{the item}}.', {\n                actor,\n                item,\n            });\n        }\n        return action.didNothing();\n    }\n    // logs error messages\n    if (!actor.canAddItem(item)) {\n        return action.didNothing();\n    }\n    if (!map.removeItem(item)) {\n        return action.didNothing();\n    }\n    actor.addItem(item);\n    if (!action.quiet) {\n        GWU.message.addAt(actor.x, actor.y, '{{you}} {{verb pick[s]}} up {{an item}}.', {\n            actor,\n            item,\n        });\n    }\n    actor.endTurn();\n    action.didSomething();\n}\nACTION.install('pickup', pickup);\n","import * as GWU from 'gw-utils';\nimport * as ACTION from '../action';\nimport * as Flags from '../flags';\nexport function climb(action) {\n    const map = action.map;\n    const actor = action.actor;\n    if (!actor)\n        throw new Error('Actor is required.');\n    const x = action.x;\n    const y = action.y;\n    if (map.hasTileFlag(x, y, Flags.Tile.T_UP_STAIRS)) {\n        GWU.message.addAt(x, y, '{{you}} {{verb climb[s]}}.', { actor });\n        action.game.startNewMap({ up: true });\n        actor.endTurn();\n        return action.didSomething();\n    }\n    GWU.message.addAt(x, y, 'Nothing to climb.');\n    actor.endTurn(50); // half turn??\n    return action.didSomething();\n}\nACTION.install('climb', climb);\n","import { installHandler } from '../effect';\nexport function fn(cfg) {\n    if (typeof cfg === 'function')\n        return cfg;\n    return (a) => {\n        for (let fn of cfg) {\n            fn(a);\n            if (a.isDone())\n                return;\n        }\n    };\n}\ninstallHandler('fn', fn);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// ActivateMachine\nexport function activateMachine() {\n    return activateMachineAction.bind(undefined);\n}\nexport function activateMachineAction(action) {\n    const map = action.map;\n    const cell = map.cell(action.x, action.y);\n    const machine = cell.machineId;\n    if (!machine)\n        return action.didNothing();\n    action.originX = action.x;\n    action.originY = action.y;\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.machineId !== machine)\n                continue;\n            cell.trigger('machine', action); // will set didSomething or didNothing\n        }\n    }\n}\ninstallHandler('activateMachine', activateMachine);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// chance\nexport function chance(opts) {\n    if (Array.isArray(opts)) {\n        opts = opts[0];\n    }\n    if (typeof opts === 'object') {\n        opts = opts.chance;\n    }\n    if (typeof opts === 'string') {\n        if (opts.endsWith('%')) {\n            opts = Number.parseFloat(opts) * 100;\n        }\n        else {\n            opts = Number.parseInt(opts || '10000');\n        }\n    }\n    if (typeof opts !== 'number') {\n        throw new Error('Chance effect config must be number or string that can be a number.');\n    }\n    return chanceAction.bind(undefined, opts);\n}\nexport function chanceAction(cfg, action) {\n    const map = action.map;\n    if (!map.rng.chance(cfg, 10000)) {\n        return action.stop();\n    }\n}\ninstallHandler('chance', chance);\n","import * as Flags from '../flags';\nimport { installHandler } from '../effect';\nexport function clear(config) {\n    let layers = 0;\n    if (!config) {\n        layers = Flags.Depth.ALL_LAYERS;\n    }\n    else if (typeof config === 'number') {\n        layers = config;\n    }\n    else if (typeof config === 'string') {\n        const parts = config.split(/[,|]/g);\n        layers = parts.reduce((out, v) => {\n            if (typeof v === 'number')\n                return out | v;\n            const depth = Flags.Depth[v] || 0;\n            return out | depth;\n        }, 0);\n    }\n    else {\n        throw new Error('Invalid config for clear effect: ' + JSON.stringify(config));\n    }\n    return clearAction.bind(undefined, layers);\n}\nexport function clearAction(layers, action) {\n    if (!layers)\n        return action.didNothing();\n    const cell = action.map.cell(action.x, action.y);\n    if (cell.clearDepth(layers)) {\n        action.didSomething();\n    }\n    else {\n        action.didNothing();\n    }\n}\ninstallHandler('clear', clear);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// EMIT\nexport function emit(config) {\n    if (Array.isArray(config))\n        config = config[0];\n    if (typeof config !== 'string')\n        throw new Error('Invalid EMIT handler config - ' + config);\n    return emitAction.bind(undefined, config);\n}\nexport function emitAction(id, action) {\n    action.actor && action.actor.trigger(id, action);\n    if (action.isDone())\n        return;\n    action.item && action.item.trigger(id, action);\n    if (action.isDone())\n        return;\n    action.map.trigger(id, action);\n    if (action.isDone())\n        return;\n    action.game.trigger(id, action);\n}\ninstallHandler('emit', emit);\n","import * as Effect from '../effect';\nexport function feature(id) {\n    if (Array.isArray(id))\n        id = id[0];\n    if (id && typeof id !== 'string') {\n        id = id.id;\n    }\n    if (!id || !id.length)\n        throw new Error('Feature effect needs ID');\n    return featureAction.bind(undefined, id);\n}\nexport function featureAction(id, action) {\n    const feat = Effect.installed[id];\n    if (!feat) {\n        throw new Error('Failed to find feature: ' + id);\n    }\n    return feat(action);\n}\nEffect.installHandler('feature', feature);\nEffect.installHandler('effect', feature);\nEffect.installHandler('id', feature);\n","import * as GWU from 'gw-utils';\nimport { installHandler } from '../effect';\n//////////////////////////////////////////////\n// MESSAGE\nexport function msg(src) {\n    if (Array.isArray(src))\n        src = src[0];\n    if (typeof src !== 'string') {\n        throw new Error('Need message for message effect.');\n    }\n    const info = {\n        msg: src,\n    };\n    return messageAction.bind(undefined, info);\n}\nexport function messageAction(info, action) {\n    const seen = action.seen;\n    const msg = info.msg;\n    if (msg &&\n        msg.length &&\n        action.aware &&\n        !seen\n    // && map.isVisible(x, y)\n    ) {\n        GWU.message.addAt(action.x, action.y, msg, action);\n        return action.didSomething();\n    }\n    return action.didNothing();\n}\ninstallHandler('msg', msg);\n","import * as GWU from 'gw-utils';\nimport * as EFFECT from '../effect';\nexport function nourish(opts) {\n    if (!opts)\n        throw new Error('Invalid Nourish config.');\n    let info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.type = opts[0] || 'inc';\n        info.amount = GWU.range.make(opts[1] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(opts.amount || 1);\n    }\n    else {\n        throw new Error('Invalid Nourish config: ' + JSON.stringify(opts));\n    }\n    return nourishAction.bind(undefined, info);\n}\nexport function nourishAction(config, action) {\n    if (!config.amount)\n        return action.didNothing();\n    // who am I nourishing?\n    const map = action.map;\n    const actor = map.actorAt(action.x, action.y);\n    if (!actor) {\n        return action.didNothing();\n    }\n    const stats = actor.stats;\n    const c = stats.get('food');\n    if (!stats.adjust('food', config.type, config.amount))\n        return action.didNothing();\n    const n = stats.get('food');\n    if (n < c && n / stats.max('food') < 0.1) {\n        GWU.message.addAt(actor.x, actor.y, nourishAction.default.pukeMsg, {\n            actor,\n        });\n    }\n    return action.didSomething();\n}\nnourishAction.default = {\n    pukeMsg: '%you vomit.',\n};\nEFFECT.installHandler('nourish', nourish);\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as EFFECT from '../effect';\nexport function spread(...args) {\n    let config = {};\n    if (!args.length) {\n        throw new Error('Must have config to create spread.');\n    }\n    if (args.length === 1) {\n        if (typeof args[0] === 'string') {\n            args = args[0].split(':').map((t) => t.trim());\n        }\n        else if (Array.isArray(args[0])) {\n            args = args[0];\n        }\n        else {\n            Object.assign(config, args[0]);\n            args = [config];\n        }\n    }\n    if (args.length >= 3) {\n        Object.assign(config, args[3] || {});\n        config.grow = Number.parseInt(args[0]);\n        config.decrement = Number.parseInt(args[1]);\n        config.actions = args[2];\n    }\n    else if (args.length === 2) {\n        throw new Error('Must have actions to run for spread.');\n    }\n    if (typeof config.grow !== 'number')\n        config.grow = Number.parseInt(config.grow || 0);\n    if (typeof config.decrement !== 'number')\n        config.decrement = Number.parseInt(config.decrement || 100);\n    config.flags = GWU.flag.from(Flags.Effect, config.flags || 0);\n    config.matchTile = config.matchTile || '';\n    const action = EFFECT.makeArray(config.actions);\n    if (!action)\n        throw new Error('Failed to make action for spread.');\n    config.actions = action;\n    const fn = spreadAction.bind(config);\n    fn.config = config;\n    return fn;\n}\nEFFECT.installHandler('spread', spread);\nexport function spreadAction(action) {\n    const abortIfBlocking = !!(this.flags & Flags.Effect.E_ABORT_IF_BLOCKS_MAP);\n    const map = action.map;\n    const spawnMap = GWU.grid.alloc(map.width, map.height);\n    if (!computeSpawnMap(this, action, spawnMap)) {\n        GWU.grid.free(spawnMap);\n        return action.didNothing();\n    }\n    if (abortIfBlocking && mapDisruptedBy(map, spawnMap)) {\n        GWU.grid.free(spawnMap);\n        return action.didNothing();\n    }\n    if (this.flags & Flags.Effect.E_EVACUATE_CREATURES) {\n        // first, evacuate creatures, so that they do not re-trigger the tile.\n        if (evacuateCreatures(map, spawnMap)) {\n            action.didSomething();\n        }\n    }\n    if (this.flags & Flags.Effect.E_EVACUATE_ITEMS) {\n        // first, evacuate items, so that they do not re-trigger the tile.\n        if (evacuateItems(map, spawnMap)) {\n            action.didSomething();\n        }\n    }\n    if (this.flags & Flags.Effect.E_CLEAR_CELL) {\n        // first, clear other tiles (not base/ground)\n        if (clearCells(map, spawnMap, this.flags)) {\n            action.didSomething();\n        }\n    }\n    spawnMap.update((v) => {\n        if (!v)\n            return 0;\n        return 1;\n    });\n    let didSomething = action.isSuccess();\n    this.actions.forEach((fn, i) => {\n        spawnMap.forEach((v, x, y) => {\n            if (v !== i + 1)\n                return;\n            action.reset();\n            action.x = x;\n            action.y = y;\n            fn(action);\n            if (action.isSuccess()) {\n                didSomething = true;\n                spawnMap[x][y] += 1;\n            }\n        });\n    });\n    if (didSomething) {\n        action.didSomething();\n    }\n    GWU.grid.free(spawnMap);\n}\nexport function mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(map.width, map.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(map.width, map.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (map.cell(i, j).isStairs()) {\n                disrupts = true;\n            }\n        }\n        else if (!map.cell(i, j).blocksMove()) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGWU.grid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Flags.Effect.E_BUILD_IN_WALLS) {\n        if (!map.cell(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cell(x, y).isWall())\n            return false; // or on wall\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.matchTile && !isStart && !cell.hasTile(effect.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, loc, spawnMap) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const map = loc.map;\n    let startProb = effect.grow || 0;\n    let probDec = effect.decrement || 0;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, loc.x, loc.y, true)) {\n        return false;\n    }\n    spawnMap[loc.x][loc.y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + GWU.xy.DIRS[dir][0];\n                            y2 = j + GWU.xy.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                map.rng.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Flags.Effect.E_CLEAR_CELL) === Flags.Effect.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Flags.Effect.E_CLEAR_GAS) {\n                cell.clearDepth(Flags.Depth.GAS);\n            }\n            if (flags & Flags.Effect.E_CLEAR_LIQUID) {\n                cell.clearDepth(Flags.Depth.LIQUID);\n            }\n            if (flags & Flags.Effect.E_CLEAR_SURFACE) {\n                cell.clearDepth(Flags.Depth.SURFACE);\n            }\n            if (flags & Flags.Effect.E_CLEAR_GROUND) {\n                cell.clearDepth(Flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let didSomething = false;\n    map.eachActor((a) => {\n        if (!blockingMap[a.x][a.y])\n            return;\n        const loc = map.rng.matchingLocNear(a.x, a.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const c = map.cell(x, y);\n            return !a.forbidsCell(c);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeActor(a);\n            map.addActor(loc[0], loc[1], a);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    map.eachItem((i) => {\n        if (!blockingMap[i.x][i.y])\n            return;\n        const loc = map.rng.matchingLocNear(i.x, i.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const dest = map.cell(x, y);\n            return !i.forbidsCell(dest);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeItem(i);\n            map.addItem(loc[0], loc[1], i);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function stat(opts) {\n    if (!opts)\n        throw new Error('Invalid Stat config.');\n    const info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.stat = opts[0];\n        info.type = opts[1] || 'inc';\n        info.amount = GWU.range.make(opts[2] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.stat = opts.stat;\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(info.amount || 1);\n    }\n    else {\n        throw new Error('Invalid stat effect configuration: ' + JSON.stringify(opts));\n    }\n    return statAction.bind(undefined, info);\n}\nexport function statAction(config, action) {\n    if (!config.amount)\n        return action.didNothing();\n    // who am I nourishing?\n    const actor = action.actor || action.map.actorAt(action.x, action.y);\n    if (!actor) {\n        return action.didNothing();\n    }\n    // sustain?\n    const stats = actor.stats;\n    if (!stats.adjust(config.stat, config.type, config.amount))\n        return action.didNothing();\n    return action.didSomething();\n}\nEffect.installHandler('stat', stat);\n","import { installHandler } from '../effect';\nimport * as Flags from '../flags';\nexport function tile(src) {\n    if (!src)\n        throw new Error('Tile effect needs configuration.');\n    if (typeof src === 'string') {\n        src = { id: src };\n    }\n    else if (Array.isArray(src)) {\n        src = { id: src[0] };\n    }\n    else if (!src.id) {\n        throw new Error('Tile effect needs configuration with id.');\n    }\n    const opts = src;\n    if (opts.id.includes('!')) {\n        opts.superpriority = true;\n    }\n    if (opts.id.includes('~')) {\n        opts.blockedByActors = true;\n        opts.blockedByItems = true;\n    }\n    if (opts.id.includes('+')) {\n        opts.protected = true;\n    }\n    opts.id = opts.id.replace(/[!~+]*/g, '');\n    return tileAction.bind(undefined, opts);\n}\nexport function tileAction(cfg, action) {\n    const map = action.map;\n    cfg.machine = action.machine || 0;\n    if (map.setTile(action.x, action.y, cfg.id, cfg)) {\n        if (cfg.protected) {\n            map.setCellFlag(action.x, action.y, Flags.Cell.EVENT_PROTECTED);\n        }\n        action.didSomething();\n    }\n}\ninstallHandler('tile', tile);\n","export class MapLayer {\n    constructor(map, name = 'layer') {\n        this.changed = false;\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    clear() { }\n    setTile(_x, _y, _tile, _opts) {\n        return false;\n    }\n    clearTile(_x, _y) {\n        return false;\n    }\n    addActor(_x, _y, _actor) {\n        return false;\n    }\n    forceActor(_x, _y, _actor) {\n        return false;\n    }\n    removeActor(_actor) {\n        return false;\n    }\n    addItem(_x, _y, _item) {\n        return false;\n    }\n    forceItem(_x, _y, _item) {\n        return false;\n    }\n    removeItem(_item) {\n        return false;\n    }\n    // Time based changes to the layer (e.g. dissipate gasses)\n    tick(_dt) {\n        return false;\n    }\n}\n","import { MapLayer } from './mapLayer';\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    setTile(x, y, tile, opts) {\n        const cell = this.map.cell(x, y);\n        return cell.setTile(tile, opts);\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // // Bookkeeping for fire, pressure plates and key-activated tiles.\n        // for (let x = 0; x < this.map.width; ++x) {\n        //     for (let y = 0; y < this.map.height; ++y) {\n        //         const cell = this.map.cell(x, y);\n        //         if (\n        //             !cell.hasCellFlag(\n        //                 Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM\n        //             ) &&\n        //             cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)\n        //         ) {\n        //             cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n        //         }\n        //     }\n        // }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nexport function gas(map) {\n    const cleanup = [];\n    map.data.gas = true;\n    cleanup.push(map.on('tick', () => {\n        gasTick(map);\n    }));\n    cleanup.push(map.on('copy', (src) => {\n        if (!src.data.gas) {\n            // remove gas\n            cleanup.forEach((c) => c());\n        }\n    }));\n    cleanup.push(map.on('assign', (dest) => {\n        if (!dest.data.gas) {\n            // install gas\n            gas(dest);\n        }\n    }));\n}\nfunction gasTick(map) {\n    if (!map.hasMapFlag(Flags.Map.MAP_HAS_GAS))\n        return;\n    const updatedVolumes = GWU.grid.alloc(map.width, map.height);\n    // dissipate the gas...\n    dissipateGas(map, updatedVolumes);\n    // spread the gas...\n    spreadGas(map, updatedVolumes);\n    GWU.grid.free(updatedVolumes);\n}\nfunction dissipateGas(map, volume) {\n    map.cells.forEach((cell, x, y) => {\n        if (!cell.volume) {\n            volume[x][y] = 0;\n        }\n        else {\n            let v = cell.volume;\n            const tile = cell.depthTile(Flags.Depth.GAS);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (!v) {\n                cell.clearDepth(Flags.Depth.GAS);\n            }\n            else {\n                cell.volume = v;\n            }\n            volume[x][y] = v;\n        }\n    });\n}\n// function calcOpacity(volume: number): number {\n//     return Math.floor(Math.min(volume, 10) * 10);\n// }\nfunction updateCellVolume(map, x, y, startingVolume) {\n    let total = 0;\n    let count = 0;\n    let highestVolume = 0;\n    const cell = map.cell(x, y);\n    let startingTile = cell.depthTile(Flags.Depth.GAS);\n    let highestTile = startingTile;\n    if (cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n        startingVolume[x][y] = 0;\n        cell.volume = 0;\n        return;\n    }\n    for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n        for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n            const v = startingVolume[i][j];\n            if (!cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n                ++count;\n                if (v > highestVolume) {\n                    highestVolume = v;\n                    highestTile = map.cell(i, j).depthTile(Flags.Depth.GAS);\n                }\n            }\n            total += v;\n        }\n    }\n    const v = Math.floor((total * 10) / count) / 10;\n    // startingVolume[x][y] = v;\n    if (v > 0 && highestTile) {\n        if (!startingTile || startingTile !== highestTile) {\n            cell.setTile(highestTile, { volume: v });\n        }\n        else {\n            cell.volume = v;\n        }\n    }\n    if (v > 0) {\n        cell.needsRedraw = true;\n    }\n}\nfunction spreadGas(map, startingVolume) {\n    for (let x = 0; x < startingVolume.width; ++x) {\n        for (let y = 0; y < startingVolume.height; ++y) {\n            updateCellVolume(map, x, y, startingVolume);\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nconst ObjectFlags = Flags.Entity;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport function fire(map) {\n    map.data.fire = true;\n    const cancelFns = [];\n    cancelFns.push(map.on('tick', () => {\n        fireTick(map);\n    }));\n    cancelFns.push(map.on('assign', (dest) => {\n        if (!dest.data.fire) {\n            fire(dest);\n        }\n    }));\n    // Not sure if we should do this, but...\n    cancelFns.push(map.on('copy', (src) => {\n        if (!src.data.fire) {\n            cancelFns.forEach((c) => c());\n        }\n    }));\n}\nfunction fireTick(map) {\n    // Run any tick effects\n    if (!map.hasMapFlag(Flags.Map.MAP_HAS_FIRE))\n        return;\n    map.clearMapFlag(Flags.Map.MAP_HAS_FIRE);\n    // Bookkeeping for fire\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n        }\n    }\n    // now spread the fire...\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                exposeToFire(map, x, y, false);\n                for (let d = 0; d < 4; ++d) {\n                    const dir = GWU.xy.DIRS[d];\n                    exposeToFire(map, x + dir[0], y + dir[1]);\n                }\n            }\n        }\n    }\n    if (map.someCell((c) => c.hasTileFlag(Flags.Tile.T_IS_FIRE))) {\n        map.setMapFlag(Flags.Map.MAP_HAS_FIRE);\n    }\n}\nfunction exposeToFire(map, x, y, alwaysIgnite = false) {\n    let firePriority = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n    let explosivePromotion = false;\n    const cell = map.cell(x, y);\n    if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n        return false;\n    }\n    cell.eachTile((tile) => {\n        // Pick the extinguishing layer with the best priority.\n        if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n            tile.priority > bestExtinguishingPriority) {\n            bestExtinguishingPriority = tile.priority;\n        }\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n            tile.priority > firePriority) {\n            firePriority = tile.priority;\n        }\n    });\n    // didNothing\n    if (bestExtinguishingPriority >= firePriority && !alwaysIgnite)\n        return false;\n    // Count explosive neighbors.\n    if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n        GWU.xy.eachNeighbor(x, y, (x0, y0) => {\n            const n = map.cell(x0, y0);\n            if (n.hasEntityFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                ++explosiveNeighborCount;\n            }\n        });\n        if (explosiveNeighborCount >= 8) {\n            explosivePromotion = true;\n        }\n    }\n    let event = 'fire';\n    if (explosivePromotion && cell.hasAction('explode')) {\n        event = 'explode';\n    }\n    // cell.eachTile( (tile) => {\n    //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n    //         if (tile.depth === Depth.GAS) {\n    //             cell.gasVolume = 0;\n    //         } else if (tile.depth === Depth.LIQUID) {\n    //             cell.liquidVolume = 0;\n    //         }\n    //     }\n    // });\n    cell.trigger(event, {\n        force: true,\n    });\n    // cell.needsRedraw = true;\n    return true;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nconst highlightColor = GWU.color.install('highlight', [100, 100, 0]);\nexport class BasicDrawer {\n    constructor() {\n        this.scent = false;\n    }\n    drawInto(dest, map, opts = {}) {\n        const offsetX = opts.offsetX || 0;\n        const offsetY = opts.offsetY || 0;\n        map.clearMapFlag(Flags.Map.MAP_DANCES);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < dest.width; ++x) {\n            for (let y = 0; y < dest.height; ++y) {\n                if (map.hasXY(x + offsetX, y + offsetY)) {\n                    const cell = map.cell(x + offsetX, y + offsetY);\n                    this.drawCell(mixer, map, cell, map.fov);\n                    dest.draw(x, y, mixer.ch || ' ', mixer.fg, mixer.bg);\n                }\n            }\n        }\n    }\n    drawCell(dest, map, cell, fov) {\n        dest.blackOut();\n        // const isVisible = fov ? fov.isAnyKindOfVisible(cell.x, cell.y) : true;\n        const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        if (cell.needsRedraw || needSnapshot) {\n            this.getAppearance(dest, map, cell);\n            cell.putSnapshot(dest);\n            cell.needsRedraw = false;\n            cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n        else {\n            cell.getSnapshot(dest);\n            if (cell.hasCellFlag(Flags.Cell.COLORS_DANCE)) {\n                map.setMapFlag(Flags.Map.MAP_DANCES);\n            }\n        }\n        this.applyLight(dest, cell, fov);\n        let separate = false;\n        if (cell.memory) {\n            separate = !!((cell.memory.flags.entity & Flags.Entity.L_VISUALLY_DISTINCT)\n            // Flags.Entity.L_LIST_IN_SIDEBAR)\n            );\n        }\n        else {\n            separate = cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT, \n            // Flags.Entity.L_LIST_IN_SIDEBAR,\n            true);\n        }\n        if (cell.hasCellFlag(Flags.Cell.IS_CURSOR)) {\n            dest.bg = highlightColor;\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        else if (cell.hasCellFlag(Flags.Cell.IS_HIGHLIGHTED)) {\n            dest.bg = highlightColor.mix(dest.bg, 35);\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        if (this.scent && map.player) {\n            const s = GWU.clamp(map.player.scent.get(cell.x, cell.y) * 5, 0, 50);\n            if (s) {\n                const c = GWU.color.colors.red;\n                dest.mix(c, 0, s);\n            }\n        }\n        if (separate) {\n            [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n        }\n        return true;\n    }\n    // getCellAppearance(cell: CellType, dest: GWU.sprite.Mixer) {\n    //     dest.blackOut();\n    //     const isVisible = true; // this.fov.isAnyKindOfVisible(x, y);\n    //     const isRevealed = true; // this.fov.isRevealed(x, y);\n    //     const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     if (needSnapshot || (cell.needsRedraw && isVisible)) {\n    //         this.layers.forEach((layer) => layer.putAppearance(dest, cell));\n    //         if (dest.dances) {\n    //             cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n    //         } else {\n    //             cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n    //         }\n    //         dest.bake();\n    //         cell.putSnapshot(dest);\n    //         cell.needsRedraw = false;\n    //         cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     } else {\n    //         cell.getSnapshot(dest);\n    //     }\n    //     if (isVisible) {\n    //         const light = this.light.getLight(cell.x, cell.y);\n    //         dest.multiply(light);\n    //     } else if (isRevealed) {\n    //         dest.scale(50);\n    //     } else {\n    //         dest.blackOut();\n    //     }\n    //     if (cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT)) {\n    //         [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n    //     }\n    // }\n    getAppearance(dest, map, cell) {\n        let tiles = cell.tiles;\n        let actor = null;\n        let item = null;\n        if (cell.memory) {\n            tiles = cell.memory.tiles;\n            item = cell.memory.item;\n        }\n        else {\n            actor = cell.hasActor() ? cell.actor : null;\n            item = cell.hasItem() ? cell.item : null;\n        }\n        const ground = tiles[Flags.Depth.GROUND];\n        const surface = tiles[Flags.Depth.SURFACE];\n        const liquid = tiles[Flags.Depth.LIQUID];\n        const gas = tiles[Flags.Depth.GAS]; // How to get volume!?!?!?!\n        dest.drawSprite(ground.sprite);\n        if (surface) {\n            dest.drawSprite(surface.sprite);\n        }\n        if (liquid) {\n            dest.drawSprite(liquid.sprite);\n        }\n        if (item) {\n            item.drawInto(dest);\n        }\n        if (actor) {\n            actor.drawInto(dest);\n        }\n        if (gas) {\n            const opacity = GWU.rng.cosmetic.number(50) + 25;\n            dest.drawSprite(gas.sprite, opacity);\n        }\n        if (cell.hasFx()) {\n            const fx = map.fxAt(cell.x, cell.y);\n            if (fx)\n                dest.drawSprite(fx.sprite);\n        }\n        if (dest.dances) {\n            cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            map.setMapFlag(Flags.Map.MAP_DANCES);\n        }\n        else {\n            cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n        }\n        dest.bake(true); // apply dancing\n    }\n    applyLight(dest, cell, fov) {\n        const isVisible = !fov || fov.isAnyKindOfVisible(cell.x, cell.y);\n        const isRevealed = !fov || fov.isRevealed(cell.x, cell.y);\n        const light = cell.map.light.getLight(cell.x, cell.y);\n        dest.multiply(light);\n        // TODO - is Clairy\n        // TODO - is Telepathy\n        if (fov && fov.isCursor(cell.x, cell.y)) {\n            dest.invert();\n        }\n        else if (!isVisible) {\n            if (cell.hasEntityFlag(Flags.Entity.L_BRIGHT_MEMORY)) {\n            }\n            else if (isRevealed) {\n                dest.scale(70);\n            }\n            else {\n                dest.blackOut();\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { Cell } from './cell';\nimport * as TILE from '../tile';\nimport { Tile } from '../tile';\nimport { BasicDrawer } from '../draw/basic';\nimport * as ACTION from '../action';\n// export interface MapEvents extends GWU.events.Events {\n//     // add or remove actor\n//     actor: (map: Map, actor: Actor, isNew: boolean) => void;\n//     // add or remove item\n//     item: (map: Map, item: Item, isNew: boolean) => void;\n//     // add or remove fx\n//     fx: (map: Map, fx: Entity, isNew: boolean) => void;\n//     // change cell tiles\n//     cell: (map: Map, cell: Cell) => void;\n// }\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.locations = {};\n        // _memory: GWU.grid.Grid<CellMemory>;\n        // machineCount = 0;\n        // _seed = 0;\n        this.rng = GWU.rng.random;\n        this.id = 0;\n        this.actors = [];\n        this.items = [];\n        this.fx = [];\n        this.player = null;\n        this._tweens = new GWU.app.Tweens();\n        // actions = new ACTION.Actions(this);\n        this.events = new GWU.app.Events(this);\n        this.flags = { map: 0 };\n        // this.layers = [];\n        this.data = { seed: 0, machineCount: 0 };\n        if (opts.id) {\n            this.data.id = opts.id;\n        }\n        this.drawer = opts.drawer || new BasicDrawer();\n        this.cells = GWU.grid.make(width, height, (x, y) => new Cell(this, x, y));\n        // this._memory = GWU.grid.make(\n        //     width,\n        //     height,\n        //     (x, y) => new CellMemory(this, x, y)\n        // );\n        if (opts.seed) {\n            this.data.seed = opts.seed;\n            this.rng = GWU.rng.make(opts.seed);\n        }\n        this.light = new GWU.light.LightSystem(this, opts);\n        if (opts.fov === undefined) {\n            opts.alwaysVisible = true;\n        }\n        else if (opts.fov === false) {\n            opts.visible = true;\n        }\n        opts.callback = this.onFovChange.bind(this);\n        this.fov = new GWU.fov.FovSystem(this, opts);\n        // this.initLayers();\n        if (opts.player) {\n            this.setPlayer(opts.player);\n        }\n        if (opts.actions) {\n            this.events.load(opts.actions);\n        }\n    }\n    get seed() {\n        return this.data.seed;\n    }\n    set seed(v) {\n        this.data.seed = v;\n        this.rng = GWU.rng.make(v);\n    }\n    get width() {\n        return this.cells.width;\n    }\n    get height() {\n        return this.cells.height;\n    }\n    // memory(x: number, y: number): CellMemory {\n    //     return this._memory[x][y];\n    // }\n    // knowledge(x: number, y: number): CellInfoType {\n    //     if (this.fov.isAnyKindOfVisible(x, y)) return this.cell(x,y);\n    //     return this._memory[x][y];\n    // }\n    // LAYERS\n    // initLayers() {\n    //     this.addLayer(Flags.Depth.GROUND, new Layer.TileLayer(this, 'ground'));\n    //     this.addLayer(\n    //         Flags.Depth.SURFACE,\n    //         new Layer.FireLayer(this, 'surface')\n    //     );\n    //     this.addLayer(Flags.Depth.GAS, new Layer.GasLayer(this, 'gas'));\n    // }\n    // addLayer(depth: number | keyof typeof Flags.Depth, layer: LayerType) {\n    //     if (typeof depth !== 'number') {\n    //         depth = Flags.Depth[depth as keyof typeof Flags.Depth];\n    //     }\n    //     layer.depth = depth;\n    //     this.layers[depth] = layer;\n    // }\n    // removeLayer(depth: number | keyof typeof Flags.Depth) {\n    //     if (typeof depth !== 'number') {\n    //         depth = Flags.Depth[depth as keyof typeof Flags.Depth];\n    //     }\n    //     if (!depth) throw new Error('Cannot remove layer with depth=0.');\n    //     delete this.layers[depth];\n    // }\n    // getLayer(depth: number | keyof typeof Flags.Depth): LayerType | null {\n    //     if (typeof depth !== 'number') {\n    //         depth = Flags.Depth[depth as keyof typeof Flags.Depth];\n    //     }\n    //     return this.layers[depth] || null;\n    // }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    someCell(cb) {\n        return this.cells.some((c, x, y) => cb(c, x, y, this));\n    }\n    // items\n    hasItem(x, y) {\n        return this.cell(x, y).hasItem();\n    }\n    itemAt(x, y) {\n        return this.items.find((i) => i.isAt(x, y)) || null;\n    }\n    eachItem(cb) {\n        this.items.forEach(cb);\n    }\n    addItem(x, y, item, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        // if (!cell.canAddItem(item)) return false;\n        if (cell._addItem(item)) {\n            const index = this.items.indexOf(item);\n            if (index < 0) {\n                this.items.push(item);\n            }\n            item.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddItemEffects(item, cell);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddItemEffects(item, cell) {\n        if (item.key &&\n            item.key.matches(cell.x, cell.y) &&\n            cell.hasAction('key')) {\n            cell.trigger('key', { map: this, key: true, item });\n        }\n        else if (cell.hasAction('place')) {\n            cell.trigger('place', { map: this, item });\n        }\n    }\n    addItemNear(x, y, item, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasItem())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (item.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addItem(loc[0], loc[1], item, fireEffects);\n    }\n    removeItem(item, fireEffects = false) {\n        const cell = this.cell(item.x, item.y);\n        // if (!cell.canRemoveItem(item)) return false;\n        if (cell._removeItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, cell);\n            }\n            GWU.arrayDelete(this.items, item);\n            item.removeFromMap();\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveItemEffects(item, cell) {\n        if (item.isKey(cell.x, cell.y) && cell.hasAction('no_key')) {\n            cell.trigger('no_key', {\n                map: this,\n                key: true,\n                item,\n            });\n        }\n        else if (cell.hasAction('remove')) {\n            cell.trigger('remove', { map: this, key: true, item });\n        }\n    }\n    moveItem(item, x, y, fireEffects = false) {\n        if (item.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(item.x, item.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveItem(item)) return false;\n        // if (!newCell.canAddItem(item)) return false;\n        currentCell._removeItem(item);\n        if (newCell._addItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, currentCell);\n                this._fireAddItemEffects(item, newCell);\n            }\n            item.addToMap(this, x, y);\n        }\n        return true;\n    }\n    //  moveItem(item: Item, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = item.x;\n    //     const oldY = item.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[item.depth] as Layer.ItemLayer;\n    //     if (!( layer.removeItem(item))) return false;\n    //     if (!( this.addItem(x, y, item))) {\n    //         layer.forceItem(item.x, item.y, item);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (item.lastSeen) {\n    //     //         this._memory[item.lastSeen.x][item.lastSeen.y].removeItem(item);\n    //     //         this.clearCellFlag(\n    //     //             item.lastSeen.x,\n    //     //             item.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         item.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.item = item;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     item.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    setPlayer(player) {\n        this.player = player;\n    }\n    actorAt(x, y) {\n        return this.actors.find((a) => a.isAt(x, y)) || null;\n    }\n    eachActor(cb) {\n        this.actors.forEach(cb);\n    }\n    addActor(x, y, actor, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        if (!cell.canAddActor(actor))\n            return false;\n        if (cell._addActor(actor)) {\n            const index = this.actors.indexOf(actor);\n            if (index < 0) {\n                this.actors.push(actor);\n            }\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddActorEffects(actor, cell);\n            }\n            if (index < 0) {\n                this.trigger('enter', { map: this, actor });\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddActorEffects(actor, cell) {\n        if (actor.isKey(cell.x, cell.y) && cell.hasAction('key')) {\n            cell.trigger('key', { map: this, key: true, actor });\n        }\n        else if (actor.isPlayer() && cell.hasAction('player-enter')) {\n            cell.trigger('player-enter', {\n                map: this,\n                actor,\n            });\n        }\n        else if (cell.hasAction('enter')) {\n            cell.trigger('enter', { map: this, actor });\n        }\n    }\n    addActorNear(x, y, actor, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasActor())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addActor(loc[0], loc[1], actor, fireEffects);\n    }\n    removeActor(actor, fireEffects = false) {\n        const cell = this.cell(actor.x, actor.y);\n        if (!cell.canRemoveActor(actor))\n            return false;\n        if (cell._removeActor(actor)) {\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, cell);\n            }\n            actor.removeFromMap();\n            GWU.arrayDelete(this.actors, actor);\n            this.trigger('exit', { map: this, actor });\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveActorEffects(actor, cell) {\n        if (actor.isKey(actor.x, actor.y) && cell.hasAction('no_key')) {\n            cell.trigger('no_key', { map: this, key: true, actor });\n        }\n        else if (actor.isPlayer() && cell.hasAction('player-exit')) {\n            cell.trigger('player-exit', { map: this, actor });\n        }\n        else if (cell.hasAction('exit')) {\n            cell.trigger('exit', { map: this, actor });\n        }\n    }\n    moveActor(actor, x, y, fireEffects = false) {\n        if (actor.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(actor.x, actor.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveActor(actor)) return false;\n        // if (!newCell.canAddActor(actor)) return false;\n        currentCell._removeActor(actor);\n        if (newCell._addActor(actor)) {\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, currentCell);\n                this._fireAddActorEffects(actor, newCell);\n            }\n        }\n        return true;\n    }\n    //  moveActor(actor: Actor, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = actor.x;\n    //     const oldY = actor.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[actor.depth] as Layer.ActorLayer;\n    //     if (!( layer.removeActor(actor))) return false;\n    //     if (!( layer.addActor(x, y, actor))) {\n    //         layer.forceActor(actor.x, actor.y, actor);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (actor.lastSeen) {\n    //     //         this._memory[actor.lastSeen.x][actor.lastSeen.y].removeActor(\n    //     //             actor\n    //     //         );\n    //     //         this.clearCellFlag(\n    //     //             actor.lastSeen.x,\n    //     //             actor.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         actor.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.actor = actor;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     actor.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    fxAt(x, y) {\n        return this.fx.find((i) => i.isAt(x, y)) || null;\n    }\n    eachFx(cb) {\n        this.fx.forEach(cb);\n    }\n    addFx(x, y, fx) {\n        const cell = this.get(x, y);\n        if (!cell)\n            return false;\n        fx.x = x;\n        fx.y = y;\n        cell._addFx(fx);\n        this.fx.push(fx);\n        // this.events.emit('fx', this, fx, true);\n        return true;\n    }\n    moveFx(fx, x, y) {\n        const current = this.get(fx.x, fx.y);\n        const updated = this.get(x, y);\n        if (!updated)\n            return false;\n        current._removeFx(fx);\n        fx.x = x;\n        fx.y = y;\n        updated._addFx(fx);\n        return true;\n    }\n    removeFx(fx) {\n        const cell = this.get(fx.x, fx.y);\n        GWU.arrayDelete(this.fx, fx);\n        if (cell) {\n            cell._removeFx(fx);\n        }\n        // this.events.emit('fx', this, fx, false);\n        return true;\n    }\n    // Information\n    // isVisible(x: number, y: number): boolean {\n    //     return this.fov.isAnyKindOfVisible(x, y);\n    // }\n    hasKey(x, y) {\n        const actor = this.actorAt(x, y);\n        if (actor && actor.isKey(x, y))\n            return true;\n        const item = this.itemAt(x, y);\n        if (item && item.isKey(x, y))\n            return true;\n        return false;\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        const getCh = (cell) => {\n            return cell.dump();\n        };\n        this.cells.dump(fmt || getCh, log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    get needsRedraw() {\n        return this.hasMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v)\n            this.setMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n        else\n            this.clearMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    hasCellFlag(x, y, flag) {\n        return this.cell(x, y).hasCellFlag(flag);\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasEntityFlag(x, y, flag) {\n        return this.cell(x, y).hasEntityFlag(flag);\n    }\n    hasTileFlag(x, y, flag) {\n        return this.cell(x, y).hasTileFlag(flag);\n    }\n    highlightPath(path, markCursor = true) {\n        this.clearPath();\n        path.forEach((loc) => {\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_HIGHLIGHTED);\n        });\n        if (markCursor && path[0]) {\n            const loc = path[0];\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_CURSOR);\n        }\n        this.needsRedraw = true;\n    }\n    highlightCell(x, y, markCursor = false) {\n        this.setCellFlag(x, y, markCursor ? Flags.Cell.IS_CURSOR : Flags.Cell.IS_HIGHLIGHTED);\n        this.needsRedraw = true;\n    }\n    clearPath() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR | Flags.Cell.IS_HIGHLIGHTED));\n        this.needsRedraw = true;\n    }\n    showCursor(x, y) {\n        this.clearCursor();\n        this.cell(x, y).setCellFlag(Flags.Cell.IS_CURSOR);\n        this.needsRedraw = true;\n    }\n    clearCursor() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR));\n        this.needsRedraw = true;\n    }\n    clear() {\n        this.light.glowLightChanged = true;\n        // this.fov.needsUpdate = true;\n        // this.layers.forEach((l) => l.clear());\n        this.cells.forEach((c) => {\n            c.clear();\n            this.events.trigger('changed', c);\n        });\n    }\n    clearCell(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clear(tile);\n        this.events.trigger('changed', cell);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cells[i][j];\n                cell.clear(this.isBoundaryXY(i, j) ? boundary : tile);\n                this.events.trigger('changed', cell);\n            }\n        }\n    }\n    hasTile(x, y, tile\n    // useMemory = false\n    ) {\n        return this.cell(x, y).hasTile(tile);\n        // if (!useMemory) return this.cell(x, y).hasTile(tile);\n        // return this.memory(x, y).hasTile(tile);\n    }\n    forceTile(x, y, tile) {\n        return this.setTile(x, y, tile, { superpriority: true });\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof Tile)) {\n            const name = tile;\n            tile = TILE.get(name);\n            if (!tile)\n                throw new Error('Failed to find tile: ' + name);\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        // const depth = tile.depth || 0;\n        // const layer = this.layers[depth] || this.layers[0];\n        // if (!(layer instanceof Layer.TileLayer)) return false;\n        const cell = this.cell(x, y);\n        if (cell.setTile(tile, opts)) {\n            this.events.trigger('changed', cell, opts);\n            return true;\n        }\n        return false;\n    }\n    // clearTiles(x: number, y: number, tile?: TileBase) {\n    //     const cell = this.cell(x, y);\n    //     cell.clearTiles(tile);\n    // }\n    tick(dt) {\n        let didSomething = this._tweens.length > 0;\n        this._tweens.update(dt);\n        if (this.triggerAll('tick')) {\n            didSomething = true;\n        }\n        // for (let layer of this.layers) {\n        //     if (layer && layer.tick(dt)) {\n        //         didSomething = true;\n        //     }\n        // }\n        this.events.trigger('tick', dt);\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cell(x, y));\n        });\n        // this.layers.forEach((l, depth) => {\n        //     l.copy(src.layers[depth]);\n        // });\n        this.actors = src.actors.slice();\n        this.items = src.items.slice();\n        this.flags.map = src.flags.map;\n        // this.fov.needsUpdate = true;\n        this.light.copy(src.light);\n        this.rng = src.rng;\n        this.data = Object.assign({}, src.data);\n        src.events.trigger('assign', this);\n        this.events.trigger('copy', src);\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    hasAction(action) {\n        return this.events.has(action);\n    }\n    on(action, fn) {\n        return this.events.on(action, fn);\n    }\n    once(action, fn) {\n        return this.events.once(action, fn);\n    }\n    off(action, fn) {\n        this.events.off(action, fn);\n    }\n    trigger(ev, action = {}) {\n        if (!(action instanceof ACTION.Action)) {\n            action = new ACTION.Action(action);\n        }\n        this.events.trigger(ev, action);\n        if (action.isDone())\n            return;\n        if (action.x !== undefined && action.y !== undefined) {\n            const cell = this.cell(action.x, action.y);\n            cell.trigger(ev, action);\n        }\n    }\n    triggerAll(name, action = {}) {\n        if (!(action instanceof ACTION.Action)) {\n            action = new ACTION.Action(action);\n        }\n        let didSomething = false;\n        const willFire = GWU.grid.alloc(this.width, this.height);\n        action.map = this;\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                if (!tile.hasAction(name))\n                    return;\n                // const ev = tile.effects[event];\n                // if (!ev) return;\n                const effect = { chance: 0 }; // DELETE\n                // const effect = Effect.from(ev);\n                // if (!effect) return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    GWU.xy.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    this.rng.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= GWU.flag.fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        action.force = true;\n        willFire.forEach((w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & GWU.flag.fl(depth)) {\n                    cell.trigger(name, action);\n                    if (action.isSuccess()) {\n                        didSomething = true;\n                    }\n                    action.reset();\n                }\n            }\n        });\n        GWU.grid.free(willFire);\n        return didSomething;\n    }\n    // DRAW\n    drawInto(dest, opts) {\n        this.drawer.drawInto(dest, this, opts);\n    }\n    getAppearanceAt(x, y, dest) {\n        const cell = this.cell(x, y);\n        return this.drawer.drawCell(dest, this, cell);\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n            // cell.clearCellFlag(Flags.Cell.LIGHT_CHANGED);\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(cb) {\n        // TODO - Clairy, Telepathy, Detect, etc...\n        if (this.player) {\n            cb(this.player.x, this.player.y, this.player.visionDistance, GWU.fov.FovFlags.PLAYER);\n        }\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    // redrawCell(x: number, y: number): void {\n    //     // if (clearMemory) {\n    //     //     this.clearMemory(x, y);\n    //     // }\n    //     this.cell(x, y).needsRedraw = true;\n    // }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        cell.storeMemory();\n        if (cell.hasActor() &&\n            cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    makeVisible(x, y) {\n        const cell = this.cell(x, y);\n        cell.clearMemory();\n        if (cell.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED |\n                Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasActor() &&\n            !cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasItem() &&\n            !cell.item.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    onFovChange(x, y, isVisible) {\n        if (!isVisible) {\n            this.storeMemory(x, y);\n        }\n        else {\n            this.makeVisible(x, y);\n        }\n    }\n    // Animator\n    addAnimation(a) {\n        this._tweens.add(a);\n    }\n    removeAnimation(a) {\n        this._tweens.remove(a);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Entity as ObjectFlags } from '../flags/entity';\nimport * as Flags from '../flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = GWU.grid.alloc(map.width, map.height);\n    const grid = GWU.grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~Flags.Cell.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & Flags.Cell.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    const newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    Flags.Cell.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & Flags.Cell.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & Flags.Cell.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + GWU.xy.DIRS[dir][0];\n                        const newY = j + GWU.xy.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                Flags.Cell.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount =\n                                                cellCount;\n                                            map.cell(i2, j2).flags.cell &=\n                                                ~Flags.Cell.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= Flags.Cell.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GWU.grid.free(passMap);\n    GWU.grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    function getCount(x, y) {\n        let count = passMap[x][y] == 2 ? 5000 : 1;\n        if (map.cell(x, y).flags.cell & Flags.Cell.IS_IN_AREA_MACHINE) {\n            count = 10000;\n        }\n        return count;\n    }\n    let count = 0;\n    const todo = [[startX, startY]];\n    const free = [];\n    while (todo.length) {\n        const item = todo.pop();\n        free.push(item);\n        const x = item[0];\n        const y = item[1];\n        if (results[x][y])\n            continue;\n        results[x][y] = 1;\n        count += getCount(x, y);\n        for (let dir = 0; dir < 4; dir++) {\n            const newX = x + GWU.xy.DIRS[dir][0];\n            const newY = y + GWU.xy.DIRS[dir][1];\n            if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                passMap[newX][newY] &&\n                !results[newX][newY]) {\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    checkLoopiness(map);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    const todo = GWU.grid.alloc(map.width, map.height, 1);\n    let tryAgain = true;\n    while (tryAgain) {\n        tryAgain = false;\n        todo.forEach((v, x, y) => {\n            if (!v)\n                return;\n            const cell = map.cell(x, y);\n            todo[x][y] = 0;\n            if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                return;\n            }\n            // find an unloopy neighbor to start on\n            for (sdir = 0; sdir < 8; sdir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[sdir][0];\n                newY = y + GWU.xy.CLOCK_DIRS[sdir][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const cell = map.cell(newX, newY);\n                if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    break;\n                }\n            }\n            if (sdir == 8) {\n                // no unloopy neighbors\n                return; // leave cell loopy\n            }\n            // starting on this unloopy neighbor,\n            // work clockwise and count up:\n            // (a) the number of strings of loopy neighbors, and\n            // (b) the length of the longest such string.\n            numStrings = maxStringLength = currentStringLength = 0;\n            inString = false;\n            for (dir = sdir; dir < sdir + 8; dir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[dir % 8][0];\n                newY = y + GWU.xy.CLOCK_DIRS[dir % 8][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const newCell = map.cell(newX, newY);\n                if (newCell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    currentStringLength++;\n                    if (!inString) {\n                        numStrings++;\n                        inString = true;\n                        if (numStrings > 1) {\n                            break; // more than one string here; leave loopy\n                        }\n                    }\n                }\n                else if (inString) {\n                    if (currentStringLength > maxStringLength) {\n                        maxStringLength = currentStringLength;\n                    }\n                    currentStringLength = 0;\n                    inString = false;\n                }\n            }\n            if (inString && currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            if (numStrings == 1 && maxStringLength <= 4) {\n                cell.clearCellFlag(Flags.Cell.IS_IN_LOOP);\n                // console.log(x, y, numStrings, maxStringLength);\n                // map.dump((c) =>\n                //     c.hasCellFlag(Flags.Cell.IS_IN_LOOP) ? '*' : ' '\n                // );\n                for (dir = 0; dir < 8; dir++) {\n                    newX = x + GWU.xy.CLOCK_DIRS[dir][0];\n                    newY = y + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) &&\n                        map.cell(newX, newY).hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                        todo[newX][newY] = 1;\n                        tryAgain = true;\n                    }\n                }\n            }\n        });\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & Flags.Cell.IS_IN_LOOP &&\n                    left.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = GWU.grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    let newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            Flags.Cell.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    GWU.grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n","import * as GWU from 'gw-utils';\nimport { Map } from './map';\nexport class Snapshot {\n    constructor(map) {\n        this.map = new Map(map.width, map.height);\n        this.version = 0;\n    }\n}\nexport class SnapshotManager {\n    constructor(map) {\n        this.version = 0;\n        // layerVersion: number[] = [];\n        this.lightVersion = 0;\n        // fovVersion = 0;\n        this.free = [];\n        this.map = map;\n        this.cellVersion = GWU.grid.make(map.width, map.height);\n        // this.layerVersion = map.layers.map(() => 1);\n    }\n    takeNew() {\n        ++this.version;\n        const snap = this.free.length\n            ? this.free.pop()\n            : new Snapshot(this.map);\n        snap.map.flags.map = this.map.flags.map;\n        this.cellVersion.update((v, x, y) => {\n            const srcCell = this.map.cell(x, y);\n            if (srcCell.changed) {\n                v = this.version;\n            }\n            if (v !== snap.version) {\n                const destCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n            }\n            return v;\n        });\n        // systems\n        if (this.map.light.changed) {\n            this.lightVersion = this.version;\n            this.map.light.changed = false;\n        }\n        if (snap.version !== this.lightVersion) {\n            snap.map.light.copy(this.map.light);\n        }\n        // if (this.map.fov.changed) {\n        //     this.fovVersion = this.version;\n        //     this.map.fov.changed = false;\n        // }\n        // if (snap.version !== this.fovVersion) {\n        //     snap.map.fov.copy(this.map.fov);\n        // }\n        // layers\n        // this.map.layers.forEach((layer, index) => {\n        //     const snapLayer = snap.map.layers[index];\n        //     if (layer.changed) {\n        //         this.layerVersion[index] = this.version;\n        //     }\n        //     if (this.layerVersion[index] !== snap.version) {\n        //         snapLayer.copy(layer);\n        //     }\n        // });\n        snap.version = this.version;\n        return snap;\n    }\n    revertMapTo(snap) {\n        this.cellVersion.update((v, x, y) => {\n            if (v < snap.version)\n                return v;\n            const destCell = this.map.cell(x, y);\n            if (v > snap.version || destCell.changed) {\n                const srcCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n                return snap.version;\n            }\n            return v;\n        });\n        // systems\n        if (snap.version < this.lightVersion || this.map.light.changed) {\n            this.map.light.copy(snap.map.light);\n            this.lightVersion = snap.version;\n        }\n        // if (snap.version < this.fovVersion || this.map.fov.changed) {\n        //     this.map.fov.copy(snap.map.fov);\n        //     this.fovVersion = snap.version;\n        // }\n        // layers\n        // this.layerVersion.forEach((v, index) => {\n        //     if (v < snap.version) return;\n        //     const destLayer = this.map.layers[index];\n        //     if (v > snap.version || destLayer.changed) {\n        //         const srcLayer = snap.map.layers[index];\n        //         destLayer.copy(srcLayer);\n        //         this.layerVersion[index] = snap.version;\n        //     }\n        // });\n        this.version = snap.version;\n    }\n    release(snap) {\n        this.free.push(snap);\n    }\n}\n","import * as GWU from 'gw-utils';\nexport function isHallway(map, x, y) {\n    return (GWU.xy.arcCount(x, y, (i, j) => {\n        return map.cell(i, j).isPassable();\n    }) > 1);\n}\nexport function replaceTile(map, find, replace) {\n    let count = 0;\n    map.eachCell((c) => {\n        if (!c.hasTile(find))\n            return;\n        if (c.setTile(replace)) {\n            ++count;\n        }\n    });\n    return count;\n}\nexport function getCellPathCost(map, x, y) {\n    const cell = map.cell(x, y);\n    if (cell.blocksMove())\n        return GWU.path.OBSTRUCTION;\n    if (cell.blocksPathing())\n        return GWU.path.FORBIDDEN;\n    if (cell.hasActor())\n        return 10;\n    return 1;\n}\nexport function fillCostMap(map, costMap) {\n    costMap.update((_v, x, y) => getCellPathCost(map, x, y));\n}\nexport function getPathBetween(map, x0, y0, x1, y1, options = {}) {\n    const distanceMap = GWU.grid.alloc(map.width, map.height);\n    const costMap = GWU.grid.alloc(map.width, map.height);\n    fillCostMap(map, costMap);\n    GWU.path.calculateDistances(distanceMap, x1, y1, costMap, options.eightWays, GWU.xy.straightDistanceBetween(x0, y0, x1, y1) + 1);\n    const path = GWU.path.getPath(distanceMap, x0, y0, (x, y) => map.cell(x, y).blocksMove(), options.eightWays);\n    if (path) {\n        path.push([x1, y1]);\n    }\n    GWU.grid.free(costMap);\n    GWU.grid.free(distanceMap);\n    return path;\n}\n","import { Map } from './map';\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile === undefined) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === undefined) {\n        opts.boundary = 'WALL';\n    }\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n        map.light.update();\n    }\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    // // In case we reveal the map or make it all visible we need our memory set correctly\n    // map.cells.forEach((_c, x, y) => {\n    //     if (map.fov.isRevealed(x, y)) {\n    //         map.storeMemory(x, y, true); // with snapshot\n    //     }\n    // });\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n","export * from './cell';\nexport * from './map';\nexport * from './analyze';\nexport * from './snapshot';\nexport * from './utils';\nexport * from './make';\n// export * from './path';\n","import * as GWU from 'gw-utils';\nimport { Horde as Flags } from '../flags/horde';\nimport * as Map from '../map';\nimport * as Actor from '../actor';\nexport class Horde {\n    // requiredTile: string | null = null;\n    constructor(config) {\n        this.tags = [];\n        this.members = {};\n        // blueprintId: string | null = null;\n        this.flags = { horde: 0 };\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        this.leader = config.leader;\n        if (config.members) {\n            Object.entries(config.members).forEach(([id, range]) => {\n                this.members[id] = GWU.range.make(range);\n            });\n        }\n        this.frequency = GWU.frequency.make(config.frequency || 100);\n        // this.blueprintId = config.blueprintId || null;\n        this.flags.horde = GWU.flag.from(Flags, config.flags);\n        // if (config.requiredTile) this.requiredTile = config.requiredTile;\n    }\n    spawn(map, x = -1, y = -1, opts = {}) {\n        var _a;\n        opts.canSpawn = opts.canSpawn || GWU.TRUE;\n        opts.rng = opts.rng || map.rng;\n        opts.machine = (_a = opts.machine) !== null && _a !== void 0 ? _a : 0;\n        const leader = this._spawnLeader(map, x, y, opts);\n        if (!leader)\n            return null;\n        this._spawnMembers(leader, map, opts);\n        return leader;\n    }\n    _spawnLeader(map, x, y, opts) {\n        const leaderKind = Actor.get(this.leader);\n        if (!leaderKind) {\n            throw new Error('Failed to find leader kind = ' + this.leader);\n        }\n        if (x >= 0 && y >= 0) {\n            if (leaderKind.avoidsCell(map.cell(x, y)))\n                return null;\n        }\n        const leader = Actor.make(leaderKind, { machineHome: opts.machine });\n        if (!leader)\n            throw new Error('Failed to make horde leader - ' + this.leader);\n        if (x < 0 || y < 0) {\n            [x, y] = this._pickLeaderLoc(leader, map, opts) || [-1, -1];\n            if (x < 0 || y < 0) {\n                return null;\n            }\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addLeader(leader, map, x, y, opts)) {\n            return null;\n        }\n        return leader;\n    }\n    _addLeader(leader, map, x, y, _opts) {\n        return map.addActor(x, y, leader);\n    }\n    _addMember(member, map, x, y, leader, _opts) {\n        member.leader = leader;\n        return map.addActor(x, y, member);\n    }\n    _spawnMembers(leader, map, opts) {\n        const entries = Object.entries(this.members);\n        if (entries.length == 0)\n            return 0;\n        let count = 0;\n        entries.forEach(([kindId, countRange]) => {\n            const count = countRange.value(opts.rng);\n            for (let i = 0; i < count; ++i) {\n                this._spawnMember(kindId, map, leader, opts);\n            }\n        });\n        return count;\n    }\n    _spawnMember(kindId, map, leader, opts) {\n        const kind = Actor.get(kindId);\n        if (!kind) {\n            throw new Error('Failed to find member kind = ' + kindId);\n        }\n        const member = Actor.make(kind, { machineHome: opts.machine });\n        if (!member)\n            throw new Error('Failed to make horde member - ' + kindId);\n        const [x, y] = this._pickMemberLoc(member, map, leader, opts) || [\n            -1, -1,\n        ];\n        if (x < 0 || y < 0) {\n            return null;\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addMember(member, map, x, y, leader, opts)) {\n            return null;\n        }\n        return member;\n    }\n    _pickLeaderLoc(leader, map, opts) {\n        let loc = opts.rng.matchingLoc(map.width, map.height, (x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            if (!opts.canSpawn(x, y))\n                return false;\n            if (leader.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n    _pickMemberLoc(actor, map, leader, opts) {\n        let loc = opts.rng.matchingLocNear(leader.x, leader.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            // if (map.fov.isAnyKindOfVisible(x, y)) return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Horde } from './horde';\nimport { Horde as Flags } from '../flags/horde';\nexport const hordes = {};\nexport function install(id, horde) {\n    if (typeof horde === 'string') {\n        horde = { leader: horde };\n    }\n    if (!(horde instanceof Horde)) {\n        horde = new Horde(horde);\n    }\n    hordes[id] = horde;\n    return horde;\n}\nexport function installAll(hordes) {\n    Object.entries(hordes).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function from(id) {\n    if (id instanceof Horde) {\n        return id;\n    }\n    if (typeof id === 'string') {\n        return hordes[id];\n    }\n    return new Horde(id);\n}\nexport function random(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n        flags: 0,\n        forbidFlags: 0,\n        depth: 0,\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    const rng = opts.rng || GWU.rng.random;\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    if (opts.flags) {\n        if (typeof opts.flags === 'string') {\n            opts.flags\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .forEach((flag) => {\n                if (flag.startsWith('!')) {\n                    const key = flag.substring(1);\n                    match.forbidFlags |= Flags[key];\n                }\n                else {\n                    match.flags |= Flags[flag];\n                }\n            });\n        }\n    }\n    if (opts.forbidFlags) {\n        match.forbidFlags = GWU.flag.from(Flags, opts.forbidFlags);\n    }\n    if (opts.depth) {\n        match.depth = opts.depth;\n    }\n    if (match.depth && opts.oodChance) {\n        while (rng.chance(opts.oodChance)) {\n            match.depth += 1;\n        }\n        match.forbidFlags |= Flags.HORDE_NEVER_OOD;\n    }\n    const matches = Object.values(hordes).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        if (match.flags && !(k.flags.horde & match.flags)) {\n            return false;\n        }\n        if (match.forbidFlags && k.flags.horde & match.forbidFlags) {\n            return false;\n        }\n        return true;\n    });\n    if (match.depth) {\n        return rng.item(matches) || null;\n    }\n    const depth = match.depth;\n    const weights = matches.map((h) => h.frequency(depth));\n    const index = rng.weighted(weights);\n    if (index < 0)\n        return null;\n    return matches[index];\n}\n","// export * from './memory';\n// export * from './system';\nexport const empty = {};\n","/*\n    Attributes\n    ========================\n\n    To configure attributes, set the defaults:\n\n    Attribute.install(')\n\n    const attr = new Attributes(10);\n\n    attr.set('str', 10);\n    attr.set('dex', 10);\n    ...\n    attr.set('chr', 10);\n\n    // to get the current value\n    attr.get('str');\n\n    // To raise an attribute permanently\n    attr.gain('chr', 1);\n\n    // To raise an attribute temporarily\n    attr.gain('chr', 1, false);\n\n    // To lower an attribute permanently\n    attr.drain('chr', 1, true);\n\n    // to lower an attribute temporarily\n    attr.drain('chr', 1);\n\n    // to restore (remove) all temporary changes\n    attr.restore();\n\n    // to add a temporary change that can be removed by itself\n    attr.addBonus('str', 1);\n\n    // to remove the bonus\n    attr.clearBonus('str', 1);\n\n    // adjustments (bonuses) are also possible via:\n    attr.adjust('str', { bonus: 1 });\n\n    // But adjustments can also set the\n    attr.adjust('str', { fixed: 14 });      // temporarily sets base\n    attr.adjust('str', { base: 21 });       // resets the base\n    attr.adjust('str', { restore: true });  // removes all bonuses/penalties\n    attr.adjust('str', { min: 10 });        // limits value\n    attr.adjust('str', { max: 30 });        // limits value\n    attr.adjust('str', { sustain: true });  // turns off lowering values\n*/\nexport class Attributes {\n    constructor(baseValues) {\n        this._base = {};\n        this._max = {};\n        this._bonus = {};\n        this._sustain = {};\n        this._value = {};\n        this.changed = null;\n        this.init(baseValues);\n    }\n    init(baseValues) {\n        for (let k in attributes) {\n            const v = typeof baseValues === 'number' ? baseValues : attributes[k];\n            this.set(k, v);\n        }\n        if (typeof baseValues !== 'number') {\n            for (let k in baseValues) {\n                this.set(k, baseValues[k]);\n            }\n        }\n    }\n    forEach(fn) {\n        Object.keys(attributes).forEach((k) => fn(this.get(k)));\n    }\n    // modifier(name: string) {\n    //     return Math.floor((this.get(name) - 10) / 2);\n    // }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    set(name, value = 0) {\n        this._value[name] = value;\n        this._base[name] = value;\n        this._max[name] = value;\n        this._bonus[name] = [];\n        return value;\n    }\n    base(name) {\n        return this._base[name] || 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    sustain(name) {\n        return this._sustain[name] || false;\n    }\n    gain(name, delta, raiseMax = true) {\n        if (delta < 0 && this._sustain[name])\n            return 0;\n        this._base[name] += delta;\n        if (raiseMax && this._base[name] > this._max[name]) {\n            this._max[name] = this._base[name];\n        }\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    drain(name, loss, lowerMax = false) {\n        if (loss < 0)\n            loss = -loss;\n        const changed = this.gain(name, -loss, false);\n        if (changed && lowerMax) {\n            this._max[name] = this._base[name];\n        }\n        return changed;\n    }\n    restore(name) {\n        this._base[name] = this._max[name];\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    addBonus(name, bonus) {\n        return this._addBonus(name, { bonus });\n    }\n    _addBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        if (this._value[name] === undefined) {\n            this.set(name, 0);\n        }\n        this._bonus[name].push(bonus);\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    clearBonus(name, bonus) {\n        return this._clearBonus(name, { bonus });\n    }\n    _clearBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        let arr = this._bonus[name] || [];\n        let key = JSON.stringify(bonus);\n        let index = arr.findIndex((o) => {\n            return JSON.stringify(o) == key;\n        });\n        if (index > -1) {\n            arr.splice(index, 1);\n            let old = this.get(name);\n            return this._calcValue(name) - old;\n        }\n        return 0;\n    }\n    _calcValue(name) {\n        let allAdjustments = {};\n        this._bonus[name].forEach((adj) => this._applyAdjustment(allAdjustments, adj));\n        this._sustain[name] = allAdjustments.sustain || false;\n        let value = this._base[name] || 0;\n        if (allAdjustments.fixed !== undefined) {\n            value = allAdjustments.fixed;\n        }\n        else {\n            value += allAdjustments.bonus || 0;\n            if (allAdjustments.min !== undefined) {\n                value = Math.max(allAdjustments.min, value);\n            }\n            if (allAdjustments.max !== undefined) {\n                value = Math.min(allAdjustments.max, value);\n            }\n        }\n        return (this._value[name] = value);\n    }\n    adjust(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.gain(name, adj.base);\n        }\n        else if (adj.restore) {\n            delta = this.restore(name);\n            if (delta == 0)\n                delta = undefined;\n        }\n        else {\n            delta = this._addBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    clearAdjustment(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.drain(name, adj.base, true);\n        }\n        else if (adj.restore) {\n            // do nothing...\n        }\n        else {\n            delta = this._clearBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    _applyAdjustment(total, opts) {\n        if (opts.bonus) {\n            total.bonus = (total.bonus || 0) + opts.bonus;\n        }\n        if (opts.fixed !== undefined) {\n            total.fixed = Math.max(total.fixed || 0, opts.fixed);\n        }\n        if (opts.min !== undefined) {\n            total.min = Math.max(total.min || 0, opts.min);\n        }\n        if (opts.max !== undefined) {\n            total.max = Math.max(total.max || 0, opts.max);\n        }\n        if (opts.sustain !== undefined) {\n            total.sustain = opts.sustain;\n        }\n    }\n}\nexport const attributes = {};\nexport function installAttribute(attr) {\n    if (typeof attr === 'string') {\n        attributes[attr] = 0;\n        return;\n    }\n    // clear existing\n    Object.keys(attributes).forEach((k) => {\n        delete attributes[k];\n    });\n    Object.assign(attributes, attr);\n}\nexport function makeAttributes(defaults) {\n    return new Attributes(defaults);\n}\n/*\nfunction adjust(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = undefined;\n        if (a.base) {\n            delta = being.attributes.addBase(a.name, a.base);\n        } else if (a.restore) {\n            delta = being.attributes.restoreBase(a.name);\n            if (delta == 0) delta = undefined;\n        } else {\n            delta = being.attributes.addBonus(a.name, a);\n        }\n        if (delta !== undefined) {\n            out[a.name] = delta;\n        }\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n\n    return results;\n};\n\n function clearAdjustment(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = 0;\n        delta += being.attributes.clearBonus(a.name, a);\n\n        out[a.name] = delta;\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n    return results;\n};\n\nRUT.Attribute.rollAttributes = function (opts = {}) {\n    let dice = [];\n    let total = 0;\n\n    if (RUT.Calc.isValue(opts)) opts = { value: opts };\n    Object.defaults(opts, RUT.Config.Attribute.rollAttributes);\n\n    let attributes = RUT.Config.Attributes;\n\n    let min_average = Math.max(opts.min_average - 5, 0);\n    let max_average = Math.min(opts.max_average - 5, RUT.Config.ATTRIBUTE_MAX);\n\n    let min_total = min_average * attributes.length;\n    let max_total = max_average * attributes.length;\n\n    do {\n        total = 0;\n        dice = [];\n        for (let i = 0; i < 18; ++i) {\n            dice.push(RUT.RNG.rollDie(3 + (i % 3)));\n            total += dice[i];\n        }\n    } while (total <= min_total || total > max_total);\n\n    let values = attributes.reduce((out, name, i) => {\n        let index = 3 * i;\n        let value = 5 + dice[index] + dice[index + 1] + dice[index + 2];\n        if (opts.value) {\n            value = RUT.Calc.calc(opts.value);\n        } else if (opts[name]) {\n            value = RUT.Calc.calc(opts[name]);\n        }\n        out[name] = value;\n        return out;\n    }, {});\n    return values;\n};\nRUT.Config.Attribute.rollAttributes = { min_average: 11, max_average: 14 };\n*/\n/*\nexport function normalize_adjustment(args: ) {\n    if (args.length == 3) {\n        let opts = args[2];\n        if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        let name = `${args[0]}.${args[1]}`;\n        return [Object.assign({ name }, opts)];\n    }\n    if (args.length == 2) {\n        let opts = args[1];\n        if (opts === true || opts === false) {\n            opts = { has: opts };\n        } else if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        return [Object.assign({ name: args[0] }, opts)];\n    }\n\n    let opts = args[0];\n    if (opts.name) {\n        return [opts];\n    }\n    if (opts.attribute) {\n        opts.name = opts.attribute;\n        return [opts];\n    }\n    if (opts.restore) {\n        if (opts.restore == 'all') {\n            return RUT.Attributes.map((a) => {\n                return { name: a, restore: true };\n            });\n        }\n        return [{ name: opts.restore, restore: true }];\n    }\n    if (opts.skill) {\n        opts.name = opts.skill;\n        return [opts];\n    }\n    if (opts.stat) {\n        opts.name = opts.stat;\n        return [opts];\n    }\n    if (opts.save) {\n        opts.name = opts.save;\n        return [opts];\n    }\n    // if (opts.saves) {\n    //   opts.name = opts.saves;\n    //   return [opts];\n    // }\n    if (opts.ability) {\n        opts.name = opts.ability;\n        return [opts];\n    }\n\n    // now we assume that each key is for a separate skill...\n    return Object.keys(opts).reduce((out, key) => {\n        let opt = opts[key];\n        if (key == 'reset' || key == 'restore') {\n            if (typeof opt == 'string') opt = [opt];\n            opt.forEach((a) => {\n                out.push({ name: a, restore: true });\n            });\n        } else {\n            if (typeof opt == 'number' || Array.isArray(opt)) {\n                opt = { bonus: opt };\n            } else if (opt === true || opt === false) {\n                opt = { has: opt };\n            } else if (opt == 'reset' || opt == 'restore') {\n                opt = { restore: true };\n            } else if (opt == 'sustain') {\n                opt = { sustain: true };\n            }\n            out.push(Object.assign({ name: key }, opt));\n        }\n        return out;\n    }, []);\n}\n*/\n","/*\nSkills\n\nSkills generally fall into 2 categories - binary and progressive.\n\n\n// Create a skills object\nconst skills = new Skills();\n\n// set skills\nskills.set('diving', true); // = { has: true, level: 0 }\nskills.set('diving', 10); // = { has: true, level: 10 }\n\nskills.remove('diving'); // {}\n\n// adjustments\nskills.adjust('diving', { bonus: 1 });\nskills.adjust('diving', { disadvantage: true });\nskills.adjust('diving', { advantage: 3 });\nskills.adjust('diving', { fixed: 10 });\nskills.adjust('diving', { critical: 5 });\n\n\n\n\n\n*/\nclass Skill {\n    constructor(name) {\n        this.name = name;\n    }\n    get has() {\n        return this._bool('_has');\n    }\n    get level() {\n        return this._int('_level');\n    }\n    get disadvantage() {\n        return this._bool('_disadvantage');\n    }\n    get advantage() {\n        return this._bool('_advantage');\n    }\n    get fixed() {\n        return this._int('_fixed');\n    }\n    get bonus() {\n        const b = this._int('_bonus') || 0;\n        if (!this._parent)\n            return b;\n        return b + this._parent.bonus;\n    }\n    get succeed() {\n        return this._bool('_succeed');\n    }\n    get fail() {\n        return this._bool('_fail');\n    }\n    set(value) {\n        if (value === false) {\n            this._has = false;\n            this._level = 0;\n        }\n        else {\n            this._has = true;\n            this._level = value === true ? 0 : value;\n        }\n    }\n    _value(name) {\n        if (this[name] !== undefined) {\n            // @ts-ignore\n            return this[name];\n        }\n        if (this._parent) {\n            // @ts-ignore\n            return this._parent._value(name);\n        }\n        return undefined;\n    }\n    _bool(name) {\n        return !!this._value(name);\n    }\n    _int(name) {\n        return this._value(name);\n    }\n    adjust(adj) {\n        Object.entries(adj).forEach(([key, value]) => {\n            key = '_' + key;\n            if (value === undefined)\n                return;\n            if (key === '_fixed') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = Math.max(value, this._fixed || 0);\n            }\n            else if (key === '_bonus') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = value + (this._bonus || 0);\n            }\n            // @ts-ignore\n            this[key] = value;\n        });\n    }\n    clear(adj) {\n        Object.keys(adj).forEach((key) => {\n            key = '_' + key;\n            // @ts-ignore\n            if (this[key] !== undefined) {\n                // @ts-ignore\n                this[key] = undefined;\n            }\n        });\n    }\n}\nexport class Skills {\n    constructor(vals = {}) {\n        this._skills = {};\n        Object.entries(vals).forEach(([key, value]) => {\n            this.set(key, value);\n        });\n    }\n    set(name, value) {\n        const s = this.get(name);\n        s.set(value);\n        return s;\n    }\n    get(name) {\n        let s = this._skills[name];\n        if (s)\n            return s;\n        s = this._skills[name] = new Skill(name);\n        const index = name.lastIndexOf('.');\n        if (index > 0) {\n            s._parent = this.get(name.substring(0, index));\n        }\n        else {\n            s.set(false);\n        }\n        return s;\n    }\n    adjust(name, adj) {\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        let s = this.get(name);\n        s.adjust(adj);\n        return s;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Scent {\n    constructor(player) {\n        this._player = player;\n    }\n    get(x, y) {\n        if (!this._data)\n            return 0;\n        return this._data[x][y];\n    }\n    clear() {\n        if (!this._player.map)\n            return;\n        if (this._data)\n            GWU.grid.free(this._data);\n        this._data = GWU.grid.alloc(this._player.map.width, this._player.map.height);\n    }\n    update() {\n        if (!this._player.map)\n            return;\n        const scent = this._player.data.scent || 10;\n        this._data[this._player.x][this._player.y] = scent;\n        const updated = GWU.grid.alloc(this._data.width, this._data.height);\n        const map = this._player.map;\n        this._data.forEach((v, x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.blocksMove())\n                return;\n            let highest = v;\n            GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n                if (!this._data.hasXY(x1, y1))\n                    return;\n                const v1 = this._data[x1][y1];\n                if (v1 > highest) {\n                    highest = v1;\n                }\n            }, true);\n            const delta = cell.hasLiquid() ? 3 : 1;\n            updated[x][y] = Math.max(0, highest - delta);\n        });\n        GWU.grid.free(this._data);\n        this._data = updated;\n    }\n    nextDir(x, y) {\n        const v = this._data[x][y] || 0;\n        if (!v)\n            return null;\n        let highest = v;\n        let highestLoc = [];\n        GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n            if (!this._data.hasXY(x1, y1))\n                return;\n            const v1 = this._data[x1][y1];\n            if (v1 == highest) {\n                highestLoc.push([x1, y1]);\n            }\n            else if (v1 > highest) {\n                highestLoc = [[x1, y1]];\n                highest = v1;\n            }\n        }, false);\n        if (!highestLoc.length)\n            return null;\n        const loc = GWU.random.item(highestLoc);\n        loc[0] = loc[0] - x;\n        loc[1] = loc[1] - y;\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor';\nimport { Scent } from './scent';\nimport * as Flags from '../flags';\nexport class Player extends Actor {\n    constructor(kind) {\n        super(kind);\n        this.scent = new Scent(this);\n    }\n    interrupt(other) {\n        if (this.hasGoal()) {\n            this.clearGoal();\n            GWU.message.addAt(this.x, this.y, '{{you}} {{verb see~}} {{a other}}.', {\n                actor: this,\n                verb: 'see',\n                other,\n            });\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.map) {\n            if (this.map.fov.update()) {\n                this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n            }\n            this.scent.update();\n        }\n        super.endTurn(pct);\n    }\n    addToMap(map, x, y) {\n        if (!super.addToMap(map, x, y))\n            return false;\n        this.scent.clear();\n        return true;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            let loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            loc = loc || [this.x, this.y];\n            x = loc[0];\n            y = loc[1];\n        }\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    nextGoalStep() {\n        const map = this.map;\n        if (!map)\n            return null;\n        const goalMap = this.goalMap;\n        const step = GWU.path.nextStep(goalMap, this.x, this.y, (x, y) => map.hasActor(x, y) && map.actorAt(x, y) !== this);\n        return step;\n    }\n    pathTo(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (args.length === 1) {\n            x = args[0].x;\n            y = args[0].y;\n        }\n        const map = this.map;\n        if (!map)\n            return null;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            const loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            if (!loc)\n                return null;\n            x = loc[0];\n            y = loc[1];\n        }\n        const path = GWU.path.getPath(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y), true);\n        return path;\n    }\n}\nPlayer.default = {\n    ch: '@',\n    fg: 'white',\n    name: 'You',\n    swim: true,\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport * as Actor from '../actor';\nimport * as Skills from './skill';\nimport * as Attributes from './attribute';\nimport { Player } from './player';\nimport * as Flags from '../flags';\nexport class PlayerKind extends Actor.ActorKind {\n    constructor(opts = {}) {\n        super((() => {\n            if (!opts.sprite) {\n                opts.ch = opts.ch || Player.default.ch;\n                opts.fg = opts.fg || Player.default.fg;\n            }\n            if (!opts.name) {\n                opts.name = Player.default.name;\n            }\n            if (opts.swim === undefined) {\n                opts.swim = Player.default.swim;\n            }\n            return opts;\n        })());\n        this.flags.actor |= Flags.Actor.IS_PLAYER;\n        this.flags.entity |= Flags.Entity.L_ALWAYS_PLURAL;\n        this.attributes = new Attributes.Attributes(opts.attributes || {});\n        this.skills = new Skills.Skills(opts.skills || {});\n    }\n    make(options) {\n        const actor = new Player(this);\n        this.init(actor, options);\n        return actor;\n    }\n    cellCost(cell, player) {\n        const map = cell.map;\n        if (!map.fov.isRevealed(cell.x, cell.y))\n            return GWU.path.FORBIDDEN;\n        return super.cellCost(cell, player);\n    }\n}\n","import { PlayerKind } from './kind';\nimport * as Actor from '../actor';\nexport function make(id, makeOptions) {\n    let kind;\n    if (typeof id === 'string') {\n        // @ts-ignore\n        kind = Actor.get(id);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + id);\n        if (!(kind instanceof PlayerKind))\n            throw new Error('Not a player kind.');\n    }\n    else if (id instanceof PlayerKind) {\n        kind = id;\n    }\n    else {\n        kind = makeKind(id);\n    }\n    return kind.make(makeOptions);\n}\nexport function install(id, kind) {\n    if (kind instanceof PlayerKind) {\n        Actor.kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    Actor.kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof PlayerKind)\n        return id;\n    const k = Actor.kinds[id];\n    if (k && !(k instanceof PlayerKind)) {\n        throw new Error('No a player kind.');\n    }\n    return k;\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new PlayerKind(config);\n}\n","import * as GWU from 'gw-utils';\nimport { Player } from '../player/player';\nimport * as Flags from '../flags';\nexport class Viewport extends GWU.widget.Widget {\n    constructor(opts) {\n        super((() => {\n            opts.tag = opts.tag || 'viewport';\n            return opts;\n        })());\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n        this.player = null;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.attr('snap', opts.snap || false);\n        this.attr('center', opts.center || false);\n        this.attr('lockX', opts.lock || opts.lockX || false);\n        this.attr('lockY', opts.lock || opts.lockY || false);\n        this.filter = opts.filter || null;\n        this.scent = opts.scent || false;\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.attr('center', !!subject);\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n        if (subject && subject instanceof Player) {\n            this.player = subject;\n        }\n        else {\n            this.player = null;\n        }\n    }\n    set lock(v) {\n        this.attr('lockX', v);\n        this.attr('lockY', v);\n    }\n    get lockX() {\n        return this._attrBool('lockX');\n    }\n    set lockX(v) {\n        this.attr('lockX', v);\n    }\n    get lockY() {\n        return this._attrBool('lockY');\n    }\n    set lockY(v) {\n        this.attr('lockY', v);\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.attr('center', true);\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.attr('center', false);\n        this.attr('snap', false);\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this._attrBool('snap')) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this._attrBool('center')) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    _draw(buffer) {\n        if (!this._subject)\n            return;\n        const map = this._subject.map;\n        if (!map || !map.needsRedraw)\n            return;\n        const fov = map.fov;\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return;\n        }\n        this.updateOffset();\n        const drawer = map.drawer;\n        drawer.scent = this.scent;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, map, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n    }\n    update(dt) {\n        super.update(dt);\n        if (!this._subject)\n            return;\n        const map = this._subject.map;\n        if (!map)\n            return;\n        if (!map.hasMapFlag(Flags.Map.MAP_DANCES) || !GWU.cosmetic.chance(10)) {\n            return;\n        }\n        map.eachCell((c) => {\n            if (c.hasCellFlag(Flags.Cell.COLORS_DANCE) &&\n                map.fov.isAnyKindOfVisible(c.x, c.y) &&\n                GWU.cosmetic.chance(2)) {\n                c.needsRedraw = true;\n            }\n        });\n        map.needsRedraw = true;\n    }\n    _mousemove(ev) {\n        super._mousemove(ev);\n        if (!this.bounds.contains(ev.x, ev.y)) {\n            this.clearPath();\n            return;\n        }\n        if (!this.player)\n            return;\n        const map = this.player.map;\n        if (!map)\n            return;\n        this.showPath(this.toInnerX(ev.x), this.toInnerY(ev.y));\n    }\n    _click(ev) {\n        super._click(ev);\n        if (!this.player)\n            return;\n        if (this.player.hasGoal()) {\n            this.player.clearGoal();\n        }\n        else {\n            this.player.setGoal(this.toInnerX(ev.x), this.toInnerY(ev.y));\n        }\n    }\n    clearPath() {\n        if (!this.player)\n            return;\n        const map = this.player.map;\n        if (!map)\n            return;\n        map.clearPath();\n    }\n    showPath(x, y) {\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        // if (!this.player.hasGoal()) return false;\n        // console.log('mouse', ev.x, ev.y);\n        const path = this.player.pathTo(x, y);\n        if (path) {\n            map.highlightPath(path, true);\n        }\n        else {\n            map.clearPath();\n        }\n        map.highlightCell(x, y);\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nGWU.app.defaultStyle.add('msgs', { bg: 'darkest_gray', fg: 'white' });\nGWU.app.defaultStyle.add('archive', { bg: 'darkest_gray', fg: 'white' });\nexport class Messages extends GWU.widget.Widget {\n    constructor(opts) {\n        super((() => {\n            opts.tag = opts.tag || 'msgs';\n            return opts;\n        })());\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.archive || 40,\n            match: () => {\n                this.needsDraw = true;\n            },\n        });\n        this.on('click', () => {\n            this.showArchive();\n        });\n    }\n    clear() {\n        this.cache.clear();\n        this.needsDraw = true;\n    }\n    confirmAll() {\n        this.cache.confirmAll();\n        this.needsDraw = true;\n    }\n    draw(buffer) {\n        const isOnTop = this.bounds.y < 10;\n        const bg = this._used.bg;\n        const fg = this._used.fg;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', bg, bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, fg);\n            if (confirmed && bg) {\n                buffer.mix(bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    showArchive() {\n        if (this.cache.length <= this.bounds.height)\n            return;\n        if (!this.scene)\n            return;\n        const app = this.scene.app;\n        app.scenes.run('msg-archive', this);\n    }\n}\nexport const ArchiveScene = {\n    create() { },\n    start(source) {\n        new ArchiveWidget({\n            scene: this,\n            source,\n            id: 'ARCHIVE',\n        });\n    },\n    stop() {\n        this.children.forEach((c) => c.destroy());\n        this.children = [];\n    },\n    destroy() { },\n};\nGWU.app.installScene('msg-archive', ArchiveScene);\nexport class ArchiveWidget extends GWU.widget.Widget {\n    constructor(opts) {\n        super({\n            scene: opts.scene,\n            id: opts.id || 'ARCHIVE',\n            tag: opts.tag || 'archive',\n            x: 0,\n            y: 0,\n            tabStop: true,\n            // depth: 100, // I'm on top\n        });\n        this.mode = 'forward';\n        this._timeout = null;\n        this._needsDraw = true;\n        this.source = opts.source;\n        this.isOnTop = this.source.bounds.y < 10;\n        this.bounds.height = this.isOnTop\n            ? this.scene.height - this.source.bounds.y\n            : this.source.bounds.bottom;\n        this.totalCount = Math.min(this.source.cache.length, this.isOnTop\n            ? this.scene.height - this.source.bounds.top\n            : this.source.bounds.bottom);\n        this.shown = this.source.bounds.height;\n        this._timeout = this.scene.wait(16, () => this._forward());\n        // confirm them as they are right now...\n        this.source.cache.confirmAll();\n        this.on('keypress', () => this._next());\n        this.on('click', () => this._next());\n    }\n    set needsDraw(v) {\n        this._needsDraw || (this._needsDraw = v);\n        super.needsDraw = v;\n    }\n    contains() {\n        return true; // Eat all mouse activity\n    }\n    finish() {\n        this.scene.stop();\n    }\n    _next() {\n        if (!this.scene)\n            return;\n        if (this.mode === 'ack') {\n            this.mode = 'reverse';\n            this.scene.needsDraw = true;\n            if (this._timeout) {\n                this._timeout();\n            }\n            this._timeout = this.scene.wait(16, () => this._reverse());\n        }\n        else if (this.mode === 'reverse') {\n            this.finish();\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n            if (this._timeout) {\n                this._timeout();\n                this._timeout = null;\n            }\n            this.scene.needsDraw = true;\n        }\n    }\n    _forward() {\n        // console.log('forward');\n        if (!this.scene)\n            return;\n        ++this.shown;\n        this._timeout = null;\n        this.scene.needsDraw = true;\n        if (this.shown < this.totalCount) {\n            this._timeout = this.scene.wait(16, () => this._forward());\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n        }\n    }\n    _reverse() {\n        // console.log('reverse');\n        if (!this.scene)\n            return;\n        --this.shown;\n        this._timeout = null;\n        if (this.shown <= this.source.bounds.height) {\n            this.finish();\n        }\n        else {\n            this.scene.needsDraw = true;\n            this._timeout = this.scene.wait(16, () => this._reverse());\n        }\n    }\n    _draw(buffer) {\n        let fadePercent = 0;\n        // let reverse = this.mode === 'reverse';\n        if (!this._needsDraw)\n            return;\n        this._needsDraw = false;\n        // Count the number of lines in the archive.\n        // let totalMessageCount = this.totalCount;\n        const isOnTop = this.isOnTop;\n        const dbuf = buffer;\n        const fg = GWU.color.from(this._used.fg);\n        // const dM = reverse ? -1 : 1;\n        // const startM = reverse ? totalMessageCount : this.bounds.height;\n        // const endM = reverse\n        //     ? this.bounds.height + dM + 1\n        //     : totalMessageCount + dM;\n        const startY = isOnTop\n            ? this.shown - 1\n            : this.bounds.bottom - this.shown;\n        const endY = isOnTop ? 0 : this.bounds.bottom - 1;\n        const dy = isOnTop ? -1 : 1;\n        dbuf.fillRect(this.source.bounds.x, Math.min(startY, endY), this.bounds.width, this.shown, ' ', this._used.bg, this._used.bg);\n        this.source.cache.forEach((line, _confirmed, j) => {\n            const y = startY + j * dy;\n            if (isOnTop) {\n                if (y < endY)\n                    return;\n            }\n            else if (y > endY)\n                return;\n            fadePercent = Math.floor((50 * j) / this.shown);\n            const fgColor = fg.mix(this._used.bg, fadePercent);\n            dbuf.drawText(this.source.bounds.x, y, line, fgColor, this._used.bg);\n        });\n        if (this.mode === 'ack') {\n            const y = this.isOnTop ? 0 : dbuf.height - 1;\n            const x = this.source.bounds.x > 8\n                ? this.source.bounds.x - 8 // to left of box\n                : Math.min(this.source.bounds.x + this.bounds.width, // just to right of box\n                dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                );\n            dbuf.wrapText(x, y, 8, '--DONE--', this._used.bg, this._used.fg);\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as Tile from '../tile/tile';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor extends GWU.widget.Text {\n    constructor(opts) {\n        super((() => {\n            opts.tag = opts.tag || 'flavor';\n            return opts;\n        })());\n        this._needsDraw = true;\n        this.overflow = opts.overflow || false;\n    }\n    showText(text) {\n        this.text(text);\n        this.removeClass('prompt');\n        this.needsDraw = true;\n        return this;\n    }\n    clear() {\n        this.text('');\n        this.removeClass('prompt');\n        this.needsDraw = true;\n        return this;\n    }\n    showPrompt(text) {\n        this.text(text);\n        this.addClass('prompt');\n        this.needsDraw = true;\n        return this;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'You see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'You sense';\n        }\n        else if (isRemembered) {\n            intro = 'You remember seeing';\n        }\n        else if (isMapped) {\n            intro = 'You expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(Flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(Flags.Depth.GROUND) || Tile.NULL;\n        const surfaceTile = cell.depthTile(Flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(Flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(Flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('{{intro}} {{text}}.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n    _draw(buffer) {\n        if (!this._needsDraw)\n            return;\n        this._needsDraw = false;\n        super._draw(buffer);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\n// import { UISubject } from './viewport';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    get changed() {\n        return this.actor.changed;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawSidebar(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    get changed() {\n        return this.item.changed;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawSidebar(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.changed = true;\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawSidebar(buffer, bounds);\n    }\n}\nexport class Sidebar extends GWU.widget.Widget {\n    constructor(opts) {\n        super((() => {\n            opts.tag = opts.tag || 'sidebar';\n            return opts;\n        })());\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n        this._needsDraw = true;\n    }\n    set needsDraw(v) {\n        if (v)\n            this._needsDraw = v;\n        super.needsDraw = v;\n    }\n    reset() {\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n        this._needsDraw = true;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    click(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.highlight)\n            return false;\n        if (!this.subject)\n            return false;\n        this.subject.setGoal(this.highlight.x, this.highlight.y);\n        return true;\n    }\n    mousemove(e) {\n        if (this.contains(e)) {\n            this._highlightRow(e.y);\n            return true;\n        }\n        this.clearHighlight();\n        return false;\n    }\n    highlightAt(x, y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.x == x && e.y == y) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this._needsDraw || (this._needsDraw = changed);\n        return changed;\n    }\n    _highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this.needsDraw || (this.needsDraw = changed);\n        if (this.highlight && this.subject && this.subject.map) {\n            const path = this.subject.pathTo(\n            // @ts-ignore\n            this.highlight.x, \n            // @ts-ignore\n            this.highlight.y);\n            if (path) {\n                this.subject.map.highlightPath(path, true);\n            }\n            else {\n                // @ts-ignore\n                this.subject.map.showCursor(this.highlight.x, this.highlight.y);\n            }\n            // @ts-ignore\n            this.subject.map.highlightCell(this.highlight.x, this.highlight.y);\n        }\n        return changed;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        this.needsDraw || (this.needsDraw = result);\n        return result;\n    }\n    _updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return false;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        this.needsDraw = true;\n        return true;\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(Flags.Cell.STABLE_MEMORY) ? 3 : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            if (map.cell(x, y).hasEntityFlag(Flags.Entity.L_BRIGHT_MEMORY)) {\n                return 3;\n            }\n            else {\n                return 4;\n            }\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        if (!!this.highlight)\n            return true;\n        return entry.priority > 3;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0 || priority > 3)\n            return false;\n        if (actor.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        if (item.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _updateEntryCache(map, cx, cy, fov) {\n        if (map === this.lastMap &&\n            cx === this.lastX &&\n            cy === this.lastY &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED |\n                Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            let anyChanged = this.entries.some((e) => e.changed);\n            if (!anyChanged)\n                return false;\n        }\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        const highlightX = this.highlight ? this.highlight.x : -1;\n        const highlightY = this.highlight ? this.highlight.y : -1;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (!done[x][y] && this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n                a.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n            else {\n                a.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (!done[x][y] && this._addItemEntry(i, map, cx, cy, fov)) {\n                i.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n                done[x][y] = 1;\n            }\n            else {\n                i.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        if (highlightX > -1) {\n            this.highlightAt(highlightX, highlightY);\n        }\n        GWU.grid.free(done);\n        return true;\n    }\n    update() {\n        if (!this.subject) {\n            return false;\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        if (!subject.map)\n            return false;\n        return this.updateAt(subject.map, subject.x, subject.y, subject.map.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        let changed = this._updateCellCache(map);\n        if (this._updateEntryCache(map, cx, cy, fov)) {\n            changed = true;\n        }\n        return changed;\n    }\n    draw(buffer) {\n        var _a;\n        const map = (_a = this.subject) === null || _a === void 0 ? void 0 : _a.map;\n        if (!map)\n            return false;\n        if (this.update()) {\n            this.needsDraw = true;\n        }\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        const bg = this._used.bg || GWU.color.BLACK;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', bg, bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            else if (this.highlight === currentEntry) {\n                buffer.mix('white', 20, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Viewport from './viewport';\nimport * as Message from './message';\nimport * as Flavor from './flavor';\nimport * as Sidebar from './sidebar';\nexport class Game extends GWU.app.Scene {\n    constructor(id, app) {\n        super(id, app);\n        this.result = undefined;\n        this.mouse = false;\n        this.fov = false;\n        this.scent = false;\n        this.running = false;\n        this.keymap = {};\n    }\n    get viewWidth() {\n        return this.viewport.bounds.width;\n    }\n    get viewHeight() {\n        return this.viewport.bounds.height;\n    }\n    _initMenu(_opts) { }\n    _initSidebar(opts) {\n        if (typeof opts.sidebar === 'number') {\n            opts.sidebar = { width: opts.sidebar };\n        }\n        else if (opts.sidebar === true) {\n            opts.sidebar = {};\n        }\n        else if (!opts.sidebar) {\n            return;\n        }\n        const sideOpts = opts.sidebar;\n        sideOpts.width = sideOpts.width || -20; // on right side\n        const viewInit = opts.viewport;\n        if (sideOpts.width < 0) {\n            sideOpts.width *= -1;\n            sideOpts.x = viewInit.x + viewInit.width - sideOpts.width;\n            sideOpts.y = viewInit.y;\n            sideOpts.height = viewInit.height;\n            viewInit.width -= sideOpts.width;\n        }\n        else {\n            sideOpts.x = 0;\n            sideOpts.height = viewInit.height;\n            sideOpts.y = viewInit.y;\n            viewInit.x = sideOpts.width;\n            viewInit.width -= sideOpts.width;\n        }\n        sideOpts.scene = this;\n        this.sidebar = new Sidebar.Sidebar(sideOpts);\n    }\n    _initMessages(opts) {\n        if (opts.messages === false)\n            return;\n        if (opts.messages === true) {\n            opts.messages = { archive: -4 };\n        }\n        else if (typeof opts.messages === 'number') {\n            opts.messages = { archive: opts.messages };\n        }\n        const messOpts = opts.messages || { archive: -4 };\n        messOpts.archive = messOpts.archive || messOpts.y || -4;\n        if (messOpts.archive < 0) {\n            // bottom\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = viewInit.height + messOpts.archive; // length < 0\n            messOpts.width = viewInit.width;\n            messOpts.height = -messOpts.archive;\n            viewInit.height -= messOpts.height;\n        }\n        else {\n            // top\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = viewInit.y;\n            messOpts.width = viewInit.width;\n            messOpts.height = messOpts.archive;\n            viewInit.y += messOpts.archive;\n            viewInit.height -= messOpts.archive;\n        }\n        messOpts.scene = this;\n        this.messages = new Message.Messages(messOpts);\n    }\n    _initFlavor(opts) {\n        if (opts.flavor === false)\n            return;\n        if (opts.flavor === true) {\n            opts.flavor = {};\n        }\n        const flavOpts = opts.flavor || {};\n        const viewOpts = opts.viewport;\n        const y = viewOpts.y || 0;\n        if (y === 0) {\n            // messages must be on bottom (or not there)\n            flavOpts.x = viewOpts.x || 0;\n            flavOpts.y = viewOpts.height - 1;\n            flavOpts.width = viewOpts.width;\n            viewOpts.height -= 1;\n        }\n        else {\n            // messages on top\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.y;\n            flavOpts.width = viewOpts.width;\n            viewOpts.y += 1;\n            viewOpts.height -= 1;\n        }\n        flavOpts.scene = this;\n        this.flavor = new Flavor.Flavor(flavOpts);\n    }\n    _initViewport(opts) {\n        if (opts.viewport === true) {\n            opts.viewport = {};\n        }\n        const viewOpts = (opts.viewport || {});\n        viewOpts.lock = true;\n        viewOpts.x = viewOpts.x || 0;\n        viewOpts.y = viewOpts.y || 0;\n        viewOpts.width = viewOpts.width || this.app.width - viewOpts.x;\n        viewOpts.height = viewOpts.height || this.app.height - viewOpts.y;\n        this.viewport = new Viewport.Viewport(viewOpts);\n    }\n    create(opts) {\n        super.create(opts);\n        if (!opts.makeMap || !opts.makePlayer) {\n            throw new Error('Need funcitons for makeMap and makePlayer');\n        }\n        this._makeMap = opts.makeMap;\n        this._makePlayer = opts.makePlayer;\n        this._startMap = opts.startMap || GWU.NOOP;\n        if (opts.keymap) {\n            Object.assign(this.keymap, opts.keymap);\n        }\n        if (opts.mouse) {\n            this.mouse = true;\n        }\n        if (typeof opts.messages === 'number') {\n            opts.messages = { archive: opts.messages };\n        }\n        if (opts.flavor === true) {\n            opts.flavor = {};\n        }\n        else if (opts.flavor === false) {\n            delete opts.flavor;\n        }\n        if (opts.viewport === true) {\n            opts.viewport = {};\n        }\n        const viewOpts = (opts.viewport = opts.viewport || {});\n        viewOpts.x = viewOpts.x || 0;\n        viewOpts.y = viewOpts.y || 0;\n        viewOpts.width = viewOpts.width || this.app.width - viewOpts.x;\n        viewOpts.height = viewOpts.height || this.app.height - viewOpts.y;\n        this._initMenu(opts);\n        if (opts.sidebar)\n            this._initSidebar(opts);\n        if (opts.messages)\n            this._initMessages(opts);\n        if (opts.flavor)\n            this._initFlavor(opts);\n        this._initViewport(opts);\n        this.scheduler = new GWU.scheduler.Scheduler();\n    }\n    start(opts = {}) {\n        if (this.messages)\n            this.messages.clear();\n        // move to create?\n        this.player = opts.player || this._makePlayer.call(this);\n        this.viewport.subject = this.player;\n        if (this.sidebar)\n            this.sidebar.subject = this.player;\n        const id = opts.map || 0;\n        this.startNewMap({ id });\n        this.scheduler.push(this.player, 0);\n        super.start(opts);\n    }\n    startNewMap(opts = { id: 0 }) {\n        this.scheduler.clear();\n        if (opts.id === undefined) {\n            opts.id = this.map.id;\n        }\n        this.map = this._makeMap.call(this, opts);\n        this.map.setPlayer(this.player);\n        this._startMap.call(this, this.map, this.player, opts);\n        // make sure player is on map\n        if (this.player.map !== this.map) {\n            // if not, add them (where?)\n            const loc = this.map.locations.start || [0, 0]; // Is top left fallback any good?\n            if (!this.map.addActorNear(loc[0], loc[1], this.player)) {\n                throw new Error('Failed to find starting spot for player!');\n            }\n        }\n        if (this.scent) {\n            this.map.drawer.scent = this.scent;\n        }\n        this.map.actors.forEach((a) => {\n            if (!a.isPlayer()) {\n                this.scheduler.push(a, a.moveSpeed());\n            }\n        });\n        this.map.fov.update();\n        // this.draw();\n    }\n    // draw() {\n    //     this.viewport.draw(this.buffer);\n    //     if (this.messages) this.messages.draw(this.buffer);\n    //     if (this.flavor) this.flavor.draw(this.buffer);\n    //     if (this.sidebar) this.sidebar.draw(this.buffer);\n    //     if (this.buffer.changed) {\n    //         this.buffer.render();\n    //     }\n    //     this.buffer.changed = false;\n    //     this.map.actors.forEach((a) => (a.changed = false));\n    //     this.map.items.forEach((i) => (i.changed = false));\n    // }\n    // finish(result?: any) {\n    //     this.running = false;\n    //     this.layer.finish();\n    //     this.result = result;\n    // }\n    update(dt) {\n        super.update(dt);\n        if (this.tweens.length)\n            return;\n        let actor = this.scheduler.pop();\n        if (!actor) {\n            this.stop();\n            return;\n        }\n        let nextTime = 99;\n        while (nextTime > 0 && actor) {\n            nextTime = actor.act(this);\n            if (nextTime >= 0) {\n                this.scheduler.push(actor, nextTime);\n                actor = this.scheduler.pop();\n            }\n            // stop every time the player acts so we can draw the screen\n            if (actor === this.player) {\n                nextTime = 0;\n            }\n        }\n    }\n    // playerTurn(player: Player): number {\n    //     let done = 0;\n    //     const timer = setInterval(() => {\n    //         const tick = GWU.app.makeTickEvent(16);\n    //         // console.log('-tick', Date.now());\n    //         this.io.enqueue(tick);\n    //     }, 16);\n    //     let elapsed = 0;\n    //     while (!done && this.running) {\n    //         const ev = await this.io.nextEvent(-1);\n    //         if (ev) {\n    //             if (ev.type === GWU.app.KEYPRESS) {\n    //             }\n    //         }\n    //         if (elapsed < 50) {\n    //             continue;\n    //         }\n    //         elapsed -= 50;\n    //     }\n    //     clearInterval(timer);\n    //     return done;\n    // }\n    input(ev) {\n        super.input(ev);\n        if (ev.defaultPrevented || ev.propagationStopped)\n            return;\n        if (ev.type === GWU.app.MOUSEMOVE) {\n            this.mousemove(ev);\n        }\n        else if (ev.type === GWU.app.CLICK) {\n            this.click(ev);\n        }\n        else if (ev.type === GWU.app.KEYPRESS) {\n            this.keypress(ev);\n        }\n    }\n    mousemove(ev) {\n        if (this.viewport.contains(ev)) {\n            const x = this.viewport.toInnerX(ev.x);\n            const y = this.viewport.toInnerY(ev.y);\n            if (this.flavor) {\n                const text = this.flavor.getFlavorText(this.map, x, y, this.map.fov);\n                this.flavor.showText(text);\n            }\n            if (this.sidebar) {\n                this.sidebar.highlightAt(x, y);\n            }\n        }\n    }\n    click(_ev) { }\n    keypress(ev) {\n        this.map.clearPath();\n        if (this.player.hasGoal()) {\n            this.player.clearGoal();\n        }\n        else {\n            const action = this._actionFor(this.keymap, ev);\n            if (action) {\n                this.player.setAction(action);\n            }\n        }\n    }\n    _actionFor(keymap, ev) {\n        if (ev.dir && keymap.dir)\n            return keymap.dir;\n        return (keymap[ev.key] ||\n            keymap[ev.code] ||\n            keymap.keypress ||\n            keymap.default ||\n            null);\n    }\n}\nGWU.app.installScene('game', (id, app) => new Game(id, app));\n","import * as GWU from 'gw-utils';\nimport * as Tile from './tile';\nimport '../effects';\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([30, 30, 30]).rand(20, 0, 0, 0),\n    bg: GWU.color.from([2, 2, 10]).rand(0, 2, 2, 0),\n    priority: 10,\n    article: 'the',\n    flavor: 'the stone floor',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    actions: {\n        enter: 'TILE:DOOR_OPEN',\n        open: 'TILE:DOOR_OPEN_ALWAYS',\n    },\n    flavor: 'a closed door',\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    actions: {\n        tick: {\n            chance: 100 * 100,\n            tile: 'DOOR~!',\n        },\n        enter: null,\n        open: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    actions: {\n        tick: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('UP_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'upward stairs',\n    article: 'an',\n    actions: {\n        climb(action) {\n            if (!action.actor)\n                return action.didNothing();\n            if (!action.actor.isPlayer())\n                return action.didNothing();\n            action.game.startNewMap({ up: true });\n            return action.actor.endTurn();\n        },\n    },\n    flavor: 'stairs leading upwards',\n});\nTile.install('DOWN_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'downward stairs',\n    article: 'a',\n    actions: {\n        descend(action) {\n            if (!action.actor)\n                return action.didNothing();\n            if (!action.actor.isPlayer())\n                return action.didNothing();\n            action.game.startNewMap({ down: true });\n            return action.actor.endTurn();\n        },\n    },\n    flavor: 'downward leading stairs',\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'a very hard wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: GWU.color.from([25, 28, 60]).dance(20, 0, 4, 15),\n    bg: GWU.color.from([10, 15, 41]).dance(20, 5, 5, 5),\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n    flavor: 'some deep water',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([5, 8, 10]).dance(10, 0, 4, 15),\n    bg: GWU.color.from([10, 30, 30]).dance(6, 0, 10, 10),\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    flags: 'T_SHALLOW_WATER',\n    // depth: 'LIQUID', // 'SURFACE'?\n    flavor: 'some shallow water',\n});\nTile.install('BRIDGE', {\n    ch: '\\u2630',\n    fg: [80, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n    flavor: 'a bridge',\n});\n"],"names":["Fl","GWU","Entity","Actor","Item","Tile","Cell","Map","Horde","install","ACTION.Actions","Flags.Entity","ACTION.Action","Flags.Tile","make","Entity.Entity","Flags.Depth","Flags.Actor","ACTION.doAction","Flags.Map","installAll","EFFECT.make","Flags.TileMech","get","TILE.NULL","Flags.Cell","TILE.tiles","TILE.get","TILE.Tile","TILE.flags","AI.install","Entity.EntityKind","AI.make","makeKind","makeRandom","randomKind","kinds","Flags.Item","ACTION.install","Entity.make","FX.hit","Effect.installed","Effect.installHandler","EFFECT.installHandler","Flags.Effect","EFFECT.makeArray","ObjectFlags","from","Flags","Actor.get","Actor.make","Map.isHallway","Actor.ActorKind","Attributes.Attributes","Skills.Skills","Actor.kinds","Tile.NULL","Sidebar.Sidebar","Message.Messages","Flavor.Flavor","Viewport.Viewport","Tile.install"],"mappings":"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"}