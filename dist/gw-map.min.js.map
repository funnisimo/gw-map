{"version":3,"file":"gw-map.min.js","sources":["../js/flags/depth.js","../js/flags/entity.js","../js/flags/actor.js","../js/flags/item.js","../js/flags/tile.js","../js/flags/tileMech.js","../js/flags/cell.js","../js/flags/map.js","../js/flags/effect.js","../js/flags/horde.js","../js/entity/key.js","../js/entity/entity.js","../js/entity/kind.js","../js/actor/action.js","../js/actor/status.js","../js/actor/stat.js","../js/actor/actor.js","../js/effect/effect.js","../js/tile/tile.js","../js/tile/index.js","../js/effect/types/basic.js","../js/effect/types/spread.js","../js/effect/handlers/emit.js","../js/effect/handlers/message.js","../js/effect/handlers/activateMachine.js","../js/effect/handlers/tile.js","../js/effect/handlers/clear.js","../js/effect/handlers/feature.js","../js/effect/handlers/nourish.js","../js/effect/handlers/stat.js","../js/map/cell.js","../js/item/item.js","../js/entity/message.js","../js/actor/pain.js","../js/ai/ai.js","../js/ai/typical.js","../js/ai/wander.js","../js/ai/utils.js","../js/actor/kind.js","../js/actor/make.js","../js/actor/actions/bump.js","../js/actor/actions/standStill.js","../js/fx/fx.js","../js/actor/actions/moveDir.js","../js/actor/actions/idle.js","../js/actor/actions/pickup.js","../js/item/kind.js","../js/item/make.js","../js/layer/mapLayer.js","../js/layer/tileLayer.js","../js/layer/gasLayer.js","../js/layer/fireLayer.js","../js/draw/basic.js","../js/map/map.js","../js/map/analyze.js","../js/map/snapshot.js","../js/map/utils.js","../js/map/make.js","../js/horde/horde.js","../js/horde/make.js","../js/command/command.js","../js/command/moveDir.js","../js/command/pickup.js","../js/memory/index.js","../js/player/attribute.js","../js/player/skill.js","../js/player/scent.js","../js/player/player.js","../js/player/kind.js","../js/player/make.js","../js/game/viewport.js","../js/game/message.js","../js/game/flavor.js","../js/game/game.js","../js/tile/tiles.js"],"sourcesContent":["export var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Entity;\n(function (Entity) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    Entity[Entity[\"L_DESTROYED\"] = Fl(1)] = \"L_DESTROYED\";\n    Entity[Entity[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    Entity[Entity[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    Entity[Entity[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    Entity[Entity[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    Entity[Entity[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    Entity[Entity[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    Entity[Entity[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    Entity[Entity[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    Entity[Entity[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    Entity[Entity[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    Entity[Entity[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    Entity[Entity[\"L_LIST_IN_SIDEBAR\"] = Fl(13)] = \"L_LIST_IN_SIDEBAR\";\n    Entity[Entity[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    Entity[Entity[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    Entity[Entity[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    Entity[Entity[\"L_ON_MAP\"] = Fl(17)] = \"L_ON_MAP\";\n    Entity[Entity[\"L_FORMAL_NAME\"] = Fl(20)] = \"L_FORMAL_NAME\";\n    Entity[Entity[\"L_ALWAYS_PLURAL\"] = Fl(21)] = \"L_ALWAYS_PLURAL\";\n    Entity[Entity[\"DEFAULT_ACTOR\"] = Entity.L_LIST_IN_SIDEBAR] = \"DEFAULT_ACTOR\";\n    Entity[Entity[\"DEFAULT_ITEM\"] = Entity.L_LIST_IN_SIDEBAR] = \"DEFAULT_ITEM\";\n    Entity[Entity[\"L_BLOCKED_BY_STAIRS\"] = Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_SURFACE |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    Entity[Entity[\"L_BLOCKS_SCENT\"] = Entity.L_BLOCKS_MOVE | Entity.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    Entity[Entity[\"L_DIVIDES_LEVEL\"] = Entity.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    Entity[Entity[\"L_WAYPOINT_BLOCKER\"] = Entity.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    Entity[Entity[\"L_WALL_FLAGS\"] = Entity.L_BLOCKS_MOVE |\n        Entity.L_BLOCKS_VISION |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    Entity[Entity[\"L_BLOCKS_EVERYTHING\"] = Entity.L_WALL_FLAGS |\n        Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_ACTORS |\n        Entity.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(Entity || (Entity = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n    Actor[Actor[\"HAS_MEMORY\"] = Fl(1)] = \"HAS_MEMORY\";\n    Actor[Actor[\"USES_FOV\"] = Fl(2)] = \"USES_FOV\";\n    Actor[Actor[\"STABLE_COST_MAP\"] = Fl(3)] = \"STABLE_COST_MAP\";\n    Actor[Actor[\"IS_VISIBLE\"] = Fl(4)] = \"IS_VISIBLE\";\n    Actor[Actor[\"WAS_VISIBLE\"] = Fl(5)] = \"WAS_VISIBLE\";\n    Actor[Actor[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Actor || (Actor = {}));\n","export var Item;\n(function (Item) {\n    Item[Item[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Item || (Item = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_SHALLOW_WATER\"] = Fl(4)] = \"T_SHALLOW_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n    Tile[Tile[\"T_ANY_LIQUID\"] = Tile.T_IS_DEEP_LIQUID | Tile.T_SHALLOW_WATER] = \"T_ANY_LIQUID\";\n})(Tile || (Tile = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(0)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(1)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"KNOWN_TO_BE_SAFE\"] = Fl(2)] = \"KNOWN_TO_BE_SAFE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(11)] = \"IMPREGNABLE\";\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(13)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(14)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"STABLE_SNAPSHOT\"] = Fl(15)] = \"STABLE_SNAPSHOT\";\n    // These are to speed checks\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(16)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(17)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(18)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(19)] = \"HAS_ITEM\";\n    Cell[Cell[\"HAS_FX\"] = Fl(20)] = \"HAS_FX\";\n    Cell[Cell[\"HAS_TICK_EFFECT\"] = Fl(22)] = \"HAS_TICK_EFFECT\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(23)] = \"IS_CURSOR\";\n    Cell[Cell[\"IS_HIGHLIGHTED\"] = Fl(24)] = \"IS_HIGHLIGHTED\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(28)] = \"IS_POWERED\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"CHANGED\"] = Cell.NEEDS_REDRAW] = \"CHANGED\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_SAFE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_NEEDS_REDRAW\"] = Fl(1)] = \"MAP_NEEDS_REDRAW\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_SIDEBAR_TILES_CHANGED\"] = Fl(10)] = \"MAP_SIDEBAR_TILES_CHANGED\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_IGNORE_FOV\"] = Fl(12)] = \"E_IGNORE_FOV\";\n    // E_SPREAD_CIRCLE = Fl(13), // Spread in a circle around the spot (using FOV), radius calculated using spread+decrement\n    // E_SPREAD_LINE = Fl(14), // Spread in a line in one random direction\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Horde;\n(function (Horde) {\n    Horde[Horde[\"HORDE_DIES_ON_LEADER_DEATH\"] = Fl(0)] = \"HORDE_DIES_ON_LEADER_DEATH\";\n    Horde[Horde[\"HORDE_IS_SUMMONED\"] = Fl(1)] = \"HORDE_IS_SUMMONED\";\n    Horde[Horde[\"HORDE_SUMMONED_AT_DISTANCE\"] = Fl(2)] = \"HORDE_SUMMONED_AT_DISTANCE\";\n    Horde[Horde[\"HORDE_NO_PERIODIC_SPAWN\"] = Fl(4)] = \"HORDE_NO_PERIODIC_SPAWN\";\n    Horde[Horde[\"HORDE_ALLIED_WITH_PLAYER\"] = Fl(5)] = \"HORDE_ALLIED_WITH_PLAYER\";\n    Horde[Horde[\"HORDE_NEVER_OOD\"] = Fl(15)] = \"HORDE_NEVER_OOD\";\n    // Move all these to tags?\n    // HORDE_LEADER_CAPTIVE = Fl(3), // the leader is in chains and the followers are guards\n    // HORDE_MACHINE_BOSS = Fl(6), // used in machines for a boss challenge\n    // HORDE_MACHINE_WATER_MONSTER = Fl(7), // used in machines where the room floods with shallow water\n    // HORDE_MACHINE_CAPTIVE = Fl(8), // powerful captive monsters without any captors\n    // HORDE_MACHINE_STATUE = Fl(9), // the kinds of monsters that make sense in a statue\n    // HORDE_MACHINE_TURRET = Fl(10), // turrets, for hiding in walls\n    // HORDE_MACHINE_MUD = Fl(11), // bog monsters, for hiding in mud\n    // HORDE_MACHINE_KENNEL = Fl(12), // monsters that can appear in cages in kennels\n    // HORDE_VAMPIRE_FODDER = Fl(13), // monsters that are prone to capture and farming by vampires\n    // HORDE_MACHINE_LEGENDARY_ALLY = Fl(14), // legendary allies\n    // HORDE_MACHINE_THIEF = Fl(16), // monsters that can be generated in the key thief area machines\n    // HORDE_MACHINE_GOBLIN_WARREN = Fl(17), // can spawn in goblin warrens\n    // HORDE_SACRIFICE_TARGET = Fl(18), // can be the target of an assassination challenge; leader will get scary light.\n    // HORDE_MACHINE_ONLY = HORDE_MACHINE_BOSS |\n    //     HORDE_MACHINE_WATER_MONSTER |\n    //     HORDE_MACHINE_CAPTIVE |\n    //     HORDE_MACHINE_STATUE |\n    //     HORDE_MACHINE_TURRET |\n    //     HORDE_MACHINE_MUD |\n    //     HORDE_MACHINE_KENNEL |\n    //     HORDE_VAMPIRE_FODDER |\n    //     HORDE_MACHINE_LEGENDARY_ALLY |\n    //     HORDE_MACHINE_THIEF |\n    //     HORDE_MACHINE_GOBLIN_WARREN |\n    //     HORDE_SACRIFICE_TARGET,\n})(Horde || (Horde = {}));\n","// TODO - Do we need the machine?\nexport class KeyInfo {\n    constructor(x, y, disposable) {\n        this.x = x;\n        this.y = y;\n        this.disposable = disposable;\n    }\n    matches(x, y) {\n        return this.x === x && this.y === y;\n    }\n}\nexport function makeKeyInfo(x, y, disposable) {\n    return new KeyInfo(x, y, disposable);\n}\n","import * as Flags from '../flags/entity';\nlet lastId = 0;\nexport class Entity {\n    // lastSeen: GWU.xy.Loc = [-1, -1];\n    constructor(kind) {\n        this._map = null;\n        this.key = null;\n        this.machineHome = 0;\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { entity: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n        this.kind = kind;\n        this.id = '' + ++lastId;\n    }\n    get map() {\n        return this._map;\n    }\n    isPlural() {\n        return !!(this.flags.entity & Flags.Entity.L_ALWAYS_PLURAL);\n    }\n    addToMap(map, x, y) {\n        this.x = x;\n        this.y = y;\n        this.setEntityFlag(Flags.Entity.L_ON_MAP);\n        if (this._map === map) {\n            return false;\n        }\n        this._map = map;\n        this.kind.addToMap(this, map);\n        return true;\n    }\n    removeFromMap() {\n        this.clearEntityFlag(Flags.Entity.L_ON_MAP);\n        this.kind.removeFromMap(this);\n    }\n    get sprite() {\n        return this.kind.sprite;\n    }\n    get isDestroyed() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    isAt(x, y) {\n        return this.x === x && this.y === y;\n    }\n    clone() {\n        const other = new this.constructor(this.kind);\n        other.copy(this);\n        return other;\n    }\n    copy(other) {\n        this.depth = other.depth;\n        this.light = other.light;\n        Object.assign(this.flags, other.flags);\n        this.next = other.next;\n        this.x = other.x;\n        this.y = other.y;\n        this.kind = other.kind;\n        this.id = other.id;\n    }\n    canBeSeen() {\n        return this.kind.canBeSeen(this);\n    }\n    destroy() {\n        this.flags.entity |= Flags.Entity.L_DESTROYED;\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasAllEntityFlags(flags) {\n        return (this.flags.entity & flags) === flags;\n    }\n    setEntityFlag(flag) {\n        this.flags.entity |= flag;\n    }\n    clearEntityFlag(flag) {\n        this.flags.entity &= ~flag;\n    }\n    hasTag(tag) {\n        return this.kind.tags.includes(tag);\n    }\n    blocksMove() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    isKey(x, y) {\n        return this.key && this.key.matches(x, y);\n    }\n    forbidsCell(cell) {\n        return this.kind.forbidsCell(cell, this);\n    }\n    avoidsCell(cell) {\n        return this.kind.avoidsCell(cell, this);\n    }\n    getName(opts) {\n        return this.kind.getName(this, opts);\n    }\n    getDescription(opts) {\n        return this.kind.getDescription(this, opts);\n    }\n    getFlavor(opts) {\n        return this.kind.getFlavor(this, opts);\n    }\n    getVerb(verb) {\n        return this.kind.getVerb(this, verb);\n    }\n    drawStatus(buffer, bounds) {\n        return this.kind.drawStatus(this, buffer, bounds);\n    }\n    drawInto(dest, _observer) {\n        dest.drawSprite(this.sprite);\n    }\n    toString() {\n        return `${this.constructor.name}-${this.id} @ ${this.x},${this.y}`;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Entity } from './entity';\nimport * as Flags from '../flags';\nexport class EntityKind {\n    constructor(config) {\n        this.tags = [];\n        this.requireTileFlags = 0;\n        this.forbidTileFlags = 0;\n        this.avoidTileFlags = 0;\n        this.requireTileTags = [];\n        this.forbidTileTags = [];\n        this.avoidTileTags = [];\n        this.id = config.id || config.name;\n        this.name = config.name;\n        this.flavor = config.flavor || this.name;\n        this.description = config.description || this.flavor;\n        this.sprite = GWU.sprite.make(config.sprite ? config.sprite : config);\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        if (config.requireTileFlags) {\n            this.requireTileFlags = GWU.flag.from(Flags.Tile, config.requireTileFlags);\n        }\n        if (config.avoidTileFlags) {\n            this.avoidTileFlags = GWU.flag.from(Flags.Tile, config.avoidTileFlags);\n        }\n        if (config.forbidTileFlags) {\n            this.forbidTileFlags = GWU.flag.from(Flags.Tile, config.forbidTileFlags);\n        }\n        if (config.requireTileTags) {\n            if (typeof config.requireTileTags === 'string') {\n                config.requireTileTags = config.requireTileTags.split(/[,|]/g);\n            }\n            this.requireTileTags = config.requireTileTags.map((t) => t.trim());\n        }\n        if (config.avoidTileTags) {\n            if (typeof config.avoidTileTags === 'string') {\n                config.avoidTileTags = config.avoidTileTags.split(/[,|]/g);\n            }\n            this.avoidTileTags = config.avoidTileTags.map((t) => t.trim());\n        }\n        if (config.forbidTileTags) {\n            if (typeof config.forbidTileTags === 'string') {\n                config.forbidTileTags = config.forbidTileTags.split(/[,|]/g);\n            }\n            this.forbidTileTags = config.forbidTileTags.map((t) => t.trim());\n        }\n    }\n    make(opts) {\n        const entity = new Entity(this);\n        this.init(entity, opts);\n        return entity;\n    }\n    init(entity, opts = {}) {\n        if (opts.machineHome) {\n            entity.machineHome = opts.machineHome;\n        }\n    }\n    addToMap(_entity, _map) { }\n    removeFromMap(_entity) { }\n    canBeSeen(_entity) {\n        return true;\n    }\n    forbidsCell(cell, _entity) {\n        if (this.requireTileFlags &&\n            !cell.hasAllTileFlags(this.requireTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileFlags &&\n            cell.hasTileFlag(this.forbidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.requireTileTags.length &&\n            !cell.hasAllTileTags(this.requireTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileTags.length &&\n            cell.hasAnyTileTag(this.forbidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    avoidsCell(cell, entity) {\n        if (this.forbidsCell(cell, entity))\n            return true;\n        if (this.avoidTileFlags &&\n            cell.hasTileFlag(this.avoidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.avoidTileTags.length &&\n            cell.hasAnyTileTag(this.avoidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    getName(_entity, _opts) {\n        return this.name;\n    }\n    getDescription(_entity, _opts) {\n        return this.description;\n    }\n    getFlavor(_entity, _opts) {\n        return this.flavor;\n    }\n    getVerb(_entity, verb) {\n        return verb;\n    }\n    drawStatus(entity, buffer, bounds) {\n        if (!entity.map)\n            return 0;\n        if (entity.isDestroyed)\n            return 0;\n        const mixer = new GWU.sprite.Mixer();\n        entity.map.getAppearanceAt(entity.x, entity.y, mixer);\n        buffer.drawSprite(bounds.x + 1, bounds.y, mixer);\n        buffer.wrapText(bounds.x + 3, bounds.y, bounds.width - 3, entity.getName(), 'purple');\n        return 1;\n    }\n}\nexport function make(opts, makeOpts = {}) {\n    const kind = new EntityKind(opts);\n    return kind.make(makeOpts);\n}\n","export const installedActions = {};\nexport function installAction(name, fn) {\n    installedActions[name.toLowerCase()] = fn;\n}\nexport function getAction(name) {\n    return installedActions[name.toLowerCase()] || null;\n}\n","import * as GWU from 'gw-utils';\nexport class Status {\n    constructor() {\n        this._set = {};\n        this._time = {};\n        this._count = {};\n        this._done = {};\n        this._value = {};\n        this.changed = null;\n    }\n    clear(name) {\n        this.clearTime(name);\n        this.clearCount(name);\n        this.setOff(name);\n        return this._update(name);\n    }\n    get(name) {\n        return this._value[name] || false;\n    }\n    has(name) {\n        return this._value[name] || false;\n    }\n    _addDone(name, done) {\n        if (done) {\n            if (!this._done[name]) {\n                this._done[name] = done;\n            }\n        }\n    }\n    /**\n     * Sets the count for a status variable.\n     * If setting the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} count The count to set.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not setting the count turned the status on.\n     */\n    setCount(name, count, done) {\n        const status = this;\n        status._count[name] = Math.max(count, status._count[name] || 0);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Increments the count for the status by the given amount (1=default)\n     * If incrementing the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} [count=1] The count to incrmeent.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not incrementing the count turned the status on.\n     */\n    increment(name, count = 1, done) {\n        if (typeof count == 'function') {\n            done = count;\n            count = 1;\n        }\n        const status = this;\n        status._count[name] = (status._count[name] || 0) + count;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Decrements the count for the status by the given amount (1=default)\n     * If decrementing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @param {number} [count=1] The count to decrement.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    decrement(name, count = 1) {\n        const status = this;\n        status._count[name] = Math.max(0, (status._count[name] || 0) - count);\n        return this._update(name);\n    }\n    /**\n     * Clears all counts from the given status.\n     * If clearing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    clearCount(name) {\n        const status = this;\n        status._count[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Turns on the given status.\n     * @param {string} name The status to adjust.\n     * @param {function} [done] The function to call when the status is turned off.\n     * @returns {boolean} True if this turns on the status. (It could be on because of a time or count).\n     */\n    setOn(name, done) {\n        const status = this;\n        status._set[name] = true;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Turns off the given status.\n     *\n     * @param {string} name The status to adjust.\n     * @returns {boolean} True if this turns off the status. (It could be on because of a time or count).\n     */\n    setOff(name) {\n        const status = this;\n        status._set[name] = false;\n        return this._update(name);\n    }\n    /**\n     * Sets the time for a status variable.\n     * If setting the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to set.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not setting the time turned the status on.\n     */\n    setTime(name, value, done) {\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        const current = status._time[name] || 0;\n        status._time[name] = Math.max(value, current);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Adds to the time for a status variable.\n     * If adding to the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to add.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not adding the time turned the status on.\n     */\n    addTime(name, value = 1, done) {\n        if (typeof value == 'function') {\n            done = value;\n            value = 1;\n        }\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        status._time[name] = (status._time[name] || 0) + value;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Removes time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to remove.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    removeTime(name, value = 1) {\n        const status = this;\n        value = GWU.range.make(value).value();\n        status._time[name] = Math.max(0, (status._time[name] || 0) - value);\n        return this._update(name);\n    }\n    /**\n     * Removes all time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    clearTime(name) {\n        const status = this;\n        status._time[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Removes time for all status variables that have time.\n     * If removing the time turns off any status (it was on),\n     * then this function returns an object with all of those statuses as keys and false as the values.  Otherwise, false.\n     * @param {Status|object} source The object to set the status on.  If object.status is set then that is where the values are updated.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean|object} false or an object with the names of the statuses that were cleared as keys and false as the values.\n     */\n    decayAllTimes(delta = 1) {\n        const status = this;\n        const cleared = {};\n        let noticed = false;\n        for (let name in status._time) {\n            if (this.removeTime(name, delta)) {\n                noticed = true;\n                cleared[name] = false;\n            }\n        }\n        return noticed ? cleared : false;\n    }\n    /**\n     * Updates the value of the status and returns whether or not this change\n     * turned the status on or off (true = change, false = no change)\n     * @param {string} name The name of the status to update\n     * @returns {boolean} True if the value was turned on or off, False otherwise.\n     */\n    _update(name) {\n        const status = this;\n        const rec = this._value;\n        let was = rec[name];\n        let value = (rec[name] =\n            status._set[name] ||\n                status._time[name] > 0 ||\n                status._count[name] > 0 ||\n                false);\n        const doneFn = this._done[name];\n        if (!value && doneFn) {\n            doneFn(this, name);\n            status._done[name] = null;\n        }\n        if (was && !value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: false');\n            return true;\n        }\n        else if (!was && value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: true');\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Stats {\n    constructor(opts = {}) {\n        this._max = {};\n        this._rate = {};\n        this._value = {};\n        this.init(opts);\n    }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    getPct(name) {\n        const max = this.max(name);\n        return max ? Math.round((100 * this.get(name)) / max) : 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    regen(name) {\n        return this._rate[name] || null;\n    }\n    init(opts) {\n        for (let name in opts) {\n            this.set(name, opts[name]);\n        }\n    }\n    set(name, v, max) {\n        if (typeof v !== 'number') {\n            const r = GWU.range.make(v);\n            v = r.value();\n        }\n        this._value[name] = v;\n        this._max[name] = max || v;\n    }\n    gain(name, amount, allowOver = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        let v = this._value[name] + amount;\n        if (!allowOver) {\n            v = Math.min(v, this._max[name]);\n        }\n        this._value[name] = v;\n    }\n    drain(name, amount) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._value[name] = Math.max(0, this._value[name] - amount);\n    }\n    raiseMax(name, amount, raiseValue = true) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] += amount;\n        if (raiseValue) {\n            this.gain(name, amount);\n        }\n    }\n    reduceMax(name, amount, lowerValue = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] = Math.max(0, this._max[name] - amount);\n        if (lowerValue) {\n            this.drain(name, amount);\n        }\n    }\n    setRegen(name, turns, count = 1) {\n        const r = (this._rate[name] = this._rate[name] || { elapsed: 0 });\n        r.turns = turns;\n        r.count = count;\n    }\n    regenAll() {\n        for (let name in this._max) {\n            const r = this._rate[name];\n            r.elapsed += 1;\n            if (r.elapsed >= r.turns) {\n                this.gain(name, r.count);\n                r.elapsed -= r.turns;\n            }\n        }\n    }\n    restore(name, value) {\n        if (value === undefined)\n            value = this._max[name];\n        this._value[name] = value;\n    }\n    adjust(name, type, amount) {\n        amount = GWU.range.from(amount);\n        const v = amount.value();\n        const c = this.get(name);\n        if (type === 'inc') {\n            this.gain(name, amount);\n        }\n        else if (type === 'dec') {\n            this.drain(name, amount);\n        }\n        else if (type === 'set') {\n            this.set(name, amount);\n        }\n        else if (type === 'min') {\n            const v = amount.value();\n            if (this.get(name) < v) {\n                this.set(name, v);\n            }\n        }\n        else if (type === 'max') {\n            if (this.get(name) > v) {\n                this.set(name, v);\n            }\n        }\n        else {\n            throw new Error('Invalid stat adjust type: ' + type);\n        }\n        return c !== this.get(name);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity/entity';\nimport * as Flags from '../flags';\nimport { getAction } from './action';\nimport { Status } from './status';\nimport { Stats } from './stat';\nexport class Actor extends Entity.Entity {\n    constructor(kind) {\n        super(kind);\n        this.ai = {};\n        this.leader = null;\n        this.items = null; // inventory\n        this.visionDistance = 99;\n        this.data = {};\n        this._costMap = null;\n        this._goalMap = null;\n        this._mapToMe = null;\n        this.next = null; // TODO - can we get rid of this?\n        // @ts-ignore - initialized in Entity\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n        this.kind = kind;\n        this.stats = new Stats();\n        this.status = new Status();\n    }\n    copy(other) {\n        super.copy(other);\n        this.leader = other.leader;\n        this.items = other.items;\n        this.visionDistance = other.visionDistance;\n    }\n    destroy() {\n        this.setEntityFlag(Flags.Entity.L_DESTROYED);\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    setActorFlag(flag) {\n        this.flags.actor |= flag;\n    }\n    clearActorFlag(flag) {\n        this.flags.actor &= ~flag;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isDead() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        if (action === undefined || action === true) {\n            const main = getAction(name); // default is to do any action\n            return main || false;\n        }\n        else if (action === false) {\n            return false;\n        }\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n    /////////////// VISIBILITY\n    becameVisible() {\n        return (this.hasActorFlag(Flags.Actor.IS_VISIBLE) &&\n            !this.hasActorFlag(Flags.Actor.WAS_VISIBLE));\n    }\n    canSee(x, y) {\n        if (x instanceof Entity.Entity) {\n            return this.canSee(x.x, x.y) && this.kind.isAbleToSee(this, x);\n        }\n        else if (this.map) {\n            if (this.isPlayer()) {\n                return this.map.fov.isDirectlyVisible(x, y);\n            }\n            if (GWU.xy.distanceBetween(this.x, this.y, x, y) >\n                this.visionDistance) {\n                return false;\n            }\n            return GWU.xy.forLineBetween(this.x, this.y, x, y, (i, j) => {\n                if (this.map.cell(i, j).blocksVision())\n                    return false;\n            });\n        }\n        else {\n            return false; // need a map or an fov\n        }\n    }\n    canSeeOrSense(x, y) {\n        if (x instanceof Entity.Entity) {\n            return (this.canSeeOrSense(x.x, x.y) &&\n                (this.kind.isAbleToSee(this, x) ||\n                    this.kind.isAbleToSense(this, x)));\n        }\n        if (this.map && this.isPlayer()) {\n            return this.map.fov.isAnyKindOfVisible(x, y);\n        }\n        return this.canSee(x, y);\n    }\n    isAbleToSee(entity) {\n        return this.kind.isAbleToSee(this, entity);\n    }\n    isAbleToSense(entity) {\n        return this.kind.isAbleToSense(this, entity);\n    }\n    ////////////////// ACTOR\n    async act(game) {\n        let startedVisible = false;\n        if (game.player.canSee(this)) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            startedVisible = true;\n        }\n        else {\n            if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n                console.log('not visible');\n            }\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        if (this.becameVisible()) {\n            console.log('became visible');\n            game.player.interrupt(this);\n        }\n        let r = 0;\n        if (this.ai && this.ai.fn) {\n            r = await this.ai.fn(game, this);\n        }\n        if (r == 0 && this.kind.ai.fn) {\n            r = await this.kind.ai.fn(game, this);\n        }\n        if (r) {\n            // did something\n            if (startedVisible || game.player.canSee(this)) {\n            }\n            return r;\n        }\n        // idle - always\n        return this.endTurn();\n    }\n    moveSpeed() {\n        return this.kind.moveSpeed;\n    }\n    startTurn() { }\n    endTurn(pct = 100) {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        return Math.floor((pct * this.moveSpeed()) / 100);\n    }\n    ///////\n    willAttack(_other) {\n        return true;\n    }\n    canPass(_other) {\n        return false;\n    }\n    ////////////////// INVENTORY\n    avoidsItem(_item) {\n        return false;\n    }\n    canAddItem(_item) {\n        return false;\n    }\n    addItem(_item) { }\n    pickupItem(item, opts) {\n        return this.kind.pickupItem(this, item, opts);\n    }\n    dropItem(item, opts) {\n        return this.kind.dropItem(this, item, opts);\n    }\n    // PATHFINDING\n    addToMap(map, x, y) {\n        const mapChanged = super.addToMap(map, x, y);\n        if (mapChanged) {\n            this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n        }\n        return mapChanged;\n    }\n    removeFromMap() {\n        super.removeFromMap();\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    /*\n    Calculates and returns the actor's move cost map.\n    Used in pathfinding.\n    */\n    costMap() {\n        if (!this.map) {\n            throw new Error('Actor must have map to calculate costMap.');\n        }\n        const staleMap = !this.hasActorFlag(Flags.Actor.STABLE_COST_MAP);\n        if (staleMap && this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (!this._costMap) {\n            this._costMap = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        else if (!staleMap) {\n            return this._costMap;\n        }\n        const kind = this.kind;\n        const map = this.map;\n        this._costMap.update((_v, x, y) => {\n            const cell = map.cell(x, y);\n            return kind.cellCost(cell, this);\n        });\n        this.setActorFlag(Flags.Actor.STABLE_COST_MAP);\n        /*\n\n            if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n            && (!cellHasTMFlag(i, j, TM_IS_SECRET) || (discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)))\n            {\n                playerCostMap[i][j] = monsterCostMap[i][j] = cellHasTerrainFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? PDS_OBSTRUCTION : PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_SACRED)) {\n                    playerCostMap[i][j] = 1;\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_LAVA_INSTA_DEATH)) {\n        monsterCostMap[i][j] = PDS_FORBIDDEN;\n        if (player.status[STATUS_LEVITATING] || !player.status[STATUS_IMMUNE_TO_FIRE]) {\n            playerCostMap[i][j] = 1;\n        } else {\n            playerCostMap[i][j] = PDS_FORBIDDEN;\n        }\n            } else {\n                if (pmap[i][j].flags & HAS_MONSTER) {\n                    monst = monsterAtLoc(i, j);\n                    if ((monst.creatureState == MONSTER_SLEEPING\n                         || monst.turnsSpentStationary > 2\n             || (monst.info.flags & MONST_GETS_TURN_ON_ACTIVATION)\n                         || monst.creatureState == MONSTER_ALLY)\n                        && monst.creatureState != MONSTER_FLEEING)\n                    {\n                        playerCostMap[i][j] = 1;\n                        monsterCostMap[i][j] = PDS_FORBIDDEN;\n                        continue;\n                    }\n                }\n\n                if (cellHasTerrainFlag(i, j, (T_AUTO_DESCENT | T_IS_DF_TRAP))) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, T_IS_FIRE)) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_IMMUNE_TO_FIRE]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, (T_IS_DEEP_WATER | T_SPONTANEOUSLY_IGNITES))) {\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = 5;\n          }\n                    monsterCostMap[i][j] = 5;\n        } else if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n                   && cellHasTMFlag(i, j, TM_IS_SECRET) && !(discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)\n                   && !(pmap[i][j].flags & IN_FIELD_OF_VIEW))\n             {\n            // Secret door that the player can't currently see\n            playerCostMap[i][j] = 100;\n            monsterCostMap[i][j] = 1;\n                } else {\n                    playerCostMap[i][j] = monsterCostMap[i][j] = 1;\n                }\n            }\n        }\n    }\n        */\n        return this._costMap;\n    }\n    get goalMap() {\n        return this._goalMap;\n    }\n    hasGoal() {\n        return !!this._goalMap;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    clearGoal() {\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n    }\n    mapToMe() {\n        if (!this.map)\n            throw new Error('No map!');\n        if (!this._mapToMe) {\n            this._mapToMe = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        if (this._mapToMe.x !== this.x || this._mapToMe.y !== this.y) {\n            GWU.path.calculateDistances(this._mapToMe, this.x, this.y, this.costMap());\n        }\n        return this._mapToMe;\n    }\n}\n","export const handlers = {};\nexport function installHandler(id, handler) {\n    handlers[id.toLowerCase()] = handler;\n}\nexport const effectTypes = {};\nexport function installType(id, type) {\n    effectTypes[id] = type;\n}\n// export class Effect {\n//     id = '';\n//     chance = 100 * 100; // 100%\n//     type: string; // self | bolt | beam | ball | burst | adjacent | spread\n//     aim: string; // actor | item | cell\n//     bolt: string | GWU.sprite.SpriteData | null = null;\n//     beam = false;\n//     range = 0;\n//     ball: string | GWU.sprite.SpriteData | null = null;\n//     radius = 0;\n//     center = false;\n//     effects: EffectFn[];\n//     good = false;\n//     seen = false;\n//     next: Effect | null = null;\n//     constructor(config: EffectConfig) {\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         this.aim = config.aim || 'actor';\n//         if (typeof config.chance === 'string') {\n//             // '20%' becomes 2000\n//             config.chance = Math.floor(Number.parseFloat(config.chance) * 100);\n//         }\n//         this.chance = config.chance || 100 * 100;\n//         const type = config.type || 'basic';\n//         const parts = type.split(':');\n//         if (type.startsWith('bolt') || type.startsWith('beam')) {\n//             // bolt:range:sprite\n//             this.type = parts[0];\n//             this.range = parts[1] ? Number.parseInt(parts[1]) : 99;\n//             this.bolt = parts[1] || 'missile';\n//             this.beam = type.startsWith('beam');\n//         } else if (\n//             type.startsWith('ball') ||\n//             type.startsWith('burst') ||\n//             type.startsWith('aura')\n//         ) {\n//             this.type = parts[0];\n//             this.radius = parts[1] ? Number.parseInt(parts[1]) : 2;\n//             this.range = parts[2] ? Number.parseInt(parts[2]) : 99;\n//             this.ball = parts[3] || 'explosion';\n//             this.center = !type.startsWith('aura');\n//         } else {\n//             this.type = 'basic';\n//         }\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         if (Array.isArray(config.effects)) {\n//             this.effects = config.effects.map((e) => {\n//                 if (typeof e === 'function') return e;\n//                 return effectFnFromString(e);\n//             });\n//         } else {\n//             this.effects = [];\n//             Object.entries(config.effects).forEach(([key, value]) => {\n//                 const handler = handlers[key.toLowerCase()];\n//                 if (handler) {\n//                     this.effects.push(handler(value));\n//                 } else if (typeof value === 'function') {\n//                     this.effects.push(value);\n//                 } else {\n//                     throw new Error('Unknown effect: ' + key);\n//                 }\n//             });\n//         }\n//         if (this.effects.length === 0) throw new Error('No effects!');\n//     }\n//     clone(): this {\n//         const other = new (this.constructor as new (\n//             config: EffectConfig\n//         ) => this)(this as EffectConfig);\n//         return other;\n//     }\n//     fire(map: Map.MapType, x: number, y: number, ctx: EffectCtx = {}): boolean {\n//         let didSomething = false;\n//         ctx.good = this.good;\n//         ctx.seen = this.seen;\n//         if (!this.chance || map.rng.chance(this.chance, 10000)) {\n//             // fire\n//             for (let effect of this.effects) {\n//                 if (GWU.data.gameHasEnded) break;\n//                 if (effect(map, x, y, ctx)) {\n//                     didSomething = true;\n//                 } else {\n//                     break;\n//                 }\n//             }\n//         }\n//         if (ctx.aware && didSomething) {\n//             this.seen = true;\n//         }\n//         this.good = ctx.good;\n//         return didSomething;\n//     }\n//     reset() {\n//         this.seen = false;\n//     }\n// }\n// export function effectFnFromString(e: string): EffectFn {\n//     const parts = e.split(':');\n//     if (parts.length === 0) throw new Error('Invalid effect string.');\n//     // @ts-ignore\n//     const name = parts.shift().toLowerCase();\n//     const handler = handlers[name] || null;\n//     if (!handler) {\n//         throw new Error('Failed to find effect handler: ' + name);\n//     }\n//     return handler(parts);\n// }\nexport function make(opts) {\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    let config = {};\n    if (typeof opts === 'string') {\n        // Special case\n        if (opts.toLowerCase().startsWith('spread:')) {\n            const endPos = opts.indexOf(':', 8);\n            const tile = opts.substring(8, endPos);\n            config = {\n                type: 'spread:' + opts.substring(endPos),\n                effects: ['tile:' + tile],\n            };\n        }\n        else {\n            config = { type: 'basic', effects: [opts] };\n        }\n    }\n    else if (typeof opts === 'function') {\n        config = { type: 'basic', effects: [opts] };\n    }\n    else if (Array.isArray(opts)) {\n        config = { type: 'basic', effects: opts };\n    }\n    else {\n        // @ts-ignore\n        if (opts.effect) {\n            // @ts-ignore\n            opts.effects = [opts.effect];\n            delete opts.effect;\n        }\n        // object only\n        if (opts.effects) {\n            Object.assign(config, opts);\n            if (typeof config.effects === 'string') {\n                config.effects = [opts.effects];\n            }\n            else if (typeof config.effects === 'function') {\n                config.effects = [opts.effects];\n            }\n        }\n        else {\n            config.effects = {};\n            Object.entries(opts).forEach(([key, value]) => {\n                const handler = handlers[key.toLowerCase()];\n                if (handler !== undefined) {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else if (typeof value === 'function') {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else {\n                    // @ts-ignore\n                    config[key] = value;\n                }\n            });\n        }\n    }\n    config.type = config.type || 'basic';\n    if (typeof config.type !== 'string')\n        throw new Error('Invalid effect type: ' + JSON.stringify(config.type));\n    const typeParts = config.type.split(':').map((t) => t.trim());\n    const typeName = typeParts.shift();\n    const makeFn = effectTypes[typeName.toLowerCase()];\n    if (!makeFn)\n        throw new Error('Invalid effect type: ' + typeName);\n    const effect = makeFn(config);\n    if (Array.isArray(config.effects)) {\n        config.effects.forEach((e) => {\n            if (typeof e === 'function') {\n                effect.effects.push(e);\n            }\n            else {\n                const parts = e.split(':').map((t) => t.trim());\n                if (parts.length === 1) {\n                    const effect = installedEffects[parts[0]];\n                    if (!effect)\n                        throw new Error('Failed to find effect with id: ' + parts[0]);\n                    effect.effects.push(effect.trigger.bind(effect));\n                }\n                else {\n                    const handler = handlers[parts[0].toLowerCase()];\n                    if (!handler)\n                        throw new Error('Unknown effect: ' + parts[0]);\n                    parts.shift();\n                    effect.effects.push(handler(parts));\n                }\n            }\n        });\n    }\n    else {\n        Object.entries(config.effects).forEach(([key, value]) => {\n            const handler = handlers[key.toLowerCase()];\n            if (!handler)\n                throw new Error('Failed to find handler type: ' + key);\n            effect.effects.push(handler(value));\n        });\n    }\n    if (config.next) {\n        effect.next = make(config.next);\n    }\n    return effect;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'object' && 'trigger' in opts) {\n        return opts;\n    }\n    if (typeof opts === 'string') {\n        const effect = installedEffects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\nfunction isEffect(obj) {\n    return typeof obj === 'object' && 'trigger' in obj;\n}\n//////////////////////////////\n// INSTALL\nexport const installedEffects = {};\nexport function install(id, config) {\n    const effect = isEffect(config) ? config.clone() : make(config);\n    installedEffects[id] = effect;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(installedEffects).forEach((e) => (e.seen = false));\n}\n","import * as GWU from 'gw-utils';\nimport { make as makeEffect } from '../effect/effect';\nimport * as Flags from '../flags';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.tags = [];\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = GWU.sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { entity: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n        if (this.hasEffect('fire')) {\n            this.flags.tile |= Flags.Tile.T_IS_FLAMMABLE;\n        }\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                config.tags\n                    .split(/[,|]/)\n                    .map((t) => t.trim())\n                    .forEach((t) => {\n                    this.tags.push(t);\n                });\n            }\n            else {\n                this.tags = config.tags.slice().map((t) => t.trim());\n            }\n        }\n    }\n    hasTag(tag) {\n        return this.tags.includes(tag);\n    }\n    hasAnyTag(tags) {\n        return GWU.arraysIntersect(this.tags, tags);\n    }\n    hasAllTags(tags) {\n        return tags.every((t) => this.tags.includes(t));\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllEntityFlags(flag) {\n        return (this.flags.entity & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (typeof arg === 'boolean') {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = GWU.color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription(opts) {\n        return this.description || this.getName(opts);\n    }\n    getFlavor(opts) {\n        return this.flavor || this.getName(opts);\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f;\n    let base = { effects: {}, flags: {}, sprite: {}, priority: 50 };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    let priority = base.priority;\n    if (typeof options.priority === 'string') {\n        let text = options.priority.replace(/ /g, '');\n        let index = text.search(/[+-]/);\n        if (index == 0) {\n            priority = base.priority + Number.parseInt(text);\n        }\n        else if (index == -1) {\n            if (text.search(/[a-zA-Z]/) == 0) {\n                const tile = tiles[text];\n                if (!tile)\n                    throw new Error('Failed to find tile for priority - ' + text + '.');\n                priority = tile.priority;\n            }\n            else {\n                priority = Number.parseInt(text);\n            }\n        }\n        else {\n            const id = text.substring(0, index);\n            const delta = Number.parseInt(text.substring(index));\n            const tile = tiles[id];\n            if (!tile)\n                throw new Error('Failed to find tile for priority - ' + id + '.');\n            priority = tile.priority + delta;\n        }\n    }\n    else if (options.priority !== undefined) {\n        priority = options.priority;\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string' && !value.includes(':')) {\n                effects[key] = value;\n                return;\n            }\n            try {\n                effects[key] = makeEffect(value);\n            }\n            catch (e) {\n                throw new Error(`Failed to add effect to tile => ${key} : ${JSON.stringify(value)} : ` + e.message);\n            }\n        });\n    }\n    const flags = {\n        entity: GWU.flag.from(Flags.Entity, base.flags.entity, options.flags),\n        tile: GWU.flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: GWU.flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Flags.Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = GWU.light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_b = options.ch) !== null && _b !== void 0 ? _b : base.sprite.ch,\n        fg: (_c = options.fg) !== null && _c !== void 0 ? _c : base.sprite.fg,\n        bg: (_d = options.bg) !== null && _d !== void 0 ? _d : base.sprite.bg,\n        opacity: (_e = options.opacity) !== null && _e !== void 0 ? _e : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_f = options.article) !== null && _f !== void 0 ? _f : base.article,\n        tags: options.tags || null,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string')\n        return tiles[id] || null;\n    return all[id] || null;\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n// These are the minimal set of tiles to make the diggers work\nexport const NULL = install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\n","import { Tile, TileMech } from '../flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\n// import './tiles';\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nimport * as Flags from '../../flags';\nexport class BasicEffect {\n    constructor(config) {\n        this.effects = [];\n        this.chance = 100 * 100; // 100%\n        this.seen = false;\n        this.flags = 0;\n        this.next = null;\n        if (typeof config === 'object' && !Array.isArray(config)) {\n            this.flags = GWU.flag.from(Flags.Effect, config.flags);\n            if (typeof config.chance === 'string' &&\n                config.chance.endsWith('%')) {\n                this.chance = Number.parseFloat(config.chance) * 100;\n            }\n            else {\n                this.chance = Number.parseInt(config.chance || '10000');\n            }\n        }\n    }\n    clone() {\n        const other = new this.constructor();\n        other.effects = this.effects.slice();\n        other.chance = this.chance;\n        other.seen = false;\n        other.flags = this.flags;\n        other.next = this.next;\n        return other;\n    }\n    trigger(loc, ctx = {}) {\n        if (!ctx.force && this.chance) {\n            const rng = ctx.rng || loc.map.rng || GWU.random;\n            if (!rng.chance(this.chance, 10000))\n                return false;\n        }\n        let didSomething = false;\n        for (let eff of this.effects) {\n            if (eff(loc, ctx)) {\n                didSomething = true;\n            }\n        }\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                return this.next.trigger(loc, ctx);\n            }\n        }\n        return didSomething;\n    }\n}\nexport function makeBasicEffect(config) {\n    if (typeof config !== 'object') {\n        return new BasicEffect();\n    }\n    return new BasicEffect(config);\n}\nEffect.installType('basic', makeBasicEffect);\n","import * as GWU from 'gw-utils';\nimport { BasicEffect } from './basic';\nimport { installType } from '../effect';\nimport * as Flags from '../../flags';\nexport function makeSpreadEffect(config) {\n    return new SpreadEffect(config);\n}\ninstallType('spread', makeSpreadEffect);\nexport class SpreadEffect extends BasicEffect {\n    constructor(config) {\n        super(config);\n        this.grow = 0;\n        this.decrement = 0;\n        this.matchTile = '';\n        if (!config) {\n            config = { grow: 0, decrement: 0, flags: 0 };\n        }\n        if (typeof config === 'string') {\n            config = config.split(':').map((t) => t.trim());\n        }\n        if (Array.isArray(config)) {\n            if (config[0].toLowerCase() === 'spread') {\n                config.shift();\n            }\n            config = {\n                grow: config[0] || '0',\n                decrement: config[1] || '100',\n                flags: config[2] || '0',\n            };\n        }\n        else if (typeof config.type === 'string' &&\n            config.type.includes(':')) {\n            const parts = config.type.split(':').map((t) => t.trim());\n            if (parts[0].toLowerCase() === 'spread') {\n                parts.shift();\n            }\n            config.grow = parts[0] || '0';\n            config.decrement = parts[1] || '100';\n            config.flags = config.flags + '|' + parts[2];\n        }\n        this.grow = Number.parseInt(config.grow || 0);\n        this.decrement = Number.parseInt(config.decrement || 100);\n        this.flags = GWU.flag.from(Flags.Effect, config.flags || 0);\n        this.matchTile = config.matchTile || '';\n    }\n    clone() {\n        const other = super.clone();\n        other.grow = this.grow;\n        other.decrement = this.decrement;\n        other.matchTile = this.matchTile;\n        return other;\n    }\n    trigger(xy, ctx = {}) {\n        const abortIfBlocking = !!(this.flags & Flags.Effect.E_ABORT_IF_BLOCKS_MAP);\n        let didSomething = false;\n        const map = xy.map;\n        const spawnMap = GWU.grid.alloc(map.width, map.height);\n        didSomething = computeSpawnMap(this, xy, spawnMap);\n        if (!didSomething) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (abortIfBlocking && mapDisruptedBy(map, spawnMap)) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, spawnMap, this.flags)) {\n                didSomething = true;\n            }\n        }\n        spawnMap.forEach((v, x, y) => {\n            if (!v)\n                return;\n            spawnMap[x][y] = 1; // convert from generations to off/on/success\n            for (let eff of this.effects) {\n                if (eff({ map, x, y }, ctx)) {\n                    didSomething = true;\n                    spawnMap[x][y] = 2;\n                }\n            }\n        });\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                if (this.flags & Flags.Effect.E_NEXT_EVERYWHERE) {\n                    spawnMap.forEach((v, x, y) => {\n                        if (!v)\n                            return;\n                        if (v == 2 || nextAlways) {\n                            this.next.trigger({ map, x, y }, ctx);\n                        }\n                    });\n                }\n                else {\n                    this.next.trigger({ map, x: xy.x, y: xy.y }, ctx);\n                }\n            }\n        }\n        GWU.grid.free(spawnMap);\n        return didSomething;\n    }\n}\nexport function mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(map.width, map.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(map.width, map.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (map.cell(i, j).isStairs()) {\n                disrupts = true;\n            }\n        }\n        else if (!map.cell(i, j).blocksMove()) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGWU.grid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Flags.Effect.E_BUILD_IN_WALLS) {\n        if (!map.cell(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cell(x, y).isWall())\n            return false; // or on wall\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.matchTile && !isStart && !cell.hasTile(effect.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, loc, spawnMap) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const map = loc.map;\n    let startProb = effect.grow || 0;\n    let probDec = effect.decrement || 0;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, loc.x, loc.y, true)) {\n        return false;\n    }\n    spawnMap[loc.x][loc.y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + GWU.xy.DIRS[dir][0];\n                            y2 = j + GWU.xy.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                map.rng.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Flags.Effect.E_CLEAR_CELL) === Flags.Effect.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Flags.Effect.E_CLEAR_GAS) {\n                cell.clearDepth(Flags.Depth.GAS);\n            }\n            if (flags & Flags.Effect.E_CLEAR_LIQUID) {\n                cell.clearDepth(Flags.Depth.LIQUID);\n            }\n            if (flags & Flags.Effect.E_CLEAR_SURFACE) {\n                cell.clearDepth(Flags.Depth.SURFACE);\n            }\n            if (flags & Flags.Effect.E_CLEAR_GROUND) {\n                cell.clearDepth(Flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let didSomething = false;\n    map.eachActor((a) => {\n        if (!blockingMap[a.x][a.y])\n            return;\n        const loc = map.rng.matchingLocNear(a.x, a.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const c = map.cell(x, y);\n            return !a.forbidsCell(c);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeActor(a);\n            map.addActor(loc[0], loc[1], a);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    map.eachItem((i) => {\n        if (!blockingMap[i.x][i.y])\n            return;\n        const loc = map.rng.matchingLocNear(i.x, i.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const dest = map.cell(x, y);\n            return !i.forbidsCell(dest);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeItem(i);\n            map.addItem(loc[0], loc[1], i);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// EMIT\nexport function makeEmitHandler(config) {\n    if (Array.isArray(config))\n        config = config[0];\n    if (typeof config !== 'string')\n        throw new Error('Invalid EMIT handler config - ' + config);\n    return emitEffect.bind(undefined, config);\n}\nexport function emitEffect(id, loc, ctx) {\n    return loc.map.events.emit(id, loc, ctx);\n}\ninstallHandler('emit', makeEmitHandler);\n","import * as GWU from 'gw-utils';\nimport { installHandler } from '../effect';\n//////////////////////////////////////////////\n// MESSAGE\nexport function makeMessageHandler(src) {\n    if (Array.isArray(src))\n        src = src[0];\n    if (typeof src !== 'string') {\n        throw new Error('Need message for message effect.');\n    }\n    const info = {\n        msg: src,\n    };\n    return messageEffect.bind(undefined, info);\n}\nexport function messageEffect(info, loc, ctx) {\n    const seen = ctx.seen;\n    const msg = info.msg;\n    if (msg &&\n        msg.length &&\n        ctx.aware &&\n        !seen\n    // && map.isVisible(x, y)\n    ) {\n        GWU.message.addAt(loc.x, loc.y, msg, ctx);\n        return true;\n    }\n    return false;\n}\ninstallHandler('msg', makeMessageHandler);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// ActivateMachine\nexport function makeActivateMachine() {\n    return activateMachine.bind(undefined);\n}\nexport function activateMachine(loc, ctx) {\n    const cell = loc.map.cell(loc.x, loc.y);\n    const machine = cell.machineId;\n    if (!machine)\n        return false;\n    return loc.map.activateMachine(machine, loc.x, loc.y, ctx);\n}\ninstallHandler('activateMachine', makeActivateMachine);\n","import { installHandler } from '../effect';\nexport function makeTileHandler(src) {\n    if (!src)\n        throw new Error('Tile effect needs configuration.');\n    if (typeof src === 'string') {\n        src = { id: src };\n    }\n    else if (Array.isArray(src)) {\n        src = { id: src[0] };\n    }\n    else if (!src.id) {\n        throw new Error('Tile effect needs configuration with id.');\n    }\n    const opts = src;\n    if (opts.id.includes('!')) {\n        opts.superpriority = true;\n    }\n    if (opts.id.includes('~')) {\n        opts.blockedByActors = true;\n        opts.blockedByItems = true;\n    }\n    opts.id = opts.id.replace(/[!~]*/g, '');\n    return tileEffect.bind(opts);\n}\nexport function tileEffect(loc, ctx) {\n    this.machine = ctx.machine || 0;\n    const didSomething = loc.map.setTile(loc.x, loc.y, this.id, this);\n    return didSomething;\n}\ninstallHandler('tile', makeTileHandler);\n","import * as Flags from '../../flags';\nimport { installHandler } from '../effect';\nexport function makeClearHandler(config) {\n    let layers = 0;\n    if (!config) {\n        layers = Flags.Depth.ALL_LAYERS;\n    }\n    else if (typeof config === 'number') {\n        layers = config;\n    }\n    else if (typeof config === 'string') {\n        const parts = config.split(/[,|]/g);\n        layers = parts.reduce((out, v) => {\n            if (typeof v === 'number')\n                return out | v;\n            const depth = Flags.Depth[v] || 0;\n            return out | depth;\n        }, 0);\n    }\n    else {\n        throw new Error('Invalid config for clear effect: ' + JSON.stringify(config));\n    }\n    return clearEffect.bind(undefined, layers);\n}\nexport function clearEffect(layers, loc, _ctx) {\n    if (!layers)\n        return false;\n    const cell = loc.map.cell(loc.x, loc.y);\n    return cell.clearDepth(layers);\n}\ninstallHandler('clear', makeClearHandler);\n","import * as Effect from '../effect';\nexport function makeFeatureHandler(id) {\n    if (Array.isArray(id))\n        id = id[0];\n    if (id && typeof id !== 'string') {\n        id = id.id;\n    }\n    if (!id || !id.length)\n        throw new Error('Feature effect needs ID');\n    return featureEffect.bind(undefined, id);\n}\nexport function featureEffect(id, loc, ctx) {\n    const feat = Effect.installedEffects[id];\n    if (!feat) {\n        throw new Error('Failed to find feature: ' + id);\n    }\n    return feat.trigger(loc, ctx);\n}\nEffect.installHandler('feature', makeFeatureHandler);\nEffect.installHandler('effect', makeFeatureHandler);\nEffect.installHandler('id', makeFeatureHandler);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeNourishEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Nourish config.');\n    let info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.type = opts[0] || 'inc';\n        info.amount = GWU.range.make(opts[1] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(opts.amount || 1);\n    }\n    else {\n        throw new Error('Invalid Nourish config: ' + JSON.stringify(opts));\n    }\n    return nourishEffect.bind(undefined, info);\n}\nexport function nourishEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    const stats = actor.stats;\n    const c = stats.get('food');\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    const n = stats.get('food');\n    if (n < c && n / stats.max('food') < 0.1) {\n        GWU.message.addAt(actor.x, actor.y, nourishEffect.default.pukeMsg, {\n            actor,\n        });\n    }\n    return true;\n}\nnourishEffect.default = {\n    pukeMsg: '%you vomit.',\n};\nEffect.installHandler('nourish', makeNourishEffect);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeStatEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Stat config.');\n    const info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.stat = opts[0];\n        info.type = opts[1] || 'inc';\n        info.amount = GWU.range.make(opts[2] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.stat = opts.stat;\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(info.amount || 1);\n    }\n    else {\n        throw new Error('Invalid stat effect configuration: ' + JSON.stringify(opts));\n    }\n    return statEffect.bind(undefined, info);\n}\nexport function statEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    // sustain?\n    const stats = actor.stats;\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    return true;\n}\nEffect.installHandler('stat', makeStatEffect);\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nGWU.color.install('cellStatusName', 'light_blue');\nexport const NEVER_SEEN = {\n    tiles: [TILE.NULL],\n    item: null,\n    actor: null,\n    flags: {\n        cell: 0,\n        entity: TILE.NULL.flags.entity,\n        tile: TILE.NULL.flags.tile,\n        tileMech: TILE.NULL.flags.tileMech,\n    },\n};\nexport class Cell {\n    constructor(map, x, y, groundTile) {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.x = -1;\n        this.y = -1;\n        // toFire: Partial<Effect.EffectCtx>[] = [];\n        this.memory = null;\n        // this._entities = new CellEntities(this);\n        this.flags = { cell: Flags.Cell.NEEDS_REDRAW };\n        this.tiles = [TILE.tiles.NULL];\n        this.map = map;\n        this.x = x;\n        this.y = y;\n        this.snapshot = GWU.sprite.makeMixer();\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n        this.memory = NEVER_SEEN;\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    get hasStableSnapshot() {\n        return this.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    }\n    get hasStableMemory() {\n        return this.hasCellFlag(Flags.Cell.STABLE_MEMORY);\n    }\n    storeMemory() {\n        var _a;\n        this.setCellFlag(Flags.Cell.STABLE_MEMORY);\n        // store memory\n        this.memory = {\n            flags: {\n                cell: this.flags.cell,\n                entity: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.entity) || 0), 0),\n                tile: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tile) || 0), 0),\n                tileMech: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tileMech) || 0), 0),\n            },\n            tiles: this.tiles.slice(),\n            item: ((_a = this.item) === null || _a === void 0 ? void 0 : _a.clone()) || null,\n            actor: null,\n        };\n        if (this.hasItem()) {\n            const item = this.item;\n            if (item) {\n                this.memory.flags.entity |= item.flags.entity;\n            }\n        }\n        if (this.hasActor()) {\n            const actor = this.actor;\n            if (actor) {\n                this.memory.flags.entity |= actor.flags.entity;\n            }\n            this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n    }\n    clearMemory() {\n        this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT | Flags.Cell.STABLE_MEMORY);\n        this.memory = null;\n        this.needsRedraw = true;\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles.length = other.tiles.length;\n        for (let i = 0; i < this.tiles.length; ++i) {\n            this.tiles[i] = other.tiles[i];\n        }\n        this.machineId = other.machineId;\n        // this._actor = other.actor;\n        // this._item = other.item;\n        this.memory = other.memory;\n        this.map = other.map;\n        this.x = other.x;\n        this.y = other.y;\n        other.getSnapshot(this.snapshot);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasEntityFlag(flag, checkEntities = false) {\n        var _a, _b;\n        if (this.tiles.some((t) => t && t.flags.entity & flag))\n            return true;\n        if (!checkEntities)\n            return false;\n        if (this.hasItem()) {\n            if ((_a = this.item) === null || _a === void 0 ? void 0 : _a.hasEntityFlag(flag))\n                return true;\n        }\n        if (this.hasActor()) {\n            if ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.hasEntityFlag(flag))\n                return true;\n        }\n        return false;\n    }\n    hasAllEntityFlags(flags, checkEntities = false) {\n        return (this.entityFlags(checkEntities) & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    hasTileTag(tag) {\n        return this.tiles.some((tile) => tile && tile.hasTag(tag));\n    }\n    hasAllTileTags(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAllTags(tags);\n        });\n    }\n    hasAnyTileTag(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAnyTag(tags);\n        });\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    entityFlags(withEntities = false) {\n        var _a, _b;\n        let flag = this.tiles.reduce((out, t) => out | (t ? t.flags.entity : 0), 0);\n        if (withEntities) {\n            if (this.hasItem()) {\n                flag |= ((_a = this.item) === null || _a === void 0 ? void 0 : _a.flags.entity) || 0;\n            }\n            if (this.hasActor()) {\n                flag |= ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.flags.entity) || 0;\n            }\n        }\n        return flag;\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.Cell.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            if (!this.memory) {\n                this.flags.cell |= Flags.Cell.NEEDS_REDRAW;\n                this.flags.cell &= ~Flags.Cell.STABLE_SNAPSHOT;\n                this.map.needsRedraw = true;\n            }\n        }\n        else {\n            this.flags.cell &= ~Flags.Cell.NEEDS_REDRAW;\n        }\n    }\n    get changed() {\n        return !!(this.flags.cell & Flags.Cell.CHANGED);\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.entity & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return this.tiles.some((t) => t && t.blocksVision());\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) &&\n            !this.tiles.some((t) => t && t.hasTileFlag(Flags.Tile.T_BRIDGE)));\n    }\n    blocksMove() {\n        return this.tiles.some((t) => t && t.blocksMove());\n    }\n    blocksEffects() {\n        return this.tiles.some((t) => t && t.blocksEffects());\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isNull() {\n        return this.tiles.every((t) => !t || t === TILE.tiles.NULL);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllEntityFlags(Flags.Entity.L_WALL_FLAGS);\n    }\n    isDoor() {\n        return this.hasTileFlag(Flags.Tile.T_IS_DOOR);\n    }\n    isStairs() {\n        return this.hasTileFlag(Flags.Tile.T_HAS_STAIRS);\n    }\n    isFloor() {\n        // Floor tiles do not block anything...\n        return (!this.hasEntityFlag(Flags.Entity.L_BLOCKS_EVERYTHING) &&\n            !this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    isGateSite() {\n        return this.hasCellFlag(Flags.Cell.IS_GATE_SITE);\n    }\n    isSecretlyPassable() {\n        return this.hasEntityFlag(Flags.Entity.L_SECRETLY_PASSABLE);\n    }\n    // hasKey(): boolean {\n    //     return this._entities.some(\n    //         (e) => !!e.key && e.key.matches(this.x, this.y)\n    //     );\n    // }\n    hasLiquid() {\n        return this.hasTileFlag(Flags.Tile.T_ANY_LIQUID);\n    }\n    // @returns - whether or not the change results in a change to the cell tiles.\n    //          - If there is a change to cell lighting, the cell will have the\n    //          - LIGHT_CHANGED flag set.\n    setTile(tile, opts = {}) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        if (current === tile)\n            return false;\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (this.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && this.hasItem())\n            return false;\n        if (opts.blockedByActors && this.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && this.highestPriority() > tile.priority)\n            return false;\n        // TODO - Are we blocked by other layer (L_BLOCKS_SURFACE on an already present tile)?\n        if (tile.depth > Flags.Depth.GROUND && tile.groundTile) {\n            const currentGround = this.depthTile(Flags.Depth.GROUND);\n            const wantGround = TILE.get(tile.groundTile);\n            if (currentGround !== wantGround) {\n                if (!this.setTile(wantGround, opts)) {\n                    return false;\n                }\n            }\n        }\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        if (tile.hasEntityFlag(Flags.Entity.L_BLOCKS_SURFACE)) {\n            this.clearDepth(Flags.Depth.SURFACE);\n        }\n        if (opts.machine) {\n            this.machineId = opts.machine;\n        }\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (current.hasEntityFlag(Flags.Entity.L_LIST_IN_SIDEBAR) !==\n            tile.hasEntityFlag(Flags.Entity.L_LIST_IN_SIDEBAR)) {\n            this.map.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            this.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clearTiles(tile) {\n        this.tiles[0] = TILE.tiles.NULL;\n        for (let i = 1; i < this.tiles.length; ++i) {\n            this.tiles[i] = null;\n        }\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.needsRedraw = true;\n    }\n    clear(tile) {\n        this.tiles = [TILE.tiles.NULL];\n        this.flags.cell = 0;\n        this.needsRedraw = true;\n        this.chokeCount = 0;\n        this.machineId = 0;\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.snapshot.blackOut();\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    tileWithEffect(name) {\n        return this.tiles.find((t) => t === null || t === void 0 ? void 0 : t.hasEffect(name)) || null;\n    }\n    fireEvent(event, ctx = {}) {\n        // ctx.cell = this;\n        let didSomething = false;\n        // console.log('fire event - %s', event);\n        for (const tile of this.tiles) {\n            if (!tile || !tile.effects)\n                continue;\n            const ev = tile.effects[event];\n            if (ev) {\n                const r = this._activate(ev, ctx);\n                if (r) {\n                    didSomething = true;\n                }\n            }\n        }\n        return didSomething;\n    }\n    _activate(effect, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.installedEffects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = effect.trigger(this, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.Cell.HAS_ITEM);\n    }\n    get item() {\n        return this.map.itemAt(this.x, this.y);\n    }\n    canAddItem(_item) {\n        return true;\n    }\n    canRemoveItem(_item) {\n        return true;\n    }\n    _addItem(_item) {\n        this.setCellFlag(Flags.Cell.HAS_ITEM);\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeItem(item) {\n        let hasItems = false;\n        let foundIndex = -1;\n        this.map.items.forEach((obj, index) => {\n            if (obj === item) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasItems = true;\n            }\n        });\n        if (!hasItems) {\n            this.clearCellFlag(Flags.Cell.HAS_ITEM);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.Cell.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.Cell.HAS_PLAYER);\n    }\n    get actor() {\n        return this.map.actorAt(this.x, this.y);\n    }\n    canAddActor(_actor) {\n        return true;\n    }\n    canRemoveActor(_actor) {\n        return true;\n    }\n    _addActor(actor) {\n        this.setCellFlag(Flags.Cell.HAS_ACTOR);\n        if (actor.isPlayer()) {\n            this.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeActor(actor) {\n        let hasActor = false;\n        let foundIndex = -1;\n        this.map.actors.forEach((obj, index) => {\n            if (obj === actor) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasActor = true;\n            }\n        });\n        if (!hasActor) {\n            this.clearCellFlag(Flags.Cell.HAS_ACTOR | Flags.Cell.HAS_PLAYER);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    hasFx() {\n        return !!(this.flags.cell & Flags.Cell.HAS_FX);\n    }\n    get fx() {\n        return this.map.fxAt(this.x, this.y);\n    }\n    _addFx(_fx) {\n        this.setCellFlag(Flags.Cell.HAS_FX);\n        this.needsRedraw = true;\n    }\n    _removeFx(_fx) {\n        if (!this.fx) {\n            this.clearCellFlag(Flags.Cell.HAS_FX);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        if (this.hasActor()) {\n            const actor = this.map.actorAt(this.x, this.y);\n            if (actor && actor.sprite.ch)\n                return actor.sprite.ch;\n        }\n        if (this.hasItem()) {\n            const item = this.map.itemAt(this.x, this.y);\n            if (item && item.sprite.ch)\n                return item.sprite.ch;\n        }\n        if (this.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return '=';\n        }\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n    drawStatus(buffer, bounds) {\n        const lines = buffer.wrapText(bounds.x + 1, bounds.y, bounds.width - 1, this.getName(), 'cellStatusName');\n        return lines;\n    }\n    toString() {\n        return `Cell @ ${this.x},${this.y}`;\n    }\n}\n","import { Entity } from '../entity/entity';\nimport { Depth } from '../flags';\nexport class Item extends Entity {\n    constructor(kind) {\n        super(kind);\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore - initialized in constructor\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n        this.kind = kind;\n    }\n    isPlural() {\n        if (this.quantity > 1)\n            return true;\n        return super.isPlural();\n    }\n    copy(other) {\n        super.copy(other);\n        this.quantity = other.quantity;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor/actor';\nimport { Cell } from '../map/cell';\nimport { Item } from '../item/item';\nimport * as Flags from '../flags';\nexport function messageYou(name, view, args) {\n    const field = args[0] || 'actor';\n    const actor = this.get(view, field);\n    if (actor && actor instanceof Actor) {\n        if (actor.isPlayer()) {\n            return 'you';\n        }\n        else {\n            return 'the ' + actor.getName();\n        }\n    }\n    return actor || name;\n}\nGWU.text.addHelper('you', messageYou);\nexport function messageThe(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else {\n                return 'the ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'the ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('the', messageThe);\nexport function messageA(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else if (value.hasEntityFlag(Flags.Entity.L_FORMAL_NAME)) {\n                return value.getName();\n            }\n            else {\n                return 'a ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'a ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('a', messageA);\nGWU.text.addHelper('an', messageA);\nexport function messageVerb(_name, view, args) {\n    const verb = args[0] || 'verb';\n    const value = args[1]\n        ? this.get(view, args[1])\n        : view.actor || view.target || view.item || view.cell;\n    let plural = false;\n    if (value) {\n        if (value instanceof Cell) {\n            plural = false;\n        }\n        else if (value instanceof Actor) {\n            plural = value.isPlural();\n        }\n        else if (value instanceof Item) {\n            plural = value.isPlural();\n        }\n    }\n    return plural ? GWU.text.toPluralVerb(verb) : GWU.text.toSingularVerb(verb);\n}\nGWU.text.addHelper('verb', messageVerb);\n","import * as GWU from 'gw-utils';\nexport class PainMessages {\n    constructor(msgs = []) {\n        this._msgs = [];\n        msgs.forEach((m) => this.add(m));\n    }\n    add(msg) {\n        this._msgs.push(msg);\n        return this;\n    }\n    get(pct, singular = true) {\n        const index = GWU.clamp(Math.floor(pct * this._msgs.length), 0, this._msgs.length - 1);\n        const msg = this._msgs[index];\n        return this._format(msg, singular);\n    }\n    _format(msg, singular = true) {\n        return msg.replace(/\\[(\\w+)\\|?(\\w*)\\]/g, singular ? '$1' : '$2');\n    }\n}\nexport const painMessages = {};\nexport function installPain(id, pain) {\n    if (Array.isArray(pain)) {\n        pain = new PainMessages(pain);\n    }\n    painMessages[id] = pain;\n}\nexport function getPain(id) {\n    const m = painMessages[id];\n    if (!m)\n        throw new Error('No such pain message index: ' + id);\n    return m;\n}\n","export const ais = {};\nexport function install(name, fn) {\n    ais[name] = fn;\n}\nexport function make(opts) {\n    if (typeof opts === 'string') {\n        opts = { fn: opts };\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    if (typeof opts.fn === 'string') {\n        opts.fn = ais[opts.fn];\n    }\n    if (!opts.fn) {\n        opts.fn = ais.default;\n    }\n    return opts;\n}\n","import * as GWU from 'gw-utils';\nimport { getAction } from '../actor/action';\nimport * as AI from './ai';\nimport { wander } from './wander';\nexport class AICtx {\n    constructor(game, actor, target) {\n        this.item = null;\n        this.count = 0;\n        this.game = game;\n        this.actor = actor;\n        this.target = target || null;\n        this.distanceMap = GWU.grid.alloc(game.map.width, game.map.height);\n        if (target) {\n            const costMap = actor.costMap();\n            GWU.path.calculateDistances(this.distanceMap, target.x, target.y, costMap);\n        }\n    }\n    start() {\n        ++this.count;\n        return this;\n    }\n    done(result) {\n        --this.count;\n        if (this.count == 0) {\n            GWU.grid.free(this.distanceMap);\n        }\n        return result;\n    }\n}\n/*\nhttp://roguebasin.com/index.php/Roguelike_Intelligence_-_Stateless_AIs\n-- Typical AI\n*/\nexport async function typical(game, actor) {\n    if (actor.isDead())\n        return -1;\n    const map = actor.map;\n    if (!map)\n        return -1; // actor not on map ?!?!\n    const target = game.player;\n    const tryAttack = actor.canSee(target) && actor.willAttack(target);\n    if (tryAttack) {\n        const damagePct = 100 - actor.stats.getPct('health');\n        const morale = actor.stats.get('morale');\n        const chargeChance = 100;\n        const retreatChance = 0;\n        actor.ai.lastSawPlayer = [target.x, target.y];\n        actor.clearGoal();\n        console.log('SAW YOU!', actor.id, target.x, target.y);\n        const ctx = new AICtx(game, actor, target).start();\n        let result = 0;\n        if (damagePct > morale) {\n            if (canRunAwayFrom(game, actor, target, ctx)) {\n                result = await runAwayFrom(game, actor, target, ctx);\n            }\n            else if (canAttack(game, actor, target, ctx)) {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            if (GWU.random.chance(chargeChance)) {\n                result = await moveToward(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            if (GWU.random.chance(retreatChance)) {\n                result = await moveAwayFrom(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (canAttack(game, actor, target, ctx)) {\n            result = await attack(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            result = await moveToward(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            result = await moveAwayFrom(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n    }\n    // TODO - Use scent, menory, other teammates info, ...\n    else if (actor.ai.lastSawPlayer) {\n        if (!actor.hasGoal()) {\n            const loc = actor.ai.lastSawPlayer;\n            actor.setGoal(loc[0], loc[1]);\n        }\n        console.log('CHASING YOU!', actor.id, actor.goalMap.x, actor.goalMap.y);\n        const result = await moveTowardGoal(game, actor);\n        if (result) {\n            return result;\n        }\n        actor.ai.lastSawPlayer = null; // no longer\n        actor.clearGoal();\n    }\n    // check if they noticed the player scent\n    if (target.scent) {\n        const dir = target.scent.nextDir(actor.x, actor.y);\n        if (dir) {\n            console.log('tracking scent', actor.id, dir);\n            const moveDir = getAction('moveDir');\n            if (!moveDir)\n                throw new Error('No moveDir action found for Actors!');\n            const result = await moveDir(game, actor, { dir });\n            if (result)\n                return result;\n        }\n    }\n    const wanderOpt = GWU.object.firstOpt('wander', actor.ai, actor.kind.ai, false);\n    if (wanderOpt) {\n        if (actor.goalMap || // we have a current goal\n            typeof wanderOpt !== 'number' || // wander: true\n            GWU.random.chance(wanderOpt) // chance\n        ) {\n            const result = wander(game, actor);\n            if (result)\n                return result;\n        }\n        else {\n            const idle = getAction('idle');\n            if (idle) {\n                return idle(game, actor);\n            }\n        }\n    }\n    const standStill = getAction('standStill');\n    if (!standStill)\n        throw new Error('No standStill action found for actors!');\n    return standStill(game, actor);\n}\nAI.install('typical', typical);\nAI.install('default', typical);\nexport function canMoveToward(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        if (distanceMap[x][y] < center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveToward(game, actor, target, ctx) {\n    // pathfinding?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    // distanceMap.dump();\n    const map = game.map;\n    const step = GWU.path.nextStep(ctx.distanceMap, actor.x, actor.y, (x, y) => {\n        const cell = map.cell(x, y);\n        if (!cell)\n            return true;\n        if (cell.hasActor() && cell.actor !== target)\n            return true;\n        if (cell.blocksMove())\n            return true;\n        return false;\n    });\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        const standStill = getAction('standStill');\n        if (!standStill)\n            throw new Error('No standStill action found for actors!');\n        result = await standStill(game, actor);\n        return ctx.done(result);\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return ctx.done(result);\n}\nexport function canMoveAwayFrom(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        const d = distanceMap[x][y];\n        if (d >= GWU.path.NO_PATH)\n            return;\n        if (distanceMap[x][y] > center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveAwayFrom(_game, actor, _target, _ctx) {\n    // safety/strategy?\n    // always move using safety map?\n    return actor.endTurn();\n}\nexport function canRunAwayFrom(_game, _actor, _target, _ctx) {\n    // can move?\n    return false;\n}\nexport async function runAwayFrom(_game, actor, _target, _ctx) {\n    // move toward loop if away from player\n    return actor.endTurn();\n}\nexport function canAttack(_game, actor, target, _ctx) {\n    // has attack?\n    // attack affects player?\n    // cooldown?\n    return GWU.xy.distanceFromTo(actor, target) <= 1;\n}\nexport async function attack(game, actor, target, _ctx) {\n    console.log('attack!', actor.id, target.id);\n    let attack = actor.getAction('attack');\n    if (!attack)\n        return 0;\n    return attack(game, actor, { actor: target });\n}\nexport function tooFarFrom(_game, actor, target, _ctx) {\n    // diagonal?\n    return GWU.xy.distanceFromTo(actor, target) > 1;\n}\nexport function tooCloseTo(_game, actor, target, _ctx) {\n    return GWU.xy.distanceFromTo(actor, target) < 1;\n}\n// TODO - make an action\nexport async function moveTowardGoal(game, actor) {\n    if (!actor.hasGoal())\n        return 0;\n    const nextStep = GWU.path.nextStep(actor.goalMap, actor.x, actor.y, (x, y) => {\n        return actor.map.hasActor(x, y);\n    });\n    if (!nextStep) {\n        actor.clearGoal();\n        return 0;\n    }\n    const moveDir = actor.getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action for actor!');\n    return await moveDir(game, actor, { dir: nextStep });\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { getAction } from '../actor/action';\nexport async function wander(game, actor) {\n    // Do we have a wander target?\n    let goalMap = actor.goalMap;\n    if (!goalMap) {\n        //      pick new wander target\n        const costMap = actor.costMap();\n        const loc = GWU.random.matchingLoc(costMap.width, costMap.height, (x, y) => {\n            return costMap[x][y] > 0 && costMap[x][y] !== GWU.path.NO_PATH;\n        });\n        if (!loc || loc[0] < 0 || loc[1] < 0) {\n            console.log('No wander location found!');\n            return 0;\n        }\n        //      build distance map to target\n        goalMap = actor.setGoal(loc[0], loc[1]);\n    }\n    // take the next step to the target\n    const step = GWU.path.nextStep(goalMap, actor.x, actor.y, (x, y) => {\n        if (!game.map.hasActor(x, y))\n            return false;\n        const other = game.map.actorAt(x, y);\n        if (!other) {\n            console.log(`Cell @ ${x},${y} has actor flag, but no actor.`);\n            game.map.cell(x, y).clearCellFlag(Flags.Cell.HAS_ACTOR);\n            return false;\n        }\n        return !actor.canPass(other);\n    });\n    if (!step) {\n        actor.clearGoal();\n        return 0;\n    }\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        return 0; // did nothing\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return result;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nexport function fillSafetyMap(safetyMap, actor, target) {\n    const costGrid = GWU.grid.alloc(actor.costMap());\n    GWU.path.calculateDistances(safetyMap, target.x, target.y, costGrid, true);\n    safetyMap.update((v) => v * -1); // Can set factor to be < -1 e.g. -1.2\n    actor.map.actors.forEach((a) => {\n        if (a.willAttack(actor)) {\n            costGrid[a.x][a.y] = GWU.path.FORBIDDEN; // This is why we allocate a copy\n        }\n    });\n    actor.map.eachCell((c, x, y) => {\n        if (c.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n            safetyMap[x][y] -= GWU.path.AVOIDED; // loop cells are extra good\n        }\n    });\n    GWU.path.rescan(safetyMap, costGrid, true);\n    safetyMap.update((v) => (v <= -30000 ? 30000 : v));\n    GWU.grid.free(costGrid);\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Actor } from './actor';\nimport * as AI from '../ai';\nexport class ActorKind extends Entity.EntityKind {\n    constructor(opts) {\n        super(opts);\n        this.flags = {\n            actor: Flags.Actor.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.vision = {};\n        this.actions = {};\n        this.bump = ['attack'];\n        this.moveSpeed = 100;\n        if (opts.flags) {\n            this.flags.actor = GWU.flag.from(Flags.Actor, this.flags.actor, opts.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, opts.flags);\n        }\n        if (opts.vision) {\n            this.vision.normal = opts.vision;\n        }\n        this.stats = Object.assign({ health: 1, morale: 100 }, opts.stats);\n        if (opts.actions) {\n            Object.assign(this.actions, opts.actions);\n        }\n        if (opts.moveSpeed) {\n            this.moveSpeed = opts.moveSpeed;\n        }\n        this.ai = AI.make(opts.ai || 'default');\n        if (opts.bump) {\n            if (typeof opts.bump === 'string') {\n                opts.bump = opts.bump.split(/[|,]/g).map((t) => t.trim());\n            }\n            if (typeof opts.bump === 'function') {\n                opts.bump = [opts.bump];\n            }\n            if (Array.isArray(opts.bump)) {\n                this.bump = opts.bump.slice();\n            }\n        }\n        if (opts.waterOnly) {\n            this.forbidTileFlags =\n                this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.avoidTileFlags =\n                this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.requireTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n        }\n        else if (opts.lavaOnly) {\n            this.forbidTileFlags = this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n            this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n            this.requireTileFlags |= Flags.Tile.T_LAVA;\n        }\n        else {\n            if (opts.swim) {\n                this.avoidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            else {\n                this.forbidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            if (opts.fly) {\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n                this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_LAVA;\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.avoidTileFlags =\n                    this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n        }\n    }\n    make(options) {\n        const actor = new Actor(this);\n        this.init(actor, options);\n        return actor;\n    }\n    init(actor, options = {}) {\n        super.init(actor, options);\n        Object.assign(actor.flags, this.flags);\n        // if (options.fov) {\n        //     actor.fov = options.fov;\n        // }\n        // if (options.memory) {\n        //     actor.memory = options.memory;\n        // }\n        if (this.vision.normal) {\n            actor.visionDistance = this.vision.normal;\n        }\n        actor.stats.init(this.stats);\n    }\n    addToMap(actor, map) {\n        super.addToMap(actor, map);\n        // if (this.hasActorFlag(Flags.Actor.HAS_MEMORY)) {\n        //     actor.memory = Memory.get(actor, map);\n        // }\n        // if (this.hasActorFlag(Flags.Actor.USES_FOV)) {\n        //     actor.fov = new GWU.fov.FovSystem(map);\n        //     actor.fov.follow = actor;\n        //     if (actor.memory) {\n        //         actor.fov.callback = actor.memory;\n        //     }\n        // }\n    }\n    removeFromMap(actor) {\n        super.removeFromMap(actor);\n        // if (actor._map && actor.memory) {\n        //     Memory.store(actor, actor._map, actor.memory);\n        // }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    canSeeEntity(_actor, _entity) {\n        return true;\n    }\n    isAbleToSee(_actor, _entity) {\n        return true;\n    }\n    isAbleToSense(_actor, _entity) {\n        return true;\n    }\n    forbidsCell(cell, actor) {\n        if (super.forbidsCell(cell, actor)) {\n            return true;\n        }\n        if (cell.blocksMove())\n            return true;\n        return false;\n    }\n    avoidsCell(cell, actor) {\n        if (super.avoidsCell(cell, actor))\n            return true;\n        if (cell.blocksPathing())\n            return true;\n        return false;\n    }\n    getFlavor(actor, opts) {\n        const flavor = actor.isPlayer() ? 'yourself' : this.flavor;\n        if (opts && opts.action) {\n            return flavor + ' standing';\n        }\n        return flavor;\n    }\n    pickupItem(actor, item, _opts) {\n        if (!GWU.list.push(actor, 'items', item))\n            return false;\n        // TODO - Pickup effects\n        return true;\n    }\n    dropItem(actor, item, _opts) {\n        if (!GWU.list.remove(actor, 'items', item))\n            return false;\n        // TODO - Drop effects\n        return true;\n    }\n    cellCost(cell, actor) {\n        if (this.forbidsCell(cell, actor)) {\n            return cell.hasEntityFlag(Flags.Entity.L_BLOCKS_DIAGONAL)\n                ? GWU.path.OBSTRUCTION\n                : GWU.path.FORBIDDEN;\n        }\n        else if (this.avoidsCell(cell, actor)) {\n            return GWU.path.AVOIDED;\n        }\n        return GWU.path.OK;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ActorKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ActorKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ActorKind) {\n        kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ActorKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ActorKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","import { installAction } from '../action';\n// BUMP\n//\n// prefixes:\n// @ = only for player\n// + = only for ally\n// - = only for opposed\n// = = only for same kind\n// $ = use my action (if used with one of the above, this comes last)\n//\nexport async function bump(game, actor, ctx = {}) {\n    const other = ctx.actor;\n    if (other) {\n        const bumpActions = other.getBumpActions();\n        for (let action of bumpActions) {\n            if (typeof action === 'string') {\n                if (action.startsWith('$')) {\n                    const selfName = action.substring(1);\n                    let selfAction = other.getAction(selfName);\n                    if (selfAction === false) {\n                        throw new Error('Cannot have bump action for self action that actor cannot do: ' +\n                            action);\n                    }\n                    const ctx2 = Object.assign({}, ctx, { actor });\n                    const result = await selfAction(game, other, ctx2);\n                    if (result)\n                        return result;\n                }\n                else {\n                    const config = actor.getAction(action);\n                    if (config === false) {\n                        throw new Error('Cannot configure actor with bump action they cannot do: ' +\n                            action);\n                    }\n                    else {\n                        action = config;\n                    }\n                    const result = await action(game, actor, ctx);\n                    if (result)\n                        return result;\n                }\n            }\n            else {\n                const result = await action(game, actor, ctx);\n                if (result)\n                    return result;\n            }\n        }\n    }\n    const item = ctx.item;\n    if (item) {\n        // TODO - Item Actions\n    }\n    return 0;\n}\ninstallAction('bump', bump);\n","import { installAction } from '../action';\nexport async function standStill(_game, actor, _ctx) {\n    return actor.endTurn();\n}\ninstallAction('standStill', standStill);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\n// export class SpriteFX extends FX {\n//     sprite: GWU.sprite.SpriteConfig;\n//     stepCount: number;\n//     x: number;\n//     y: number;\n//     constructor(\n//         map: Map,\n//         sprite: string | GWU.sprite.SpriteConfig,\n//         x: number,\n//         y: number,\n//         opts: SpriteFxOptions = {}\n//     ) {\n//         const count = opts.blink || 1;\n//         const duration = opts.duration || 1000;\n//         opts.speed = opts.speed || duration / (2 * count - 1);\n//         super(map, opts);\n//         if (typeof sprite === 'string') {\n//             const name = sprite;\n//             sprite = GWU.sprite.sprites[sprite];\n//             if (!sprite) throw new Error('Cannot find sprite! ' + name);\n//         }\n//         this.sprite = sprite;\n//         this.x = x || 0;\n//         this.y = y || 0;\n//         this.stepCount = 2 * count - 1;\n//     }\n//     start() {\n//         this.map.addFx(this.x, this.y, this.sprite);\n//         return super.start();\n//     }\n//     step() {\n//         --this.stepCount;\n//         if (this.stepCount <= 0) return this.stop();\n//         if (this.stepCount % 2 == 0) {\n//             this.map.removeFx(this);\n//         } else {\n//             this.map.addFx(this.x, this.y, this);\n//         }\n//     }\n//     stop(result?: any) {\n//         this.map.removeFx(this);\n//         return super.stop(result);\n//     }\n//     moveDir(dx: number, dy: number) {\n//         return this.moveTo(this.x + dx, this.y + dy);\n//     }\n//     moveTo(x: number, y: number) {\n//         this.map.moveFx(x, y, this);\n//         return true;\n//     }\n// }\nexport async function flashSprite(map, x, y, sprite, duration = 100, count = 1, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ visible: true })\n        .to({ visible: false })\n        .repeat(count)\n        .repeatDelay(duration)\n        .duration(duration)\n        .onUpdate((obj) => {\n        if (obj.visible) {\n            map.addFx(x, y, entity);\n        }\n        else {\n            map.removeFx(entity);\n        }\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nGWU.sprite.install('bump', 'white', 50);\nexport async function hit(map, target, sprite, duration, animator) {\n    sprite = sprite || 'hit';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('hit', 'red', 50);\nexport async function miss(map, target, sprite, duration, animator) {\n    sprite = sprite || 'miss';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('miss', 'green', 50);\nexport async function fadeInOut(map, x, y, sprite, duration = 100, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite).clone();\n    }\n    else {\n        sprite = GWU.sprite.make(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ opacity: 0 })\n        .to({ opacity: 100 })\n        .repeat(2)\n        .yoyo(true)\n        .duration(Math.floor(duration / 2))\n        .onUpdate((obj) => {\n        entity.sprite.opacity = obj.opacity;\n        map.cell(x, y).needsRedraw = true; // we changed the sprite so redraw\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport async function moveSprite(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    const from = { x: GWU.xy.x(source), y: GWU.xy.y(source) };\n    map.addFx(from.x, from.y, entity);\n    let duration = opts.duration ||\n        Math.ceil(16 * (GWU.xy.maxAxisFromTo(source, target) / (opts.speed || 8)));\n    if (GWU.xy.isLoc(target)) {\n        target = { x: target[0], y: target[1] };\n    }\n    const tween = GWU.tween\n        .make(from)\n        .to(target)\n        .duration(duration)\n        .onUpdate((vals) => {\n        // tweens dont update every step, so...\n        // draw line from current pos to vals pos\n        // check each step for blocking...\n        // end at either vals or last blocking spot\n        const dest = { x: entity.x, y: entity.y };\n        const ok = GWU.xy.forLineBetween(dest.x, dest.y, vals.x, vals.y, (x, y) => {\n            if (opts.stepFn) {\n                if (opts.stepFn(x, y)) {\n                    if (!opts.stopBeforeWalls) {\n                        dest.x = x;\n                        dest.y = y;\n                    }\n                    return false;\n                }\n            }\n            else if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (!opts.stopBeforeWalls) {\n                    dest.x = x;\n                    dest.y = y;\n                }\n                return false;\n            }\n            dest.x = x;\n            dest.y = y;\n        });\n        map.moveFx(entity, dest.x, dest.y);\n        if (!ok) {\n            tween.stop();\n        }\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n        return entity;\n    });\n    const animator = opts.animator || map;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport function bolt(map, source, target, sprite, opts = {}) {\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport async function projectile(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    if (sprite.ch && sprite.ch.length == 4) {\n        const dir = GWU.xy.dirFromTo(source, target);\n        let index = 0;\n        if (dir[0] && dir[1]) {\n            index = 2;\n            if (dir[0] != dir[1]) {\n                // remember up is -y\n                index = 3;\n            }\n        }\n        else if (dir[0]) {\n            index = 1;\n        }\n        const ch = sprite.ch[index];\n        sprite = GWU.sprite.make(ch, sprite.fg, sprite.bg);\n    }\n    else if (sprite.ch && sprite.ch.length !== 1) {\n        throw new Error('projectile requires 4 chars - vert,horiz,diag-left,diag-right (e.g: \"|-\\\\/\")');\n    }\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport function beam(map, from, to, sprite, opts = {}) {\n    opts.fade = opts.fade || 100;\n    if (opts.stopAtWalls === undefined)\n        opts.stopAtWalls = true;\n    const line = [];\n    GWU.xy.forLineFromTo(from, to, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (opts.stepFn && opts.stepFn(x, y))\n            return false;\n        if (opts.stopAtWalls || opts.stopBeforeWalls) {\n            if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (opts.stopBeforeWalls)\n                    return false;\n                line.push([x, y]);\n                return false;\n            }\n        }\n        line.push([x, y]);\n        return true;\n    });\n    const duration = opts.duration || Math.ceil(16 * (line.length / (opts.speed || 8)));\n    const animator = opts.animator || map;\n    const promises = [];\n    let lastIndex = -1;\n    const tween = GWU.tween\n        .make({ index: 0 })\n        .to({ index: line.length - 1 })\n        .duration(duration)\n        .onUpdate((vals) => {\n        while (lastIndex < vals.index) {\n            ++lastIndex;\n            const loc = line[lastIndex] || [-1, -1];\n            promises.push(fadeInOut(map, loc[0], loc[1], sprite, opts.fade, animator));\n        }\n    })\n        .onFinish(async () => {\n        await Promise.all(promises);\n        const loc = line[line.length - 1];\n        return { x: loc[0], y: loc[1] };\n    });\n    animator.addAnimation(tween);\n    return tween.start();\n}\nfunction isInShape(shape, cx, cy, allowCenter, x, y) {\n    const sx = Math.abs(x - cx);\n    const sy = Math.abs(y - cy);\n    if (sx == 0 && sy == 0 && !allowCenter)\n        return false;\n    switch (shape) {\n        case '+':\n            return sx == 0 || sy == 0;\n        case 'x':\n        case 'X':\n            return sx == sy;\n        case '*':\n            return sx == 0 || sy == 0 || sx == sy;\n        default:\n            return true;\n    }\n}\nfunction checkExplosionOpts(opts) {\n    opts.speed = opts.speed || 2;\n    opts.fade = opts.fade || 100;\n    opts.shape = opts.shape || 'o';\n    if (opts.center === undefined) {\n        opts.center = true;\n    }\n}\nexport function explosion(map, x, y, radius, sprite, opts = {}) {\n    checkExplosionOpts(opts);\n    opts.animator = opts.animator || map;\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const grid = GWU.grid.alloc(map.width, map.height);\n    const fov = new GWU.fov.FOV({\n        isBlocked(x, y) {\n            return map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE);\n        },\n        hasXY(x, y) {\n            return map.hasXY(x, y);\n        },\n    });\n    fov.calculate(x, y, radius, (x1, y1) => {\n        grid[x1][y1] = 1;\n    });\n    const duration = opts.duration || 32 * (radius / opts.speed);\n    const promises = [];\n    const tween = GWU.tween\n        .make({ r: 0 })\n        .to({ r: radius })\n        .duration(duration)\n        .onUpdate((vals) => {\n        const minX = Math.max(0, x - vals.r);\n        const minY = Math.max(0, y - vals.r);\n        const maxX = Math.min(map.width - 1, x + vals.r);\n        const maxY = Math.min(map.height - 1, y + vals.r);\n        for (let x1 = minX; x1 <= maxX; ++x1) {\n            for (let y1 = minY; y1 <= maxY; ++y1) {\n                if (grid[x1][y1] &&\n                    GWU.xy.distanceBetween(x, y, x1, y1) <= vals.r) {\n                    grid[x1][y1] = 0;\n                    if (isInShape(opts.shape, x, y, opts.center, x1, y1)) {\n                        promises.push(fadeInOut(map, x1, y1, sprite, opts.fade, opts.animator));\n                    }\n                }\n            }\n        }\n    })\n        .onFinish(async (_obj, success) => {\n        GWU.grid.free(grid);\n        await Promise.all(promises);\n        return success;\n    });\n    opts.animator.addAnimation(tween);\n    return tween.start();\n}\n/*\nexport function explosionFor(\n    map: Map,\n    grid: GWU.grid.NumGrid,\n    x: number,\n    y: number,\n    radius: number,\n    sprite: string | GWU.sprite.SpriteConfig,\n    opts: ExplosionOptions = {}\n) {\n    checkExplosionOpts(opts);\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    const animation = new ExplosionFX(\n        map,\n        grid,\n        x,\n        y,\n        radius,\n        sprite,\n        opts.speed,\n        opts.fade,\n        opts.shape,\n        opts.center,\n        opts.stepFn\n    );\n    return opts.playFn!(animation);\n}\n*/\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { bump } from './bump';\nimport { standStill } from './standStill';\nimport * as FX from '../../fx';\nimport * as Flags from '../../flags';\nexport async function moveDir(game, actor, ctx = {}) {\n    //\n    const step = ctx.dir;\n    if (!step)\n        throw new Error('moveDir called with no direction!');\n    const newX = actor.x + step[0];\n    const newY = actor.y + step[1];\n    const map = game.map;\n    const currentCell = map.cell(actor.x, actor.y);\n    const newCell = map.cell(newX, newY);\n    let result = 0;\n    if (actor.forbidsCell(newCell)) {\n        if (ctx.try)\n            return 0;\n        if (actor.isPlayer()) {\n            FX.hit(map, newCell, 'hit', 100);\n            GWU.message.addAt(newCell.x, newCell.y, '{{you}} {{verb bump~}} into {{a cell}}.', { actor, cell: newCell });\n        }\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    if (newCell.blocksMove()) {\n        if (ctx.try)\n            return 0;\n        FX.hit(map, newCell, 'hit', 100);\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    // can we leave?\n    if (!currentCell.canRemoveActor(actor)) {\n        if (ctx.try)\n            return 0;\n        // canActorLeave must add appropriate message\n        return actor.endTurn();\n    }\n    // is there an actor there?\n    if (newCell.hasActor() || newCell.hasItem()) {\n        if (ctx.try)\n            return 0;\n        const ctx2 = { actor: newCell.actor, item: newCell.item };\n        result = await bump(game, actor, ctx2);\n        if (result)\n            return result;\n    }\n    // can we enter?\n    if (!newCell.canAddActor(actor)) {\n        if (ctx.try)\n            return 0;\n        return actor.endTurn();\n    }\n    if (!map.moveActor(actor, newX, newY)) {\n        result = await standStill(game, actor, ctx);\n        return result;\n    }\n    let rate = 100;\n    if (newCell.hasTileFlag(Flags.Tile.T_DEEP_WATER)) {\n        rate = 150;\n    }\n    result = actor.endTurn(rate);\n    return result;\n}\ninstallAction('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { moveDir } from './moveDir';\nexport async function idle(game, actor, _ctx) {\n    if (GWU.random.chance(50)) {\n        // do nothing\n        return actor.endTurn();\n    }\n    // try to step in a random direction\n    const dirIndex = GWU.random.number(4);\n    const dir = GWU.xy.DIRS[dirIndex];\n    const result = await moveDir(game, actor, { dir, try: true });\n    if (result)\n        return result;\n    // stand still\n    return actor.endTurn();\n}\ninstallAction('idle', idle);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nexport async function pickup(game, actor, ctx = {}) {\n    const map = actor.map;\n    if (!map)\n        throw new Error('Actor not on map!');\n    const item = actor.map.itemAt(actor.x, actor.y);\n    if (!item) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, 'Nothing to pickup.');\n        }\n        return 0;\n    }\n    if (actor.avoidsItem(item))\n        return 0;\n    const itemAction = item.getAction('pickup');\n    if (itemAction === false) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, 'You cannot pickup %{the.item}.', {\n                item,\n            });\n        }\n        return 0;\n    }\n    else if (typeof itemAction === 'function') {\n        // You have to do everything\n        const result = await itemAction(game, actor, item);\n        if (result)\n            return result; // handled\n    }\n    // logs error messages\n    if (!actor.canAddItem(item)) {\n        return 0;\n    }\n    if (!actor.map.removeItem(item)) {\n        return 0;\n    }\n    actor.addItem(item);\n    if (!ctx.quiet) {\n        GWU.message.addAt(actor.x, actor.y, 'You pickup %{the:item}.', {\n            item,\n        });\n    }\n    return actor.endTurn();\n}\ninstallAction('pickup', pickup);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Item } from './item';\nexport class ItemKind extends Entity.EntityKind {\n    constructor(config) {\n        super(config);\n        this.flags = {\n            item: Flags.Item.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.actions = {};\n        this.bump = [];\n        if (config.flags) {\n            this.flags.item = GWU.flag.from(Flags.Item, this.flags.item, config.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, config.flags);\n        }\n        if (config.actions) {\n            Object.entries(config.actions).forEach(([key, value]) => {\n                this.actions[key] = value;\n            });\n        }\n        if (config.bump) {\n            if (typeof config.bump === 'string' ||\n                typeof config.bump === 'function') {\n                config.bump = [config.bump];\n            }\n            if (Array.isArray(config.bump)) {\n                this.bump = config.bump.slice();\n            }\n        }\n        this.avoidTileFlags |= Flags.Tile.T_DEEP_WATER;\n        this.forbidTileFlags |= Flags.Tile.T_LAVA | Flags.Tile.T_AUTO_DESCENT;\n    }\n    make(options) {\n        const item = new Item(this);\n        this.init(item, options);\n        return item;\n    }\n    init(item, options = {}) {\n        super.init(item, options);\n        Object.assign(item.flags, this.flags);\n        item.quantity = options.quantity || 1;\n    }\n    avoidsCell(cell, item) {\n        if (cell.isDoor())\n            return true;\n        return super.avoidsCell(cell, item);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ItemKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ItemKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ItemKind) {\n        kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ItemKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ItemKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","export class MapLayer {\n    constructor(map, name = 'layer') {\n        this.changed = false;\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    clear() { }\n    setTile(_x, _y, _tile, _opts) {\n        return false;\n    }\n    clearTile(_x, _y) {\n        return false;\n    }\n    addActor(_x, _y, _actor) {\n        return false;\n    }\n    forceActor(_x, _y, _actor) {\n        return false;\n    }\n    removeActor(_actor) {\n        return false;\n    }\n    addItem(_x, _y, _item) {\n        return false;\n    }\n    forceItem(_x, _y, _item) {\n        return false;\n    }\n    removeItem(_item) {\n        return false;\n    }\n    // Time based changes to the layer (e.g. dissipate gasses)\n    tick(_dt) {\n        return false;\n    }\n}\n","import { MapLayer } from './mapLayer';\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    setTile(x, y, tile, opts) {\n        const cell = this.map.cell(x, y);\n        return cell.setTile(tile, opts);\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // // Bookkeeping for fire, pressure plates and key-activated tiles.\n        // for (let x = 0; x < this.map.width; ++x) {\n        //     for (let y = 0; y < this.map.height; ++y) {\n        //         const cell = this.map.cell(x, y);\n        //         if (\n        //             !cell.hasCellFlag(\n        //                 Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM\n        //             ) &&\n        //             cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)\n        //         ) {\n        //             cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n        //         }\n        //     }\n        // }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nexport class GasLayer extends TileLayer {\n    constructor(map, name = 'gas') {\n        super(map, name);\n        this.volume = GWU.grid.alloc(map.width, map.height, 0);\n    }\n    clear() {\n        this.volume.fill(0);\n    }\n    setTile(x, y, tile, opts = {}) {\n        if (!opts.volume)\n            return false;\n        const cell = this.map.cell(x, y);\n        if (cell.depthTile(tile.depth) === tile) {\n            this.volume[x][y] += opts.volume;\n            return true;\n        }\n        if (!super.setTile(x, y, tile, opts)) {\n            return false;\n        }\n        this.volume[x][y] = opts.volume;\n        this.changed = true;\n        return true;\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        if (cell.clearDepth(this.depth)) {\n            this.volume[x][y] = 0;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        this.volume.copy(other.volume);\n        this.changed = other.changed;\n    }\n    tick(_dt) {\n        if (!this.changed)\n            return false;\n        this.changed = false;\n        const startingVolume = this.volume;\n        this.volume = GWU.grid.alloc(this.map.width, this.map.height);\n        // dissipate the gas...\n        this.dissipate(startingVolume);\n        // spread the gas...\n        this.spread(startingVolume);\n        GWU.grid.free(startingVolume);\n        return true;\n    }\n    dissipate(volume) {\n        volume.update((v, x, y) => {\n            if (!v)\n                return 0;\n            const tile = this.map.cell(x, y).depthTile(this.depth);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (v) {\n                this.changed = true;\n            }\n            else {\n                this.clearTile(x, y);\n            }\n            return v;\n        });\n    }\n    calcOpacity(volume) {\n        return Math.floor(Math.min(volume, 10) * 10);\n    }\n    updateCellVolume(x, y, startingVolume) {\n        let total = 0;\n        let count = 0;\n        let highestVolume = 0;\n        const cell = this.map.cell(x, y);\n        let startingTile = cell.depthTile(this.depth);\n        let highestTile = startingTile;\n        if (cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n            this.volume[x][y] = 0;\n            if (startingVolume[x][y]) {\n                this.clearTile(x, y);\n            }\n            return;\n        }\n        for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n            for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n                const v = startingVolume[i][j];\n                if (!cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n                    ++count;\n                    if (v > highestVolume) {\n                        highestVolume = v;\n                        highestTile = this.map.cell(i, j).depthTile(this.depth);\n                    }\n                }\n                total += v;\n            }\n        }\n        const v = Math.floor((total * 10) / count) / 10;\n        this.volume[x][y] = v;\n        if (v > 0 && highestTile) {\n            if (!startingTile || startingTile !== highestTile) {\n                cell.setTile(highestTile);\n            }\n        }\n        if (v > 0) {\n            cell.needsRedraw = true;\n        }\n    }\n    spread(startingVolume) {\n        for (let x = 0; x < startingVolume.width; ++x) {\n            for (let y = 0; y < startingVolume.height; ++y) {\n                this.updateCellVolume(x, y, startingVolume);\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nimport * as Effect from '../effect';\nconst Depth = Flags.Depth;\nconst ObjectFlags = Flags.Entity;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport class FireLayer extends TileLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n            }\n        }\n        // now spread the fire...\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                    !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                    this.exposeToFire(x, y, false);\n                    for (let d = 0; d < 4; ++d) {\n                        const dir = GWU.xy.DIRS[d];\n                        this.exposeToFire(x + dir[0], y + dir[1]);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    exposeToFire(x, y, alwaysIgnite = false) {\n        let ignitionChance = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n        let fireIgnited = false, explosivePromotion = false;\n        const cell = this.map.cell(x, y);\n        if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n            return false;\n        }\n        // Pick the extinguishing layer with the best priority.\n        cell.eachTile((tile) => {\n            if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n                tile.priority > bestExtinguishingPriority) {\n                bestExtinguishingPriority = tile.priority;\n            }\n        });\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        cell.eachTile((tile) => {\n            if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n                (tile.depth === Depth.GAS ||\n                    tile.priority >= bestExtinguishingPriority)) {\n                const effect = Effect.from(tile.effects.fire);\n                if (effect && effect.chance > ignitionChance) {\n                    ignitionChance = effect.chance;\n                }\n            }\n        });\n        if (alwaysIgnite ||\n            (ignitionChance && this.map.rng.chance(ignitionChance, 10000))) {\n            // If it ignites...\n            fireIgnited = true;\n            // Count explosive neighbors.\n            if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                GWU.xy.eachNeighbor(x, y, (x0, y0) => {\n                    const n = this.map.cell(x0, y0);\n                    if (n.hasEntityFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                        n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                        n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                        ++explosiveNeighborCount;\n                    }\n                });\n                if (explosiveNeighborCount >= 8) {\n                    explosivePromotion = true;\n                }\n            }\n            let event = 'fire';\n            if (explosivePromotion && cell.hasEffect('explode')) {\n                event = 'explode';\n            }\n            // cell.eachTile( (tile) => {\n            //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n            //         if (tile.depth === Depth.GAS) {\n            //             cell.gasVolume = 0;\n            //         } else if (tile.depth === Depth.LIQUID) {\n            //             cell.liquidVolume = 0;\n            //         }\n            //     }\n            // });\n            cell.fireEvent(event, {\n                force: true,\n            });\n            cell.needsRedraw = true;\n        }\n        return fireIgnited;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nconst highlightColor = GWU.color.install('highlight', [100, 100, 0]);\nexport class BasicDrawer {\n    constructor() {\n        this.scent = false;\n    }\n    drawInto(dest, map, opts = {}) {\n        const buffer = dest instanceof GWU.buffer.Buffer ? dest : dest.buffer;\n        const offsetX = opts.offsetX || 0;\n        const offsetY = opts.offsetY || 0;\n        map.clearMapFlag(Flags.Map.MAP_DANCES);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                if (map.hasXY(x + offsetX, y + offsetY)) {\n                    const cell = map.cell(x + offsetX, y + offsetY);\n                    this.drawCell(mixer, map, cell, map.fov);\n                    buffer.drawSprite(x, y, mixer);\n                }\n            }\n        }\n    }\n    drawCell(dest, map, cell, fov) {\n        dest.blackOut();\n        // const isVisible = fov ? fov.isAnyKindOfVisible(cell.x, cell.y) : true;\n        const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        if (cell.needsRedraw || needSnapshot) {\n            this.getAppearance(dest, map, cell);\n            cell.putSnapshot(dest);\n            cell.needsRedraw = false;\n            cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n        else {\n            cell.getSnapshot(dest);\n            if (cell.hasCellFlag(Flags.Cell.COLORS_DANCE)) {\n                map.setMapFlag(Flags.Map.MAP_DANCES);\n            }\n        }\n        this.applyLight(dest, cell, fov);\n        let separate = false;\n        if (cell.memory) {\n            separate = !!(cell.memory.flags.entity &\n                (Flags.Entity.L_VISUALLY_DISTINCT |\n                    Flags.Entity.L_LIST_IN_SIDEBAR));\n        }\n        else {\n            separate = cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT |\n                Flags.Entity.L_LIST_IN_SIDEBAR, true);\n        }\n        if (cell.hasCellFlag(Flags.Cell.IS_CURSOR)) {\n            dest.invert();\n            dest.mix(highlightColor, 0, 25);\n            separate = true;\n        }\n        else if (cell.hasCellFlag(Flags.Cell.IS_HIGHLIGHTED)) {\n            dest.invert();\n            separate = true;\n        }\n        if (this.scent && map.player) {\n            const s = GWU.clamp(map.player.scent.get(cell.x, cell.y) * 5, 0, 50);\n            if (s) {\n                const c = GWU.color.colors.red;\n                dest.mix(c, 0, s);\n            }\n        }\n        if (separate) {\n            [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n        }\n        return true;\n    }\n    // getCellAppearance(cell: CellType, dest: GWU.sprite.Mixer) {\n    //     dest.blackOut();\n    //     const isVisible = true; // this.fov.isAnyKindOfVisible(x, y);\n    //     const isRevealed = true; // this.fov.isRevealed(x, y);\n    //     const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     if (needSnapshot || (cell.needsRedraw && isVisible)) {\n    //         this.layers.forEach((layer) => layer.putAppearance(dest, cell));\n    //         if (dest.dances) {\n    //             cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n    //         } else {\n    //             cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n    //         }\n    //         dest.bake();\n    //         cell.putSnapshot(dest);\n    //         cell.needsRedraw = false;\n    //         cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     } else {\n    //         cell.getSnapshot(dest);\n    //     }\n    //     if (isVisible) {\n    //         const light = this.light.getLight(cell.x, cell.y);\n    //         dest.multiply(light);\n    //     } else if (isRevealed) {\n    //         dest.scale(50);\n    //     } else {\n    //         dest.blackOut();\n    //     }\n    //     if (cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT)) {\n    //         [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n    //     }\n    // }\n    getAppearance(dest, map, cell) {\n        let tiles = cell.tiles;\n        let actor = null;\n        let item = null;\n        if (cell.memory) {\n            tiles = cell.memory.tiles;\n            item = cell.memory.item;\n        }\n        else {\n            actor = cell.hasActor() ? cell.actor : null;\n            item = cell.hasItem() ? cell.item : null;\n        }\n        const ground = tiles[Flags.Depth.GROUND];\n        const surface = tiles[Flags.Depth.SURFACE];\n        const liquid = tiles[Flags.Depth.LIQUID];\n        const gas = tiles[Flags.Depth.GAS]; // How to get volume!?!?!?!\n        dest.drawSprite(ground.sprite);\n        if (surface) {\n            dest.drawSprite(surface.sprite);\n        }\n        if (liquid) {\n            dest.drawSprite(liquid.sprite);\n        }\n        if (item) {\n            item.drawInto(dest);\n        }\n        if (actor) {\n            actor.drawInto(dest);\n        }\n        if (gas) {\n            const opacity = GWU.rng.cosmetic.number(50) + 25;\n            dest.drawSprite(gas.sprite, opacity);\n        }\n        if (cell.hasFx()) {\n            const fx = map.fxAt(cell.x, cell.y);\n            if (fx)\n                dest.drawSprite(fx.sprite);\n        }\n        if (dest.dances) {\n            cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            map.setMapFlag(Flags.Map.MAP_DANCES);\n        }\n        else {\n            cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n        }\n        dest.bake(true); // apply dancing\n    }\n    applyLight(dest, cell, fov) {\n        const isVisible = !fov || fov.isAnyKindOfVisible(cell.x, cell.y);\n        const isRevealed = !fov || fov.isRevealed(cell.x, cell.y);\n        const light = cell.map.light.getLight(cell.x, cell.y);\n        dest.multiply(light);\n        // TODO - is Clairy\n        // TODO - is Telepathy\n        if (fov && fov.isCursor(cell.x, cell.y)) {\n            dest.invert();\n        }\n        else if (!isVisible) {\n            if (isRevealed) {\n                dest.scale(70);\n            }\n            else {\n                dest.blackOut();\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { Cell } from './cell';\nimport * as TILE from '../tile';\nimport * as Layer from '../layer';\nimport * as Effect from '../effect';\nimport { BasicDrawer } from '../draw/basic';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        // _memory: GWU.grid.Grid<CellMemory>;\n        // machineCount = 0;\n        // _seed = 0;\n        this.rng = GWU.rng.random;\n        // id = 'MAP';\n        this.actors = [];\n        this.items = [];\n        this.fx = [];\n        this.player = null;\n        this._animations = [];\n        this.events = new GWU.events.EventEmitter();\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.properties = { seed: 0, machineCount: 0 };\n        if (opts.id) {\n            this.properties.id = opts.id;\n        }\n        this.drawer = opts.drawer || new BasicDrawer();\n        this.cells = GWU.grid.make(width, height, (x, y) => new Cell(this, x, y));\n        // this._memory = GWU.grid.make(\n        //     width,\n        //     height,\n        //     (x, y) => new CellMemory(this, x, y)\n        // );\n        if (opts.seed) {\n            this.properties.seed = opts.seed;\n            this.rng = GWU.rng.make(opts.seed);\n        }\n        this.light = new GWU.light.LightSystem(this, opts);\n        if (opts.fov === undefined) {\n            opts.alwaysVisible = true;\n        }\n        else if (opts.fov === false) {\n            opts.visible = true;\n        }\n        opts.callback = this.onFovChange.bind(this);\n        this.fov = new GWU.fov.FovSystem(this, opts);\n        this.initLayers();\n        if (opts.player) {\n            this.setPlayer(opts.player);\n        }\n    }\n    get seed() {\n        return this.properties.seed;\n    }\n    set seed(v) {\n        this.properties.seed = v;\n        this.rng = GWU.rng.make(v);\n    }\n    get width() {\n        return this.cells.width;\n    }\n    get height() {\n        return this.cells.height;\n    }\n    // memory(x: number, y: number): CellMemory {\n    //     return this._memory[x][y];\n    // }\n    // knowledge(x: number, y: number): CellInfoType {\n    //     if (this.fov.isAnyKindOfVisible(x, y)) return this.cell(x,y);\n    //     return this._memory[x][y];\n    // }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Flags.Depth.GROUND, new Layer.TileLayer(this, 'ground'));\n        this.addLayer(Flags.Depth.SURFACE, new Layer.FireLayer(this, 'surface'));\n        this.addLayer(Flags.Depth.GAS, new Layer.GasLayer(this, 'gas'));\n    }\n    addLayer(depth, layer) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // items\n    hasItem(x, y) {\n        return this.cell(x, y).hasItem();\n    }\n    itemAt(x, y) {\n        return this.items.find((i) => i.isAt(x, y)) || null;\n    }\n    eachItem(cb) {\n        this.items.forEach(cb);\n    }\n    addItem(x, y, item, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        // if (!cell.canAddItem(item)) return false;\n        if (cell._addItem(item)) {\n            const index = this.items.indexOf(item);\n            if (index < 0) {\n                this.items.push(item);\n            }\n            item.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddItemEffects(item, cell);\n            }\n            if (index < 0) {\n                this.events.emit('item', this, item, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddItemEffects(item, cell) {\n        if (item.key &&\n            item.key.matches(cell.x, cell.y) &&\n            cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('add_item')) {\n            cell.fireEvent('add_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    addItemNear(x, y, item, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasItem())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (item.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addItem(loc[0], loc[1], item, fireEffects);\n    }\n    removeItem(item, fireEffects = false) {\n        const cell = this.cell(item.x, item.y);\n        // if (!cell.canRemoveItem(item)) return false;\n        if (cell._removeItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, cell);\n            }\n            GWU.arrayDelete(this.items, item);\n            item.removeFromMap();\n            this.events.emit('item', this, item, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveItemEffects(item, cell) {\n        if (item.isKey(cell.x, cell.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('remove_item')) {\n            cell.fireEvent('remove_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    moveItem(item, x, y, fireEffects = false) {\n        if (item.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(item.x, item.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveItem(item)) return false;\n        // if (!newCell.canAddItem(item)) return false;\n        currentCell._removeItem(item);\n        if (newCell._addItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, currentCell);\n                this._fireAddItemEffects(item, newCell);\n            }\n            item.addToMap(this, x, y);\n        }\n        return true;\n    }\n    //  moveItem(item: Item, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = item.x;\n    //     const oldY = item.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[item.depth] as Layer.ItemLayer;\n    //     if (!( layer.removeItem(item))) return false;\n    //     if (!( this.addItem(x, y, item))) {\n    //         layer.forceItem(item.x, item.y, item);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (item.lastSeen) {\n    //     //         this._memory[item.lastSeen.x][item.lastSeen.y].removeItem(item);\n    //     //         this.clearCellFlag(\n    //     //             item.lastSeen.x,\n    //     //             item.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         item.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.item = item;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     item.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    setPlayer(player) {\n        this.player = player;\n    }\n    actorAt(x, y) {\n        return this.actors.find((a) => a.isAt(x, y)) || null;\n    }\n    eachActor(cb) {\n        this.actors.forEach(cb);\n    }\n    addActor(x, y, actor, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        if (!cell.canAddActor(actor))\n            return false;\n        if (cell._addActor(actor)) {\n            const index = this.actors.indexOf(actor);\n            if (index < 0) {\n                this.actors.push(actor);\n            }\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddActorEffects(actor, cell);\n            }\n            if (index < 0) {\n                this.events.emit('actor', this, actor, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddActorEffects(actor, cell) {\n        if (actor.isKey(cell.x, cell.y) && cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('add_player')) {\n            cell.fireEvent('add_player', {\n                player: actor,\n                actor,\n            });\n        }\n        else if (cell.hasEffect('add_actor')) {\n            cell.fireEvent('add_actor', {\n                actor,\n            });\n        }\n    }\n    addActorNear(x, y, actor, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasActor())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addActor(loc[0], loc[1], actor, fireEffects);\n    }\n    removeActor(actor, fireEffects = false) {\n        const cell = this.cell(actor.x, actor.y);\n        if (!cell.canRemoveActor(actor))\n            return false;\n        if (cell._removeActor(actor)) {\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, cell);\n            }\n            actor.removeFromMap();\n            GWU.arrayDelete(this.actors, actor);\n            this.events.emit('actor', this, actor, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveActorEffects(actor, cell) {\n        if (actor.isKey(actor.x, actor.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('remove_player')) {\n            cell.fireEvent('remove_player', {\n                actor,\n                player: actor,\n            });\n        }\n        else if (cell.hasEffect('remove_actor')) {\n            cell.fireEvent('remove_actor', {\n                actor,\n            });\n        }\n    }\n    moveActor(actor, x, y, fireEffects = false) {\n        if (actor.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(actor.x, actor.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveActor(actor)) return false;\n        // if (!newCell.canAddActor(actor)) return false;\n        currentCell._removeActor(actor);\n        if (newCell._addActor(actor)) {\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, currentCell);\n                this._fireAddActorEffects(actor, newCell);\n            }\n        }\n        return true;\n    }\n    //  moveActor(actor: Actor, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = actor.x;\n    //     const oldY = actor.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[actor.depth] as Layer.ActorLayer;\n    //     if (!( layer.removeActor(actor))) return false;\n    //     if (!( layer.addActor(x, y, actor))) {\n    //         layer.forceActor(actor.x, actor.y, actor);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (actor.lastSeen) {\n    //     //         this._memory[actor.lastSeen.x][actor.lastSeen.y].removeActor(\n    //     //             actor\n    //     //         );\n    //     //         this.clearCellFlag(\n    //     //             actor.lastSeen.x,\n    //     //             actor.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         actor.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.actor = actor;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     actor.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    fxAt(x, y) {\n        return this.fx.find((i) => i.isAt(x, y)) || null;\n    }\n    eachFx(cb) {\n        this.fx.forEach(cb);\n    }\n    addFx(x, y, fx) {\n        const cell = this.get(x, y);\n        if (!cell)\n            return false;\n        fx.x = x;\n        fx.y = y;\n        cell._addFx(fx);\n        this.fx.push(fx);\n        this.events.emit('fx', this, fx, true);\n        return true;\n    }\n    moveFx(fx, x, y) {\n        const current = this.get(fx.x, fx.y);\n        const updated = this.get(x, y);\n        if (!updated)\n            return false;\n        current._removeFx(fx);\n        fx.x = x;\n        fx.y = y;\n        updated._addFx(fx);\n        return true;\n    }\n    removeFx(fx) {\n        const cell = this.get(fx.x, fx.y);\n        GWU.arrayDelete(this.fx, fx);\n        if (cell) {\n            cell._removeFx(fx);\n        }\n        this.events.emit('fx', this, fx, false);\n        return true;\n    }\n    // Information\n    // isVisible(x: number, y: number): boolean {\n    //     return this.fov.isAnyKindOfVisible(x, y);\n    // }\n    hasKey(x, y) {\n        const actor = this.actorAt(x, y);\n        if (actor && actor.isKey(x, y))\n            return true;\n        const item = this.itemAt(x, y);\n        if (item && item.isKey(x, y))\n            return true;\n        return false;\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        const getCh = (cell) => {\n            return cell.dump();\n        };\n        this.cells.dump(fmt || getCh, log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    get needsRedraw() {\n        return this.hasMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v)\n            this.setMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n        else\n            this.clearMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    hasCellFlag(x, y, flag) {\n        return this.cell(x, y).hasCellFlag(flag);\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasEntityFlag(x, y, flag) {\n        return this.cell(x, y).hasEntityFlag(flag);\n    }\n    hasTileFlag(x, y, flag) {\n        return this.cell(x, y).hasTileFlag(flag);\n    }\n    highlightPath(path, markCursor = true) {\n        this.clearPath();\n        path.forEach((loc) => {\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_HIGHLIGHTED);\n        });\n        if (markCursor && path[0]) {\n            const loc = path[0];\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_CURSOR);\n        }\n        this.needsRedraw = true;\n    }\n    clearPath() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR | Flags.Cell.IS_HIGHLIGHTED));\n        this.needsRedraw = true;\n    }\n    showCursor(x, y) {\n        this.clearCursor();\n        this.cell(x, y).setCellFlag(Flags.Cell.IS_CURSOR);\n        this.needsRedraw = true;\n    }\n    clearCursor() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR));\n        this.needsRedraw = true;\n    }\n    clear() {\n        this.light.glowLightChanged = true;\n        // this.fov.needsUpdate = true;\n        this.layers.forEach((l) => l.clear());\n    }\n    clearCell(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clear(tile);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cells[i][j];\n                cell.clear(this.isBoundaryXY(i, j) ? boundary : tile);\n            }\n        }\n    }\n    hasTile(x, y, tile\n    // useMemory = false\n    ) {\n        return this.cell(x, y).hasTile(tile);\n        // if (!useMemory) return this.cell(x, y).hasTile(tile);\n        // return this.memory(x, y).hasTile(tile);\n    }\n    forceTile(x, y, tile) {\n        return this.setTile(x, y, tile, { superpriority: true });\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            const name = tile;\n            tile = TILE.get(name);\n            if (!tile)\n                throw new Error('Failed to find tile: ' + name);\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof Layer.TileLayer))\n            return false;\n        return layer.setTile(x, y, tile, opts);\n    }\n    clearTiles(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clearTiles(tile);\n    }\n    tick(dt) {\n        let didSomething = false;\n        this._animations.forEach((a) => {\n            didSomething = a.tick(dt) || didSomething;\n        });\n        this._animations = this._animations.filter((a) => a.isRunning());\n        didSomething = this.fireAll('tick') || didSomething;\n        for (let layer of this.layers) {\n            if (layer && layer.tick(dt)) {\n                didSomething = true;\n            }\n        }\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cell(x, y));\n        });\n        this.layers.forEach((l, depth) => {\n            l.copy(src.layers[depth]);\n        });\n        this.actors = src.actors.slice();\n        this.items = src.items.slice();\n        this.flags.map = src.flags.map;\n        // this.fov.needsUpdate = true;\n        this.light.copy(src.light);\n        this.rng = src.rng;\n        this.properties = Object.assign({}, src.properties);\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    fire(event, x, y, ctx = {}) {\n        const cell = this.cell(x, y);\n        return cell.fireEvent(event, ctx);\n    }\n    fireAll(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = GWU.grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    GWU.xy.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    this.rng.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= GWU.flag.fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        willFire.forEach((w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & GWU.flag.fl(depth)) {\n                    cell.fireEvent(event, {\n                        force: true,\n                    });\n                }\n            }\n        });\n        GWU.grid.free(willFire);\n        return didSomething;\n    }\n    activateMachine(machineId, originX, originY, ctx = {}) {\n        let didSomething = false;\n        ctx.originX = originX;\n        ctx.originY = originY;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const cell = this.cell(x, y);\n                if (cell.machineId !== machineId)\n                    continue;\n                if (cell.hasEffect('machine')) {\n                    didSomething =\n                        cell.fireEvent('machine', ctx) || didSomething;\n                }\n            }\n        }\n        return didSomething;\n    }\n    // DRAW\n    drawInto(dest, opts) {\n        this.drawer.drawInto(dest, this, opts);\n    }\n    getAppearanceAt(x, y, dest) {\n        const cell = this.cell(x, y);\n        return this.drawer.drawCell(dest, this, cell);\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n            // cell.clearCellFlag(Flags.Cell.LIGHT_CHANGED);\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(cb) {\n        // TODO - Clairy, Telepathy, Detect, etc...\n        if (this.player) {\n            cb(this.player.x, this.player.y, this.player.visionDistance, GWU.fov.FovFlags.PLAYER);\n        }\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    // redrawCell(x: number, y: number): void {\n    //     // if (clearMemory) {\n    //     //     this.clearMemory(x, y);\n    //     // }\n    //     this.cell(x, y).needsRedraw = true;\n    // }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        cell.storeMemory();\n    }\n    makeVisible(x, y) {\n        const cell = this.cell(x, y);\n        cell.clearMemory();\n    }\n    onFovChange(x, y, isVisible) {\n        if (!isVisible) {\n            this.storeMemory(x, y);\n        }\n        else {\n            this.makeVisible(x, y);\n        }\n    }\n    // Animator\n    addAnimation(a) {\n        this._animations.push(a);\n    }\n    removeAnimation(a) {\n        GWU.arrayDelete(this._animations, a);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Entity as ObjectFlags } from '../flags/entity';\nimport * as Flags from '../flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = GWU.grid.alloc(map.width, map.height);\n    const grid = GWU.grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~Flags.Cell.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & Flags.Cell.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    const newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    Flags.Cell.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & Flags.Cell.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & Flags.Cell.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + GWU.xy.DIRS[dir][0];\n                        const newY = j + GWU.xy.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                Flags.Cell.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount =\n                                                cellCount;\n                                            map.cell(i2, j2).flags.cell &=\n                                                ~Flags.Cell.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= Flags.Cell.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GWU.grid.free(passMap);\n    GWU.grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    function getCount(x, y) {\n        let count = passMap[x][y] == 2 ? 5000 : 1;\n        if (map.cell(x, y).flags.cell & Flags.Cell.IS_IN_AREA_MACHINE) {\n            count = 10000;\n        }\n        return count;\n    }\n    let count = 0;\n    const todo = [[startX, startY]];\n    const free = [];\n    while (todo.length) {\n        const item = todo.pop();\n        free.push(item);\n        const x = item[0];\n        const y = item[1];\n        if (results[x][y])\n            continue;\n        results[x][y] = 1;\n        count += getCount(x, y);\n        for (let dir = 0; dir < 4; dir++) {\n            const newX = x + GWU.xy.DIRS[dir][0];\n            const newY = y + GWU.xy.DIRS[dir][1];\n            if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                passMap[newX][newY] &&\n                !results[newX][newY]) {\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    checkLoopiness(map);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    const todo = GWU.grid.alloc(map.width, map.height, 1);\n    let tryAgain = true;\n    while (tryAgain) {\n        tryAgain = false;\n        todo.forEach((v, x, y) => {\n            if (!v)\n                return;\n            const cell = map.cell(x, y);\n            todo[x][y] = 0;\n            if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                return;\n            }\n            // find an unloopy neighbor to start on\n            for (sdir = 0; sdir < 8; sdir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[sdir][0];\n                newY = y + GWU.xy.CLOCK_DIRS[sdir][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const cell = map.cell(newX, newY);\n                if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    break;\n                }\n            }\n            if (sdir == 8) {\n                // no unloopy neighbors\n                return; // leave cell loopy\n            }\n            // starting on this unloopy neighbor,\n            // work clockwise and count up:\n            // (a) the number of strings of loopy neighbors, and\n            // (b) the length of the longest such string.\n            numStrings = maxStringLength = currentStringLength = 0;\n            inString = false;\n            for (dir = sdir; dir < sdir + 8; dir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[dir % 8][0];\n                newY = y + GWU.xy.CLOCK_DIRS[dir % 8][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const newCell = map.cell(newX, newY);\n                if (newCell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    currentStringLength++;\n                    if (!inString) {\n                        numStrings++;\n                        inString = true;\n                        if (numStrings > 1) {\n                            break; // more than one string here; leave loopy\n                        }\n                    }\n                }\n                else if (inString) {\n                    if (currentStringLength > maxStringLength) {\n                        maxStringLength = currentStringLength;\n                    }\n                    currentStringLength = 0;\n                    inString = false;\n                }\n            }\n            if (inString && currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            if (numStrings == 1 && maxStringLength <= 4) {\n                cell.clearCellFlag(Flags.Cell.IS_IN_LOOP);\n                // console.log(x, y, numStrings, maxStringLength);\n                // map.dump((c) =>\n                //     c.hasCellFlag(Flags.Cell.IS_IN_LOOP) ? '*' : ' '\n                // );\n                for (dir = 0; dir < 8; dir++) {\n                    newX = x + GWU.xy.CLOCK_DIRS[dir][0];\n                    newY = y + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) &&\n                        map.cell(newX, newY).hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                        todo[newX][newY] = 1;\n                        tryAgain = true;\n                    }\n                }\n            }\n        });\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & Flags.Cell.IS_IN_LOOP &&\n                    left.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = GWU.grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    let newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            Flags.Cell.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    GWU.grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n","import * as GWU from 'gw-utils';\nimport { Map } from './map';\nexport class Snapshot {\n    constructor(map) {\n        this.map = new Map(map.width, map.height);\n        this.version = 0;\n    }\n}\nexport class SnapshotManager {\n    constructor(map) {\n        this.version = 0;\n        this.layerVersion = [];\n        this.lightVersion = 0;\n        // fovVersion = 0;\n        this.free = [];\n        this.map = map;\n        this.cellVersion = GWU.grid.make(map.width, map.height);\n        this.layerVersion = map.layers.map(() => 1);\n    }\n    takeNew() {\n        ++this.version;\n        const snap = this.free.length\n            ? this.free.pop()\n            : new Snapshot(this.map);\n        snap.map.flags.map = this.map.flags.map;\n        this.cellVersion.update((v, x, y) => {\n            const srcCell = this.map.cell(x, y);\n            if (srcCell.changed) {\n                v = this.version;\n            }\n            if (v !== snap.version) {\n                const destCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n            }\n            return v;\n        });\n        // systems\n        if (this.map.light.changed) {\n            this.lightVersion = this.version;\n            this.map.light.changed = false;\n        }\n        if (snap.version !== this.lightVersion) {\n            snap.map.light.copy(this.map.light);\n        }\n        // if (this.map.fov.changed) {\n        //     this.fovVersion = this.version;\n        //     this.map.fov.changed = false;\n        // }\n        // if (snap.version !== this.fovVersion) {\n        //     snap.map.fov.copy(this.map.fov);\n        // }\n        // layers\n        this.map.layers.forEach((layer, index) => {\n            const snapLayer = snap.map.layers[index];\n            if (layer.changed) {\n                this.layerVersion[index] = this.version;\n            }\n            if (this.layerVersion[index] !== snap.version) {\n                snapLayer.copy(layer);\n            }\n        });\n        snap.version = this.version;\n        return snap;\n    }\n    revertMapTo(snap) {\n        this.cellVersion.update((v, x, y) => {\n            if (v < snap.version)\n                return v;\n            const destCell = this.map.cell(x, y);\n            if (v > snap.version || destCell.changed) {\n                const srcCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n                return snap.version;\n            }\n            return v;\n        });\n        // systems\n        if (snap.version < this.lightVersion || this.map.light.changed) {\n            this.map.light.copy(snap.map.light);\n            this.lightVersion = snap.version;\n        }\n        // if (snap.version < this.fovVersion || this.map.fov.changed) {\n        //     this.map.fov.copy(snap.map.fov);\n        //     this.fovVersion = snap.version;\n        // }\n        // layers\n        this.layerVersion.forEach((v, index) => {\n            if (v < snap.version)\n                return;\n            const destLayer = this.map.layers[index];\n            if (v > snap.version || destLayer.changed) {\n                const srcLayer = snap.map.layers[index];\n                destLayer.copy(srcLayer);\n                this.layerVersion[index] = snap.version;\n            }\n        });\n        this.version = snap.version;\n    }\n    release(snap) {\n        this.free.push(snap);\n    }\n}\n","import * as GWU from 'gw-utils';\nexport function isHallway(map, x, y) {\n    return (GWU.xy.arcCount(x, y, (i, j) => {\n        return map.cell(i, j).isPassable();\n    }) > 1);\n}\n","import { Map } from './map';\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile === undefined) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === undefined) {\n        opts.boundary = 'WALL';\n    }\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n        map.light.update();\n    }\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    // // In case we reveal the map or make it all visible we need our memory set correctly\n    // map.cells.forEach((_c, x, y) => {\n    //     if (map.fov.isRevealed(x, y)) {\n    //         map.storeMemory(x, y, true); // with snapshot\n    //     }\n    // });\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n","import * as GWU from 'gw-utils';\nimport { Horde as Flags } from '../flags/horde';\nimport * as Map from '../map';\nimport * as Actor from '../actor';\nexport class Horde {\n    // requiredTile: string | null = null;\n    constructor(config) {\n        this.tags = [];\n        this.members = {};\n        // blueprintId: string | null = null;\n        this.flags = { horde: 0 };\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        this.leader = config.leader;\n        if (config.members) {\n            Object.entries(config.members).forEach(([id, range]) => {\n                this.members[id] = GWU.range.make(range);\n            });\n        }\n        this.frequency = GWU.frequency.make(config.frequency || 100);\n        // this.blueprintId = config.blueprintId || null;\n        this.flags.horde = GWU.flag.from(Flags, config.flags);\n        // if (config.requiredTile) this.requiredTile = config.requiredTile;\n    }\n    spawn(map, x = -1, y = -1, opts = {}) {\n        var _a;\n        opts.canSpawn = opts.canSpawn || GWU.TRUE;\n        opts.rng = opts.rng || map.rng;\n        opts.machine = (_a = opts.machine) !== null && _a !== void 0 ? _a : 0;\n        const leader = this._spawnLeader(map, x, y, opts);\n        if (!leader)\n            return null;\n        this._spawnMembers(leader, map, opts);\n        return leader;\n    }\n    _spawnLeader(map, x, y, opts) {\n        const leaderKind = Actor.get(this.leader);\n        if (!leaderKind) {\n            throw new Error('Failed to find leader kind = ' + this.leader);\n        }\n        if (x >= 0 && y >= 0) {\n            if (leaderKind.avoidsCell(map.cell(x, y)))\n                return null;\n        }\n        const leader = Actor.make(leaderKind, { machineHome: opts.machine });\n        if (!leader)\n            throw new Error('Failed to make horde leader - ' + this.leader);\n        if (x < 0 || y < 0) {\n            [x, y] = this._pickLeaderLoc(leader, map, opts) || [-1, -1];\n            if (x < 0 || y < 0) {\n                return null;\n            }\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addLeader(leader, map, x, y, opts)) {\n            return null;\n        }\n        return leader;\n    }\n    _addLeader(leader, map, x, y, _opts) {\n        return map.addActor(x, y, leader);\n    }\n    _addMember(member, map, x, y, leader, _opts) {\n        member.leader = leader;\n        return map.addActor(x, y, member);\n    }\n    _spawnMembers(leader, map, opts) {\n        const entries = Object.entries(this.members);\n        if (entries.length == 0)\n            return 0;\n        let count = 0;\n        entries.forEach(([kindId, countRange]) => {\n            const count = countRange.value(opts.rng);\n            for (let i = 0; i < count; ++i) {\n                this._spawnMember(kindId, map, leader, opts);\n            }\n        });\n        return count;\n    }\n    _spawnMember(kindId, map, leader, opts) {\n        const kind = Actor.get(kindId);\n        if (!kind) {\n            throw new Error('Failed to find member kind = ' + kindId);\n        }\n        const member = Actor.make(kind, { machineHome: opts.machine });\n        if (!member)\n            throw new Error('Failed to make horde member - ' + kindId);\n        const [x, y] = this._pickMemberLoc(member, map, leader, opts) || [\n            -1, -1,\n        ];\n        if (x < 0 || y < 0) {\n            return null;\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addMember(member, map, x, y, leader, opts)) {\n            return null;\n        }\n        return member;\n    }\n    _pickLeaderLoc(leader, map, opts) {\n        let loc = opts.rng.matchingLoc(map.width, map.height, (x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            if (!opts.canSpawn(x, y))\n                return false;\n            if (leader.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n    _pickMemberLoc(actor, map, leader, opts) {\n        let loc = opts.rng.matchingLocNear(leader.x, leader.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            // if (map.fov.isAnyKindOfVisible(x, y)) return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Horde } from './horde';\nimport { Horde as Flags } from '../flags/horde';\nexport const hordes = {};\nexport function install(id, horde) {\n    if (typeof horde === 'string') {\n        horde = { leader: horde };\n    }\n    if (!(horde instanceof Horde)) {\n        horde = new Horde(horde);\n    }\n    hordes[id] = horde;\n    return horde;\n}\nexport function installAll(hordes) {\n    Object.entries(hordes).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function from(id) {\n    if (id instanceof Horde) {\n        return id;\n    }\n    if (typeof id === 'string') {\n        return hordes[id];\n    }\n    return new Horde(id);\n}\nexport function random(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n        flags: 0,\n        forbidFlags: 0,\n        depth: 0,\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    const rng = opts.rng || GWU.rng.random;\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    if (opts.flags) {\n        if (typeof opts.flags === 'string') {\n            opts.flags\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .forEach((flag) => {\n                if (flag.startsWith('!')) {\n                    const key = flag.substring(1);\n                    match.forbidFlags |= Flags[key];\n                }\n                else {\n                    match.flags |= Flags[flag];\n                }\n            });\n        }\n    }\n    if (opts.forbidFlags) {\n        match.forbidFlags = GWU.flag.from(Flags, opts.forbidFlags);\n    }\n    if (opts.depth) {\n        match.depth = opts.depth;\n    }\n    if (match.depth && opts.oodChance) {\n        while (rng.chance(opts.oodChance)) {\n            match.depth += 1;\n        }\n        match.forbidFlags |= Flags.HORDE_NEVER_OOD;\n    }\n    const matches = Object.values(hordes).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        if (match.flags && !(k.flags.horde & match.flags)) {\n            return false;\n        }\n        if (match.forbidFlags && k.flags.horde & match.forbidFlags) {\n            return false;\n        }\n        return true;\n    });\n    if (match.depth) {\n        return rng.item(matches) || null;\n    }\n    const depth = match.depth;\n    const weights = matches.map((h) => h.frequency(depth));\n    const index = rng.weighted(weights);\n    if (index < 0)\n        return null;\n    return matches[index];\n}\n","export const actions = {};\nexport function installCommand(name, fn) {\n    actions[name] = fn;\n}\nexport function getCommand(name) {\n    return actions[name];\n}\n","import { installCommand } from './command';\nimport * as Actor from '../actor';\n// COMMANDS\n// this === GAME\nexport async function moveDir(actor, e) {\n    const dir = e.dir;\n    if (!actor.map || !dir)\n        return -1;\n    return Actor.actions.moveDir(this, actor, e);\n}\ninstallCommand('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installCommand } from './command';\nexport async function pickup(actor, _ev) {\n    if (!actor.map)\n        return -1;\n    const playerAction = actor.getAction('pickup');\n    if (!playerAction) {\n        GWU.message.addAt(actor.x, actor.y, 'You cannot pickup items.');\n        return actor.endTurn();\n    }\n    else {\n        // You have to do everything\n        const result = await playerAction(this, actor);\n        if (result)\n            return result; // handled\n    }\n    // Should never get here, but...\n    const standStill = actor.getAction('standStill');\n    if (!standStill)\n        throw new Error('Actor cannot stand still.');\n    return standStill(this, actor);\n}\ninstallCommand('pickup', pickup);\n","// export * from './memory';\n// export * from './system';\nexport const empty = {};\n","/*\n    Attributes\n    ========================\n\n    To configure attributes, set the defaults:\n\n    Attribute.install(')\n\n    const attr = new Attributes(10);\n\n    attr.set('str', 10);\n    attr.set('dex', 10);\n    ...\n    attr.set('chr', 10);\n\n    // to get the current value\n    attr.get('str');\n\n    // To raise an attribute permanently\n    attr.gain('chr', 1);\n\n    // To raise an attribute temporarily\n    attr.gain('chr', 1, false);\n\n    // To lower an attribute permanently\n    attr.drain('chr', 1, true);\n\n    // to lower an attribute temporarily\n    attr.drain('chr', 1);\n\n    // to restore (remove) all temporary changes\n    attr.restore();\n\n    // to add a temporary change that can be removed by itself\n    attr.addBonus('str', 1);\n\n    // to remove the bonus\n    attr.clearBonus('str', 1);\n\n    // adjustments (bonuses) are also possible via:\n    attr.adjust('str', { bonus: 1 });\n\n    // But adjustments can also set the\n    attr.adjust('str', { fixed: 14 });      // temporarily sets base\n    attr.adjust('str', { base: 21 });       // resets the base\n    attr.adjust('str', { restore: true });  // removes all bonuses/penalties\n    attr.adjust('str', { min: 10 });        // limits value\n    attr.adjust('str', { max: 30 });        // limits value\n    attr.adjust('str', { sustain: true });  // turns off lowering values\n*/\nexport class Attributes {\n    constructor(baseValues) {\n        this._base = {};\n        this._max = {};\n        this._bonus = {};\n        this._sustain = {};\n        this._value = {};\n        this.changed = null;\n        this.init(baseValues);\n    }\n    init(baseValues) {\n        for (let k in attributes) {\n            const v = typeof baseValues === 'number' ? baseValues : attributes[k];\n            this.set(k, v);\n        }\n        if (typeof baseValues !== 'number') {\n            for (let k in baseValues) {\n                this.set(k, baseValues[k]);\n            }\n        }\n    }\n    forEach(fn) {\n        Object.keys(attributes).forEach((k) => fn(this.get(k)));\n    }\n    // modifier(name: string) {\n    //     return Math.floor((this.get(name) - 10) / 2);\n    // }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    set(name, value = 0) {\n        this._value[name] = value;\n        this._base[name] = value;\n        this._max[name] = value;\n        this._bonus[name] = [];\n        return value;\n    }\n    base(name) {\n        return this._base[name] || 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    sustain(name) {\n        return this._sustain[name] || false;\n    }\n    gain(name, delta, raiseMax = true) {\n        if (delta < 0 && this._sustain[name])\n            return 0;\n        this._base[name] += delta;\n        if (raiseMax && this._base[name] > this._max[name]) {\n            this._max[name] = this._base[name];\n        }\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    drain(name, loss, lowerMax = false) {\n        if (loss < 0)\n            loss = -loss;\n        const changed = this.gain(name, -loss, false);\n        if (changed && lowerMax) {\n            this._max[name] = this._base[name];\n        }\n        return changed;\n    }\n    restore(name) {\n        this._base[name] = this._max[name];\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    addBonus(name, bonus) {\n        return this._addBonus(name, { bonus });\n    }\n    _addBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        if (this._value[name] === undefined) {\n            this.set(name, 0);\n        }\n        this._bonus[name].push(bonus);\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    clearBonus(name, bonus) {\n        return this._clearBonus(name, { bonus });\n    }\n    _clearBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        let arr = this._bonus[name] || [];\n        let key = JSON.stringify(bonus);\n        let index = arr.findIndex((o) => {\n            return JSON.stringify(o) == key;\n        });\n        if (index > -1) {\n            arr.splice(index, 1);\n            let old = this.get(name);\n            return this._calcValue(name) - old;\n        }\n        return 0;\n    }\n    _calcValue(name) {\n        let allAdjustments = {};\n        this._bonus[name].forEach((adj) => this._applyAdjustment(allAdjustments, adj));\n        this._sustain[name] = allAdjustments.sustain || false;\n        let value = this._base[name] || 0;\n        if (allAdjustments.fixed !== undefined) {\n            value = allAdjustments.fixed;\n        }\n        else {\n            value += allAdjustments.bonus || 0;\n            if (allAdjustments.min !== undefined) {\n                value = Math.max(allAdjustments.min, value);\n            }\n            if (allAdjustments.max !== undefined) {\n                value = Math.min(allAdjustments.max, value);\n            }\n        }\n        return (this._value[name] = value);\n    }\n    adjust(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.gain(name, adj.base);\n        }\n        else if (adj.restore) {\n            delta = this.restore(name);\n            if (delta == 0)\n                delta = undefined;\n        }\n        else {\n            delta = this._addBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    clearAdjustment(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.drain(name, adj.base, true);\n        }\n        else if (adj.restore) {\n            // do nothing...\n        }\n        else {\n            delta = this._clearBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    _applyAdjustment(total, opts) {\n        if (opts.bonus) {\n            total.bonus = (total.bonus || 0) + opts.bonus;\n        }\n        if (opts.fixed !== undefined) {\n            total.fixed = Math.max(total.fixed || 0, opts.fixed);\n        }\n        if (opts.min !== undefined) {\n            total.min = Math.max(total.min || 0, opts.min);\n        }\n        if (opts.max !== undefined) {\n            total.max = Math.max(total.max || 0, opts.max);\n        }\n        if (opts.sustain !== undefined) {\n            total.sustain = opts.sustain;\n        }\n    }\n}\nexport const attributes = {};\nexport function installAttribute(attr) {\n    if (typeof attr === 'string') {\n        attributes[attr] = 0;\n        return;\n    }\n    // clear existing\n    Object.keys(attributes).forEach((k) => {\n        delete attributes[k];\n    });\n    Object.assign(attributes, attr);\n}\nexport function makeAttributes(defaults) {\n    return new Attributes(defaults);\n}\n/*\nfunction adjust(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = undefined;\n        if (a.base) {\n            delta = being.attributes.addBase(a.name, a.base);\n        } else if (a.restore) {\n            delta = being.attributes.restoreBase(a.name);\n            if (delta == 0) delta = undefined;\n        } else {\n            delta = being.attributes.addBonus(a.name, a);\n        }\n        if (delta !== undefined) {\n            out[a.name] = delta;\n        }\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n\n    return results;\n};\n\n function clearAdjustment(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = 0;\n        delta += being.attributes.clearBonus(a.name, a);\n\n        out[a.name] = delta;\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n    return results;\n};\n\nRUT.Attribute.rollAttributes = function (opts = {}) {\n    let dice = [];\n    let total = 0;\n\n    if (RUT.Calc.isValue(opts)) opts = { value: opts };\n    Object.defaults(opts, RUT.Config.Attribute.rollAttributes);\n\n    let attributes = RUT.Config.Attributes;\n\n    let min_average = Math.max(opts.min_average - 5, 0);\n    let max_average = Math.min(opts.max_average - 5, RUT.Config.ATTRIBUTE_MAX);\n\n    let min_total = min_average * attributes.length;\n    let max_total = max_average * attributes.length;\n\n    do {\n        total = 0;\n        dice = [];\n        for (let i = 0; i < 18; ++i) {\n            dice.push(RUT.RNG.rollDie(3 + (i % 3)));\n            total += dice[i];\n        }\n    } while (total <= min_total || total > max_total);\n\n    let values = attributes.reduce((out, name, i) => {\n        let index = 3 * i;\n        let value = 5 + dice[index] + dice[index + 1] + dice[index + 2];\n        if (opts.value) {\n            value = RUT.Calc.calc(opts.value);\n        } else if (opts[name]) {\n            value = RUT.Calc.calc(opts[name]);\n        }\n        out[name] = value;\n        return out;\n    }, {});\n    return values;\n};\nRUT.Config.Attribute.rollAttributes = { min_average: 11, max_average: 14 };\n*/\n/*\nexport function normalize_adjustment(args: ) {\n    if (args.length == 3) {\n        let opts = args[2];\n        if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        let name = `${args[0]}.${args[1]}`;\n        return [Object.assign({ name }, opts)];\n    }\n    if (args.length == 2) {\n        let opts = args[1];\n        if (opts === true || opts === false) {\n            opts = { has: opts };\n        } else if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        return [Object.assign({ name: args[0] }, opts)];\n    }\n\n    let opts = args[0];\n    if (opts.name) {\n        return [opts];\n    }\n    if (opts.attribute) {\n        opts.name = opts.attribute;\n        return [opts];\n    }\n    if (opts.restore) {\n        if (opts.restore == 'all') {\n            return RUT.Attributes.map((a) => {\n                return { name: a, restore: true };\n            });\n        }\n        return [{ name: opts.restore, restore: true }];\n    }\n    if (opts.skill) {\n        opts.name = opts.skill;\n        return [opts];\n    }\n    if (opts.stat) {\n        opts.name = opts.stat;\n        return [opts];\n    }\n    if (opts.save) {\n        opts.name = opts.save;\n        return [opts];\n    }\n    // if (opts.saves) {\n    //   opts.name = opts.saves;\n    //   return [opts];\n    // }\n    if (opts.ability) {\n        opts.name = opts.ability;\n        return [opts];\n    }\n\n    // now we assume that each key is for a separate skill...\n    return Object.keys(opts).reduce((out, key) => {\n        let opt = opts[key];\n        if (key == 'reset' || key == 'restore') {\n            if (typeof opt == 'string') opt = [opt];\n            opt.forEach((a) => {\n                out.push({ name: a, restore: true });\n            });\n        } else {\n            if (typeof opt == 'number' || Array.isArray(opt)) {\n                opt = { bonus: opt };\n            } else if (opt === true || opt === false) {\n                opt = { has: opt };\n            } else if (opt == 'reset' || opt == 'restore') {\n                opt = { restore: true };\n            } else if (opt == 'sustain') {\n                opt = { sustain: true };\n            }\n            out.push(Object.assign({ name: key }, opt));\n        }\n        return out;\n    }, []);\n}\n*/\n","/*\nSkills\n\nSkills generally fall into 2 categories - binary and progressive.\n\n\n// Create a skills object\nconst skills = new Skills();\n\n// set skills\nskills.set('diving', true); // = { has: true, level: 0 }\nskills.set('diving', 10); // = { has: true, level: 10 }\n\nskills.remove('diving'); // {}\n\n// adjustments\nskills.adjust('diving', { bonus: 1 });\nskills.adjust('diving', { disadvantage: true });\nskills.adjust('diving', { advantage: 3 });\nskills.adjust('diving', { fixed: 10 });\nskills.adjust('diving', { critical: 5 });\n\n\n\n\n\n*/\nclass Skill {\n    constructor(name) {\n        this.name = name;\n    }\n    get has() {\n        return this._bool('_has');\n    }\n    get level() {\n        return this._int('_level');\n    }\n    get disadvantage() {\n        return this._bool('_disadvantage');\n    }\n    get advantage() {\n        return this._bool('_advantage');\n    }\n    get fixed() {\n        return this._int('_fixed');\n    }\n    get bonus() {\n        const b = this._int('_bonus') || 0;\n        if (!this._parent)\n            return b;\n        return b + this._parent.bonus;\n    }\n    get succeed() {\n        return this._bool('_succeed');\n    }\n    get fail() {\n        return this._bool('_fail');\n    }\n    set(value) {\n        if (value === false) {\n            this._has = false;\n            this._level = 0;\n        }\n        else {\n            this._has = true;\n            this._level = value === true ? 0 : value;\n        }\n    }\n    _value(name) {\n        if (this[name] !== undefined) {\n            // @ts-ignore\n            return this[name];\n        }\n        if (this._parent) {\n            // @ts-ignore\n            return this._parent._value(name);\n        }\n        return undefined;\n    }\n    _bool(name) {\n        return !!this._value(name);\n    }\n    _int(name) {\n        return this._value(name);\n    }\n    adjust(adj) {\n        Object.entries(adj).forEach(([key, value]) => {\n            key = '_' + key;\n            if (value === undefined)\n                return;\n            if (key === '_fixed') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = Math.max(value, this._fixed || 0);\n            }\n            else if (key === '_bonus') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = value + (this._bonus || 0);\n            }\n            // @ts-ignore\n            this[key] = value;\n        });\n    }\n    clear(adj) {\n        Object.keys(adj).forEach((key) => {\n            key = '_' + key;\n            // @ts-ignore\n            if (this[key] !== undefined) {\n                // @ts-ignore\n                this[key] = undefined;\n            }\n        });\n    }\n}\nexport class Skills {\n    constructor(vals = {}) {\n        this._skills = {};\n        Object.entries(vals).forEach(([key, value]) => {\n            this.set(key, value);\n        });\n    }\n    set(name, value) {\n        const s = this.get(name);\n        s.set(value);\n        return s;\n    }\n    get(name) {\n        let s = this._skills[name];\n        if (s)\n            return s;\n        s = this._skills[name] = new Skill(name);\n        const index = name.lastIndexOf('.');\n        if (index > 0) {\n            s._parent = this.get(name.substring(0, index));\n        }\n        else {\n            s.set(false);\n        }\n        return s;\n    }\n    adjust(name, adj) {\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        let s = this.get(name);\n        s.adjust(adj);\n        return s;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Scent {\n    constructor(player) {\n        this._player = player;\n    }\n    get(x, y) {\n        if (!this._data)\n            return 0;\n        return this._data[x][y];\n    }\n    clear() {\n        if (!this._player.map)\n            return;\n        if (this._data)\n            GWU.grid.free(this._data);\n        this._data = GWU.grid.alloc(this._player.map.width, this._player.map.height);\n    }\n    update() {\n        if (!this._player.map)\n            return;\n        const scent = this._player.data.scent || 10;\n        this._data[this._player.x][this._player.y] = scent;\n        const updated = GWU.grid.alloc(this._data.width, this._data.height);\n        const map = this._player.map;\n        this._data.forEach((v, x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.blocksMove())\n                return;\n            let highest = v;\n            GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n                if (!this._data.hasXY(x1, y1))\n                    return;\n                const v1 = this._data[x1][y1];\n                if (v1 > highest) {\n                    highest = v1;\n                }\n            }, true);\n            const delta = cell.hasLiquid() ? 3 : 1;\n            updated[x][y] = Math.max(0, highest - delta);\n        });\n        GWU.grid.free(this._data);\n        this._data = updated;\n    }\n    nextDir(x, y) {\n        const v = this._data[x][y] || 0;\n        if (!v)\n            return null;\n        let highest = v;\n        let highestLoc = [];\n        GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n            if (!this._data.hasXY(x1, y1))\n                return;\n            const v1 = this._data[x1][y1];\n            if (v1 == highest) {\n                highestLoc.push([x1, y1]);\n            }\n            else if (v1 > highest) {\n                highestLoc = [[x1, y1]];\n                highest = v1;\n            }\n        }, false);\n        if (!highestLoc.length)\n            return null;\n        const loc = GWU.random.item(highestLoc);\n        loc[0] = loc[0] - x;\n        loc[1] = loc[1] - y;\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor';\nimport { Scent } from './scent';\nimport * as Flags from '../flags';\nexport class Player extends Actor {\n    constructor(kind) {\n        super(kind);\n        this.scent = new Scent(this);\n    }\n    interrupt(other) {\n        if (this.hasGoal()) {\n            this.clearGoal();\n            GWU.message.addAt(this.x, this.y, '{{you}} {{verb see~}} {{a other}}.', {\n                actor: this,\n                verb: 'see',\n                other,\n            });\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.map) {\n            if (this.map.fov.update()) {\n                this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n            }\n            this.scent.update();\n        }\n        return super.endTurn(pct);\n    }\n    addToMap(map, x, y) {\n        if (!super.addToMap(map, x, y))\n            return false;\n        this.scent.clear();\n        return true;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            let loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            loc = loc || [this.x, this.y];\n            x = loc[0];\n            y = loc[1];\n        }\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    nextGoalStep() {\n        const map = this.map;\n        if (!map)\n            return null;\n        const goalMap = this.goalMap;\n        const step = GWU.path.nextStep(goalMap, this.x, this.y, (x, y) => map.hasActor(x, y) && map.actorAt(x, y) !== this);\n        return step;\n    }\n    pathTo(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (args.length === 1) {\n            x = args[0].x;\n            y = args[0].y;\n        }\n        const map = this.map;\n        if (!map)\n            return null;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            const loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            if (!loc)\n                return null;\n            x = loc[0];\n            y = loc[1];\n        }\n        const path = GWU.path.getPath(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y), true);\n        return path;\n    }\n}\nPlayer.default = {\n    ch: '@',\n    fg: 'white',\n    name: 'You',\n    swim: true,\n};\n","import * as GWU from 'gw-utils';\nimport * as Actor from '../actor';\nimport * as Skills from './skill';\nimport * as Attributes from './attribute';\nimport { Player } from './player';\nimport * as Flags from '../flags';\nexport class PlayerKind extends Actor.ActorKind {\n    constructor(opts = {}) {\n        super((() => {\n            if (!opts.sprite) {\n                opts.ch = opts.ch || Player.default.ch;\n                opts.fg = opts.fg || Player.default.fg;\n            }\n            if (!opts.name) {\n                opts.name = Player.default.name;\n            }\n            if (opts.swim === undefined) {\n                opts.swim = Player.default.swim;\n            }\n            return opts;\n        })());\n        this.flags.actor |= Flags.Actor.IS_PLAYER;\n        this.flags.entity |= Flags.Entity.L_ALWAYS_PLURAL;\n        this.attributes = new Attributes.Attributes(opts.attributes || {});\n        this.skills = new Skills.Skills(opts.skills || {});\n    }\n    make(options) {\n        const actor = new Player(this);\n        this.init(actor, options);\n        return actor;\n    }\n    cellCost(cell, player) {\n        const map = cell.map;\n        if (!map.fov.isRevealed(cell.x, cell.y))\n            return GWU.path.FORBIDDEN;\n        return super.cellCost(cell, player);\n    }\n}\n","import { PlayerKind } from './kind';\nimport * as Actor from '../actor';\nexport function make(id, makeOptions) {\n    let kind;\n    if (typeof id === 'string') {\n        // @ts-ignore\n        kind = Actor.get(id);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + id);\n        if (!(kind instanceof PlayerKind))\n            throw new Error('Not a player kind.');\n    }\n    else if (id instanceof PlayerKind) {\n        kind = id;\n    }\n    else {\n        kind = makeKind(id);\n    }\n    return kind.make(makeOptions);\n}\nexport function install(id, kind) {\n    if (kind instanceof PlayerKind) {\n        Actor.kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    Actor.kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof PlayerKind)\n        return id;\n    const k = Actor.kinds[id];\n    if (k && !(k instanceof PlayerKind)) {\n        throw new Error('No a player kind.');\n    }\n    return k;\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new PlayerKind(config);\n}\n","import * as GWU from 'gw-utils';\nimport { Player } from '../player/player';\nimport * as Flags from '../flags';\nexport class Viewport {\n    constructor(opts) {\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n        this.player = null;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        this.lockX = opts.lock || opts.lockX || false;\n        this.lockY = opts.lock || opts.lockY || false;\n        this.scent = opts.scent || false;\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n        if (subject && subject instanceof Player) {\n            this.player = subject;\n        }\n        else {\n            this.player = null;\n        }\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map || !map.needsRedraw)\n            return false;\n        const fov = map.fov;\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const drawer = map.drawer;\n        drawer.scent = this.scent;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, map, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n    tick(_dt) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map)\n            return false;\n        if (!map.hasMapFlag(Flags.Map.MAP_DANCES) || !GWU.cosmetic.chance(10)) {\n            return false;\n        }\n        map.eachCell((c) => {\n            if (c.hasCellFlag(Flags.Cell.COLORS_DANCE) &&\n                map.fov.isAnyKindOfVisible(c.x, c.y) &&\n                GWU.cosmetic.chance(2)) {\n                c.needsRedraw = true;\n            }\n        });\n        map.needsRedraw = true;\n        return true;\n    }\n    mousemove(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        return this.showPath(this.toInnerX(ev.x), this.toInnerY(ev.y));\n    }\n    click(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.player)\n            return false;\n        if (this.player.hasGoal()) {\n            this.player.clearGoal();\n        }\n        else {\n            this.player.setGoal(this.toInnerX(ev.x), this.toInnerY(ev.y));\n        }\n        return true;\n    }\n    showPath(x, y) {\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        // if (!this.player.hasGoal()) return false;\n        // console.log('mouse', ev.x, ev.y);\n        const path = this.player.pathTo(x, y);\n        if (path) {\n            map.highlightPath(path, true);\n        }\n        else {\n            map.clearPath();\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Messages {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n        this.fg = GWU.color.from(opts.fg || 'purple');\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.archive || 40,\n            match: () => {\n                this.needsDraw = true;\n            },\n        });\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    clear() {\n        this.cache.clear();\n        this.needsDraw = true;\n    }\n    click(e, game) {\n        if (!this.bounds.contains(e))\n            return false;\n        return this.showArchive(game);\n    }\n    confirmAll() {\n        this.cache.confirmAll();\n        this.needsDraw = true;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed && this.bg) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    showArchive(game) {\n        if (this.cache.length <= this.bounds.height)\n            return false;\n        return showArchive(this, game).then(() => this.confirmAll());\n    }\n}\nexport class MessageArchive extends GWU.widget.Widget {\n    constructor(layer, source) {\n        super(layer, {\n            id: 'ARCHIVE',\n            tag: 'messages',\n            height: source.bounds.height,\n            width: source.bounds.width,\n            bg: source.bg,\n            x: 0,\n            y: 0,\n            tabStop: true,\n            depth: 100, // I'm on top\n        });\n        this.mode = 'forward';\n        this._timeout = null;\n        this.source = source;\n        this.isOnTop = this.source.bounds.y < 10;\n        this.bounds.height = this.isOnTop\n            ? layer.height - source.bounds.y\n            : source.bounds.bottom;\n        this.totalCount = Math.min(source.cache.length, this.isOnTop\n            ? layer.height - this.source.bounds.top\n            : this.source.bounds.bottom);\n        this.shown = source.bounds.height;\n        this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        // confirm them as they are right now...\n        this.source.cache.confirmAll();\n    }\n    contains() {\n        return true; // Eat all mouse activity\n    }\n    finish() {\n        this.layer.finish();\n    }\n    keypress(e) {\n        return this.click(e);\n    }\n    click(_e) {\n        if (this.mode === 'ack') {\n            this.mode = 'reverse';\n            this.layer.needsDraw = true;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n            }\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        else if (this.mode === 'reverse') {\n            this.finish();\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n                this._timeout = null;\n            }\n            this.layer.needsDraw = true;\n        }\n        return true;\n    }\n    _forward() {\n        // console.log('forward');\n        ++this.shown;\n        this._timeout = null;\n        this.layer.needsDraw = true;\n        if (this.shown < this.totalCount) {\n            this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n        }\n        return true;\n    }\n    _reverse() {\n        // console.log('reverse');\n        --this.shown;\n        this._timeout = null;\n        if (this.shown <= this.source.bounds.height) {\n            this.finish();\n        }\n        else {\n            this.layer.needsDraw = true;\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        return true;\n    }\n    _draw(buffer) {\n        let fadePercent = 0;\n        // let reverse = this.mode === 'reverse';\n        // Count the number of lines in the archive.\n        // let totalMessageCount = this.totalCount;\n        const isOnTop = this.isOnTop;\n        const dbuf = buffer;\n        const fg = GWU.color.from(this.source.fg);\n        // const dM = reverse ? -1 : 1;\n        // const startM = reverse ? totalMessageCount : this.bounds.height;\n        // const endM = reverse\n        //     ? this.bounds.height + dM + 1\n        //     : totalMessageCount + dM;\n        const startY = isOnTop\n            ? this.shown - 1\n            : this.bounds.bottom - this.shown;\n        const endY = isOnTop ? 0 : this.bounds.bottom - 1;\n        const dy = isOnTop ? -1 : 1;\n        dbuf.fillRect(this.source.bounds.x, Math.min(startY, endY), this.bounds.width, this.shown, ' ', this._used.bg, this._used.bg);\n        this.source.cache.forEach((line, _confirmed, j) => {\n            const y = startY + j * dy;\n            if (isOnTop) {\n                if (y < endY)\n                    return;\n            }\n            else if (y > endY)\n                return;\n            fadePercent = Math.floor((50 * j) / this.shown);\n            const fgColor = fg.mix(this._used.bg, fadePercent);\n            dbuf.drawText(this.source.bounds.x, y, line, fgColor, this._used.bg);\n        });\n        if (this.mode === 'ack') {\n            const y = this.isOnTop ? 0 : dbuf.height - 1;\n            const x = this.source.bounds.x > 8\n                ? this.source.bounds.x - 8 // to left of box\n                : Math.min(this.source.bounds.x + this.bounds.width, // just to right of box\n                dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                );\n            dbuf.wrapText(x, y, 8, '--DONE--', this._used.bg, this._used.fg);\n        }\n        return true;\n    }\n}\nexport async function showArchive(widget, game) {\n    const layer = new GWU.widget.WidgetLayer(game.ui);\n    // @ts-ignore\n    const w = new MessageArchive(layer, widget);\n    await layer.run();\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as Tile from '../tile/tile';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.text = '';\n        this.fg = GWU.color.from(opts.fg || 'white');\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.promptFg = GWU.color.from(opts.promptFg || 'gold');\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = text;\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    clear() {\n        this.text = '';\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    showPrompt(text) {\n        this.text = text;\n        this.isPrompt = true;\n        this.needsDraw = true;\n        return this;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'You see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'You sense';\n        }\n        else if (isRemembered) {\n            intro = 'You remember seeing';\n        }\n        else if (isMapped) {\n            intro = 'You expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(Flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(Flags.Depth.GROUND) || Tile.NULL;\n        const surfaceTile = cell.depthTile(Flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(Flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(Flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('{{intro}} {{text}}.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, ' ', this.bg, this.bg);\n        buffer.drawText(this.bounds.x, this.bounds.y, this.text, this.fg, this.bg, this.bounds.width, 'left');\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Command from '../command';\nimport * as Actor from '../actor';\nimport * as Viewport from './viewport';\nimport * as Message from './message';\nimport * as Flavor from './flavor';\nexport class Game {\n    constructor(opts) {\n        this.result = undefined;\n        this.mouse = false;\n        this.fov = false;\n        this.scent = false;\n        this.running = false;\n        this.keymap = {};\n        this.ui = opts.ui || new GWU.ui.UI(opts);\n        this._makeMap = opts.makeMap;\n        this._makePlayer = opts.makePlayer;\n        this._startMap = opts.startMap;\n        if (opts.keymap) {\n            Object.assign(this.keymap, opts.keymap);\n        }\n        if (opts.mouse) {\n            this.mouse = true;\n        }\n        if (typeof opts.messages === 'number') {\n            opts.messages = { size: opts.messages };\n        }\n        if (opts.flavor === true) {\n            opts.flavor = {};\n        }\n        else if (opts.flavor === false) {\n            delete opts.flavor;\n        }\n        opts.viewport = opts.viewport || {};\n        const _opts = opts;\n        _opts.viewport.x = 0;\n        _opts.viewport.y = 0;\n        _opts.viewport.width = this.ui.width;\n        _opts.viewport.height = this.ui.height;\n        this._initMenu(_opts);\n        this._initSidebar(_opts);\n        if (opts.messages !== undefined)\n            this._initMessages(_opts);\n        if (opts.flavor !== undefined)\n            this._initFlavor(_opts);\n        this._initViewport(_opts);\n    }\n    get width() {\n        return this.viewport.bounds.width;\n    }\n    get height() {\n        return this.viewport.bounds.height;\n    }\n    _initMenu(_opts) { }\n    _initSidebar(_opts) { }\n    _initMessages(opts) {\n        const messOpts = opts.messages || {};\n        messOpts.size = messOpts.size || messOpts.y || 4;\n        if (messOpts.size < 0) {\n            // bottom\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = this.ui.height + messOpts.size; // length < 0\n            messOpts.width = viewInit.width;\n            messOpts.height = -messOpts.size;\n            opts.viewport.height -= messOpts.height;\n        }\n        else {\n            // top\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = viewInit.y;\n            messOpts.width = viewInit.width;\n            messOpts.height = messOpts.size;\n            viewInit.y += messOpts.size;\n            viewInit.height -= messOpts.size;\n        }\n        this.messages = new Message.Messages(messOpts);\n    }\n    _initFlavor(opts) {\n        const flavOpts = opts.flavor || {};\n        const viewOpts = opts.viewport;\n        if (viewOpts.y === 0) {\n            // messages must be on bottom (or not there)\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.height - 1;\n            flavOpts.width = viewOpts.width;\n            viewOpts.height -= 1;\n        }\n        else {\n            // messages on top\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.y;\n            flavOpts.width = viewOpts.width;\n            viewOpts.y += 1;\n            viewOpts.height -= 1;\n        }\n        this.flavor = new Flavor.Flavor(flavOpts);\n    }\n    _initViewport(opts) {\n        const viewOpts = opts.viewport || {};\n        const viewInit = viewOpts;\n        viewInit.lock = true;\n        this.viewport = new Viewport.Viewport(viewInit);\n    }\n    async start() {\n        this.layer = new GWU.ui.Layer(this.ui);\n        this.buffer = this.layer.buffer;\n        this.io = this.layer.io;\n        this.running = true;\n        this.scheduler = new GWU.scheduler.Scheduler();\n        if (this.messages)\n            this.messages.clear();\n        this.map = this._makeMap.call(this, 0);\n        this.player = this._makePlayer.call(this);\n        this.map.setPlayer(this.player);\n        this.viewport.subject = this.player;\n        this._startMap.call(this, this.map, this.player);\n        if (this.scent) {\n            this.map.drawer.scent = this.scent;\n        }\n        this.map.actors.forEach((a) => {\n            this.scheduler.push(a, a.moveSpeed());\n        });\n        this.map.fov.update();\n        this.draw();\n        while (this.running) {\n            await this.animate();\n            await this.runTurn();\n        }\n        return this.result;\n    }\n    draw() {\n        this.viewport.draw(this.buffer);\n        if (this.messages)\n            this.messages.draw(this.buffer);\n        if (this.flavor)\n            this.flavor.draw(this.buffer);\n        if (this.buffer.changed) {\n            this.buffer.render();\n        }\n        this.buffer.changed = false;\n    }\n    finish(result) {\n        this.running = false;\n        this.layer.finish();\n        this.result = result;\n    }\n    async runTurn() {\n        const actor = this.scheduler.pop();\n        if (!actor) {\n            this.finish();\n            return;\n        }\n        let nextTime = 0;\n        while (nextTime === 0) {\n            if (actor === this.player) {\n                nextTime = await this.playerTurn(actor);\n            }\n            else if ('act' in actor) {\n                nextTime = await actor.act(this);\n            }\n            else if ('tick' in actor) {\n                nextTime = await actor.tick(); // dt === 100 -- TODO\n            }\n            this.draw();\n        }\n        if (nextTime >= 0) {\n            this.scheduler.push(actor, nextTime);\n        }\n    }\n    async animate() {\n        if (!this.layer.io._tweens.length)\n            return;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            this.layer.io.enqueue(tick);\n        }, 16);\n        while (this.layer.io._tweens.length) {\n            const ev = await this.layer.io.nextTick();\n            if (ev && ev.dt) {\n                this.layer.io._tweens.forEach((a) => a && a.tick(ev.dt));\n                this.layer.io._tweens = this.layer.io._tweens.filter((a) => a && a.isRunning());\n            }\n            this.draw();\n        }\n        clearInterval(timer);\n    }\n    async playerTurn(player) {\n        let done = 0;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            // console.log('-tick', Date.now());\n            this.layer.io.enqueue(tick);\n        }, 16);\n        let elapsed = 0;\n        while (!done && this.running) {\n            const ev = await this.layer.io.nextEvent(-1);\n            if (ev) {\n                if (ev.type === GWU.io.KEYPRESS) {\n                    this.map.clearPath();\n                    if (this.player.hasGoal()) {\n                        this.player.clearGoal();\n                    }\n                    else {\n                        const handler = GWU.io.handlerFor(ev, this.keymap);\n                        if (handler) {\n                            if (typeof handler === 'string') {\n                                const action = Command.getCommand(handler);\n                                if (action) {\n                                    done = await action.call(this, player, ev);\n                                }\n                            }\n                            else if (typeof handler === 'function') {\n                                done = await handler.call(this, player, ev);\n                            }\n                        }\n                    }\n                }\n                else if (ev.type === GWU.io.TICK) {\n                    this.layer.tick(ev); // timeouts\n                    elapsed += ev.dt || 16;\n                    if (this.viewport.tick(ev.dt)) {\n                        this.draw();\n                    }\n                    // console.log('-- event', elapsed);\n                }\n                else if (this.mouse && ev.type === GWU.io.MOUSEMOVE) {\n                    if (this.viewport.mousemove(ev)) {\n                        if (this.flavor) {\n                            const x = this.viewport.toInnerX(ev.x);\n                            const y = this.viewport.toInnerY(ev.y);\n                            const text = this.flavor.getFlavorText(this.map, x, y, this.map.fov);\n                            this.flavor.showText(text);\n                        }\n                        this.draw();\n                    }\n                }\n                else if (this.mouse && ev.type === GWU.io.CLICK) {\n                    // console.log('click', ev.x, ev.y);\n                    if (this.viewport.contains(ev)) {\n                        this.viewport.click(ev);\n                    }\n                    else if (this.messages && this.messages.contains(ev)) {\n                        await this.messages.showArchive(this);\n                    }\n                }\n            }\n            if (elapsed < 50) {\n                continue;\n            }\n            elapsed -= 50;\n            if (this.player.hasGoal()) {\n                const step = this.player.nextGoalStep();\n                if (!step) {\n                    this.player.clearGoal();\n                }\n                else {\n                    const action = Actor.getAction('moveDir');\n                    if (!action)\n                        throw new Error('Failed to find moveDir action.');\n                    done = await action(this, this.player, { dir: step });\n                    if (done && this.player.hasGoal()) {\n                        const goalMap = this.player.goalMap;\n                        this.viewport.showPath(goalMap.x, goalMap.y);\n                    }\n                }\n            }\n        }\n        clearInterval(timer);\n        return done;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Tile from './tile';\nimport '../effect/handlers';\nimport '../effect/types';\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([30, 30, 30]).rand(20, 0, 0, 0),\n    bg: GWU.color.from([2, 2, 10]).rand(0, 2, 2, 0),\n    priority: 10,\n    article: 'the',\n    flavor: 'the stone floor',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: 'TILE:DOOR_OPEN',\n        open: 'TILE:DOOR_OPEN_ALWAYS',\n    },\n    flavor: 'a closed door',\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            effects: 'TILE:DOOR~!',\n        },\n        enter: null,\n        open: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: 'EMIT:UP_STAIRS',\n    },\n    flavor: 'stairs leading upwards',\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: 'EMIT:DOWN_STAIRS',\n    },\n    flavor: 'downward leading stairs',\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'a very hard wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: GWU.color.from([25, 28, 60]).dance(20, 0, 4, 15),\n    bg: GWU.color.from([10, 15, 41]).dance(20, 5, 5, 5),\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n    flavor: 'some deep water',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([5, 8, 10]).dance(10, 0, 4, 15),\n    bg: GWU.color.from([10, 30, 30]).dance(6, 0, 10, 10),\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    flags: 'T_SHALLOW_WATER',\n    // depth: 'LIQUID', // 'SURFACE'?\n    flavor: 'some shallow water',\n});\nTile.install('BRIDGE', {\n    ch: '\\u2630',\n    fg: [80, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n    flavor: 'a bridge',\n});\n"],"names":["Depth","Fl","GWU","flag","fl","Entity","L_LIST_IN_SIDEBAR","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_WALL_FLAGS","Actor","Item","Tile","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","T_IS_DEEP_LIQUID","T_SHALLOW_WATER","TileMech","Cell","NEEDS_REDRAW","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_SAFE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","Map","Effect","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","Horde","KeyInfo","[object Object]","x","y","disposable","this","lastId","kind","_map","key","machineHome","depth","light","flags","entity","next","id","map","Flags.Entity","L_ALWAYS_PLURAL","setEntityFlag","L_ON_MAP","addToMap","clearEntityFlag","removeFromMap","sprite","isDestroyed","hasEntityFlag","L_DESTROYED","other","constructor","copy","Object","assign","canBeSeen","tag","tags","includes","matches","cell","forbidsCell","avoidsCell","opts","getName","getDescription","getFlavor","verb","getVerb","buffer","bounds","drawStatus","dest","_observer","drawSprite","name","EntityKind","config","requireTileFlags","forbidTileFlags","avoidTileFlags","requireTileTags","forbidTileTags","avoidTileTags","flavor","description","make","split","t","trim","slice","from","Flags.Tile","init","_entity","hasAllTileFlags","hasTileFlag","T_BRIDGE","length","hasAllTileTags","hasAnyTileTag","_opts","mixer","Mixer","getAppearanceAt","wrapText","width","makeOpts","installedActions","installAction","fn","toLowerCase","getAction","Status","_set","_time","_count","_done","_value","changed","clearTime","clearCount","setOff","_update","done","count","Math","max","_addDone","value","range","current","delta","status","cleared","noticed","removeTime","rec","was","doneFn","Stats","_max","_rate","round","get","set","v","amount","allowOver","min","raiseValue","gain","lowerValue","drain","turns","r","elapsed","undefined","type","c","Error","Entity.Entity","super","ai","leader","items","visionDistance","data","_costMap","_goalMap","_mapToMe","actor","Flags.Depth","ACTOR","stats","grid","free","hasActorFlag","Flags.Actor","IS_PLAYER","action","actions","bump","IS_VISIBLE","WAS_VISIBLE","canSee","isAbleToSee","isPlayer","fov","isDirectlyVisible","xy","distanceBetween","forLineBetween","i","j","blocksVision","canSeeOrSense","isAbleToSense","isAnyKindOfVisible","game","startedVisible","player","setActorFlag","console","log","clearActorFlag","becameVisible","interrupt","endTurn","moveSpeed","pct","floor","_other","_item","item","pickupItem","dropItem","mapChanged","STABLE_COST_MAP","staleMap","alloc","height","update","_v","cellCost","goalMap","path","calculateDistances","costMap","handlers","installHandler","handler","effectTypes","installType","startsWith","endPos","indexOf","tile","substring","effects","Array","isArray","effect","entries","forEach","JSON","stringify","typeName","shift","makeFn","e","push","parts","installedEffects","trigger","bind","install","obj","clone","_a","_b","_c","_d","index","dissipate","priority","groundTile","article","tileMech","hasEffect","T_IS_FLAMMABLE","arraysIntersect","every","blocksMove","T_PATHING_BLOCKER","arg","color","result","fg","toString","options","_e","_f","base","extends","tiles","text","replace","search","Number","parseInt","makeEffect","message","Flags.TileMech","ch","bg","opacity","all","args","NULL","BasicEffect","chance","seen","Flags.Effect","endsWith","parseFloat","loc","ctx","force","rng","random","didSomething","eff","nextAlways","E_NEXT_ALWAYS","makeBasicEffect","makeSpreadEffect","SpreadEffect","grow","decrement","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","spawnMap","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","E_NEXT_EVERYWHERE","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","forRect","lakeX","lakeY","isStairs","first","floodFill","cellIsOk","isStart","hasXY","hasCellFlag","Flags.Cell","EVENT_PROTECTED","blocksEffects","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","ok","eachNeighbor","E_NO_TOUCH_WALLS","hasTile","dir","x2","y2","madeChange","startProb","probDec","fill","DIRS","clearAll","clear","clearDepth","GAS","LIQUID","SURFACE","GROUND","blockingMap","eachActor","a","matchingLocNear","removeActor","addActor","eachItem","removeItem","addItem","makeEmitHandler","emitEffect","events","emit","makeMessageHandler","src","info","msg","messageEffect","aware","addAt","makeActivateMachine","activateMachine","machine","machineId","makeTileHandler","superpriority","blockedByActors","blockedByItems","tileEffect","setTile","makeClearHandler","layers","reduce","out","ALL_LAYERS","clearEffect","_ctx","makeFeatureHandler","featureEffect","feat","Effect.installedEffects","makeNourishEffect","nourishEffect","actorAt","adjust","n","default","pukeMsg","makeStatEffect","stat","statEffect","values","NEVER_SEEN","TILE.NULL","chokeCount","memory","TILE.tiles","snapshot","makeMixer","TILE.get","hasStableSnapshot","STABLE_SNAPSHOT","hasStableMemory","setCellFlag","hasItem","hasActor","clearCellFlag","needsRedraw","getSnapshot","checkEntities","some","entityFlags","tileFlags","tileMechFlags","hasTag","hasAllTags","hasAnyTag","withEntities","CHANGED","TILE.Tile","highestPriorityTile","cb","find","blocksPathing","TILE.flags","T_BLOCKS_OTHER_LAYERS","hasAllEntityFlags","T_IS_DOOR","L_BLOCKS_EVERYTHING","L_SECRETLY_PASSABLE","T_ANY_LIQUID","blocksLayer","blockedByOtherLayers","highestPriority","currentGround","depthTile","wantGround","glowLightChanged","setMapFlag","Flags.Map","MAP_SIDEBAR_TILES_CHANGED","CAUGHT_FIRE_THIS_TURN","blackOut","tileFlag","tileMechFlag","hasTileMechFlag","event","ev","_activate","itemAt","hasItems","foundIndex","_actor","actors","HAS_FX","fx","fxAt","_fx","quantity","ITEM","isPlural","messageYou","view","field","messageThe","target","messageA","L_FORMAL_NAME","messageVerb","_name","plural","toPluralVerb","toSingularVerb","addHelper","PainMessages","msgs","_msgs","m","add","singular","clamp","_format","painMessages","ais","AICtx","distanceMap","async","typical","isDead","willAttack","damagePct","getPct","morale","chargeChance","retreatChance","lastSawPlayer","clearGoal","start","canAttack","attack","tooFarFrom","canMoveToward","moveToward","tooCloseTo","canMoveAwayFrom","moveAwayFrom","hasGoal","setGoal","moveTowardGoal","scent","nextDir","moveDir","wanderOpt","object","firstOpt","matchingLoc","NO_PATH","step","nextStep","canPass","wander","idle","standStill","center","_game","_target","distanceFromTo","safetyMap","costGrid","FORBIDDEN","eachCell","AVOIDED","rescan","ActorKind","Entity.EntityKind","DEFAULT","DEFAULT_ACTOR","vision","normal","health","AI.make","waterOnly","lavaOnly","swim","fly","list","remove","OBSTRUCTION","OK","makeOptions","makeKind","kinds","randomKind","match","forbidTags","filter","k","bumpActions","getBumpActions","selfName","selfAction","ctx2","flashSprite","duration","animator","Entity.make","addFx","tween","visible","to","repeat","repeatDelay","onUpdate","removeFx","io","loop","addAnimation","hit","fadeInOut","yoyo","onFinish","moveSprite","source","ceil","maxAxisFromTo","speed","isLoc","vals","stepFn","stopBeforeWalls","moveFx","stop","isInShape","shape","cx","cy","allowCenter","sx","abs","sy","dirFromTo","fade","stopAtWalls","line","forLineFromTo","promises","lastIndex","Promise","radius","checkExplosionOpts","FOV","isBlocked","calculate","x1","y1","minX","minY","maxX","maxY","_obj","success","newX","newY","currentCell","newCell","try","FX.hit","canRemoveActor","canAddActor","moveActor","rate","dirIndex","number","pickup","quiet","avoidsItem","itemAction","canAddItem","pain","made","ItemKind","Flags.Item","isDoor","MapLayer","properties","_x","_y","_tile","_dt","TileLayer","GasLayer","volume","startingVolume","spread","d","clearTile","total","highestVolume","startingTile","highestTile","updateCellVolume","ObjectFlags","TileFlags","TileMechFlags","CellFlags","FireLayer","exposeToFire","alwaysIgnite","ignitionChance","bestExtinguishingPriority","explosiveNeighborCount","fireIgnited","explosivePromotion","eachTile","T_EXTINGUISHES_FIRE","Effect.from","fire","TM_EXPLOSIVE_PROMOTE","x0","y0","fireEvent","highlightColor","BasicDrawer","Buffer","offsetX","offsetY","clearMapFlag","MAP_DANCES","drawCell","needSnapshot","getAppearance","putSnapshot","COLORS_DANCE","applyLight","separate","L_VISUALLY_DISTINCT","IS_CURSOR","invert","mix","IS_HIGHLIGHTED","s","colors","red","ground","surface","liquid","gas","drawInto","cosmetic","hasFx","dances","bake","isVisible","isRevealed","getLight","multiply","isCursor","scale","_animations","EventEmitter","seed","machineCount","drawer","cells","LightSystem","alwaysVisible","callback","onFovChange","FovSystem","initLayers","setPlayer","addLayer","Layer.TileLayer","Layer.FireLayer","Layer.GasLayer","layer","isAt","fireEffects","_addItem","_fireAddItemEffects","_removeItem","_fireRemoveItemEffects","arrayDelete","isKey","hasPlayer","_addActor","_fireAddActorEffects","_removeActor","_fireRemoveActorEffects","_addFx","updated","_removeFx","fmt","dump","hasMapFlag","MAP_NEEDS_REDRAW","markCursor","clearPath","clearCursor","l","boundary","isBoundaryXY","clearTiles","dt","tick","isRunning","fireAll","willFire","EVENT_FIRED_THIS_TURN","promoteChance","w","originX","originY","eachGlowLight","_cb","FovFlags","PLAYER","isDark","storeMemory","clearMemory","makeVisible","updateChokepoints","updateCounts","passMap","passableArcCount","oldX","CLOCK_DIRS","oldY","cellCount","floodFillCount","i2","j2","results","startX","startY","getCount","todo","pop","updateLoopiness","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","tryAgain","fillInnerLoopGrid","up","left","designationSurvives","Snapshot","version","isHallway","arcCount","isPassable","h","updateChokeCounts","layerVersion","lightVersion","cellVersion","snap","srcCell","snapLayer","destCell","destLayer","srcLayer","prefab","charToTile","isStringArray","len","members","horde","frequency","Flags","canSpawn","TRUE","_spawnLeader","_spawnMembers","leaderKind","Actor.get","Actor.make","_pickLeaderLoc","_addLeader","member","kindId","countRange","_spawnMember","_pickMemberLoc","_addMember","Map.isHallway","hordes","forbidFlags","oodChance","HORDE_NEVER_OOD","weights","weighted","installCommand","getCommand","Actor.actions.moveDir","_ev","playerAction","Attributes","baseValues","_base","_bonus","_sustain","attributes","keys","raiseMax","old","_calcValue","loss","lowerMax","bonus","_addBonus","_clearBonus","arr","findIndex","o","splice","allAdjustments","adj","_applyAdjustment","sustain","fixed","restore","Skill","has","_bool","level","_int","disadvantage","advantage","b","_parent","succeed","fail","_has","_level","_fixed","Skills","_skills","lastIndexOf","Scent","_player","_data","highest","v1","hasLiquid","highestLoc","Player","mapToPlayer","mapToMe","getClosestValidLocation","getPath","PlayerKind","Actor.ActorKind","Attributes.Attributes","skills","Skills.Skills","attr","defaults","Actor.kinds","Viewport","_subject","Bounds","lockX","lock","lockY","contains","subject","halfWidth","halfHeight","right","top","bottom","edgeX","edgeY","thirdW","thirdH","blackOutRect","updateOffset","mapX","mapY","draw","showPath","toInnerX","toInnerY","pathTo","highlightPath","Messages","needsDraw","cache","MessageCache","archive","showArchive","confirmAll","isOnTop","fillRect","confirmed","drawText","then","MessageArchive","widget","Widget","tabStop","mode","_timeout","totalCount","shown","setTimeout","_forward","finish","click","clearTimeout","_reverse","fadePercent","dbuf","endY","dy","_used","_confirmed","fgColor","WidgetLayer","ui","run","Flavor","promptFg","overflow","isPrompt","buf","isRemembered","isMapped","isMagicMapped","intro","theItem","standsInTile","T_STAND_IN_TILE","needObjectArticle","Tile.NULL","surfaceTile","liquidTile","apply","mouse","running","keymap","UI","_makeMap","makeMap","_makePlayer","makePlayer","_startMap","startMap","messages","size","viewport","_initMenu","_initSidebar","_initMessages","_initFlavor","_initViewport","messOpts","viewInit","Message.Messages","flavOpts","viewOpts","Flavor.Flavor","Viewport.Viewport","Layer","scheduler","Scheduler","call","animate","runTurn","render","nextTime","playerTurn","act","_tweens","timer","setInterval","makeTickEvent","enqueue","nextTick","clearInterval","nextEvent","KEYPRESS","handlerFor","Command.getCommand","TICK","MOUSEMOVE","mousemove","getFlavorText","showText","CLICK","nextGoalStep","Actor.getAction","rand","enter","open","close","dance"],"mappings":"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"}