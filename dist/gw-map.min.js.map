{"version":3,"file":"gw-map.min.js","sources":["../js/flags/depth.js","../js/flags/entity.js","../js/flags/actor.js","../js/flags/item.js","../js/flags/tile.js","../js/flags/tileMech.js","../js/flags/cell.js","../js/flags/map.js","../js/flags/effect.js","../js/flags/horde.js","../js/entity/key.js","../js/entity/entity.js","../js/entity/kind.js","../js/actor/action.js","../js/actor/status.js","../js/actor/stat.js","../js/actor/actor.js","../js/effect/effect.js","../js/tile/tile.js","../js/tile/index.js","../js/effect/types/basic.js","../js/effect/types/spread.js","../js/effect/handlers/emit.js","../js/effect/handlers/message.js","../js/effect/handlers/activateMachine.js","../js/effect/handlers/tile.js","../js/effect/handlers/clear.js","../js/effect/handlers/feature.js","../js/effect/handlers/nourish.js","../js/effect/handlers/stat.js","../js/map/cell.js","../js/item/item.js","../js/entity/message.js","../js/actor/pain.js","../js/ai/ai.js","../js/ai/typical.js","../js/ai/wander.js","../js/ai/utils.js","../js/actor/kind.js","../js/actor/make.js","../js/actor/actions/bump.js","../js/actor/actions/standStill.js","../js/fx/fx.js","../js/actor/actions/moveDir.js","../js/actor/actions/idle.js","../js/actor/actions/pickup.js","../js/item/kind.js","../js/item/make.js","../js/layer/mapLayer.js","../js/layer/tileLayer.js","../js/layer/gasLayer.js","../js/layer/fireLayer.js","../js/draw/basic.js","../js/map/map.js","../js/map/analyze.js","../js/map/snapshot.js","../js/map/utils.js","../js/map/make.js","../js/horde/horde.js","../js/horde/make.js","../js/command/command.js","../js/command/moveDir.js","../js/command/pickup.js","../js/memory/index.js","../js/player/attribute.js","../js/player/skill.js","../js/player/scent.js","../js/player/player.js","../js/player/kind.js","../js/player/make.js","../js/game/viewport.js","../js/game/message.js","../js/game/flavor.js","../js/game/sidebar.js","../js/game/game.js","../js/tile/tiles.js"],"sourcesContent":["export var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Entity;\n(function (Entity) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    Entity[Entity[\"L_DESTROYED\"] = Fl(1)] = \"L_DESTROYED\";\n    Entity[Entity[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    Entity[Entity[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    Entity[Entity[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    Entity[Entity[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    Entity[Entity[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    Entity[Entity[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    Entity[Entity[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    Entity[Entity[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    Entity[Entity[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    Entity[Entity[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    Entity[Entity[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    Entity[Entity[\"L_NO_SIDEBAR\"] = Fl(13)] = \"L_NO_SIDEBAR\";\n    Entity[Entity[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    Entity[Entity[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    Entity[Entity[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    Entity[Entity[\"L_ON_MAP\"] = Fl(17)] = \"L_ON_MAP\";\n    Entity[Entity[\"L_IN_SIDEBAR\"] = Fl(18)] = \"L_IN_SIDEBAR\";\n    Entity[Entity[\"L_FORMAL_NAME\"] = Fl(20)] = \"L_FORMAL_NAME\";\n    Entity[Entity[\"L_ALWAYS_PLURAL\"] = Fl(21)] = \"L_ALWAYS_PLURAL\";\n    Entity[Entity[\"DEFAULT_ACTOR\"] = 0] = \"DEFAULT_ACTOR\";\n    Entity[Entity[\"DEFAULT_ITEM\"] = 0] = \"DEFAULT_ITEM\";\n    Entity[Entity[\"L_BLOCKED_BY_STAIRS\"] = Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_SURFACE |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    Entity[Entity[\"L_BLOCKS_SCENT\"] = Entity.L_BLOCKS_MOVE | Entity.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    Entity[Entity[\"L_DIVIDES_LEVEL\"] = Entity.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    Entity[Entity[\"L_WAYPOINT_BLOCKER\"] = Entity.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    Entity[Entity[\"L_WALL_FLAGS\"] = Entity.L_BLOCKS_MOVE |\n        Entity.L_BLOCKS_VISION |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    Entity[Entity[\"L_BLOCKS_EVERYTHING\"] = Entity.L_WALL_FLAGS |\n        Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_ACTORS |\n        Entity.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(Entity || (Entity = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n    Actor[Actor[\"HAS_MEMORY\"] = Fl(1)] = \"HAS_MEMORY\";\n    Actor[Actor[\"USES_FOV\"] = Fl(2)] = \"USES_FOV\";\n    Actor[Actor[\"STABLE_COST_MAP\"] = Fl(3)] = \"STABLE_COST_MAP\";\n    Actor[Actor[\"IS_VISIBLE\"] = Fl(4)] = \"IS_VISIBLE\";\n    Actor[Actor[\"WAS_VISIBLE\"] = Fl(5)] = \"WAS_VISIBLE\";\n    Actor[Actor[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Actor || (Actor = {}));\n","export var Item;\n(function (Item) {\n    Item[Item[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Item || (Item = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_SHALLOW_WATER\"] = Fl(4)] = \"T_SHALLOW_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_LIST_IN_SIDEBAR\"] = Fl(22)] = \"T_LIST_IN_SIDEBAR\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n    Tile[Tile[\"T_ANY_LIQUID\"] = Tile.T_IS_DEEP_LIQUID | Tile.T_SHALLOW_WATER] = \"T_ANY_LIQUID\";\n})(Tile || (Tile = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(0)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(1)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"KNOWN_TO_BE_SAFE\"] = Fl(2)] = \"KNOWN_TO_BE_SAFE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(11)] = \"IMPREGNABLE\";\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(13)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(14)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"STABLE_SNAPSHOT\"] = Fl(15)] = \"STABLE_SNAPSHOT\";\n    // These are to speed checks\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(16)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(17)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(18)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(19)] = \"HAS_ITEM\";\n    Cell[Cell[\"HAS_FX\"] = Fl(20)] = \"HAS_FX\";\n    Cell[Cell[\"HAS_TICK_EFFECT\"] = Fl(22)] = \"HAS_TICK_EFFECT\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(23)] = \"IS_CURSOR\";\n    Cell[Cell[\"IS_HIGHLIGHTED\"] = Fl(24)] = \"IS_HIGHLIGHTED\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(28)] = \"IS_POWERED\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"CHANGED\"] = Cell.NEEDS_REDRAW] = \"CHANGED\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_SAFE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_NEEDS_REDRAW\"] = Fl(1)] = \"MAP_NEEDS_REDRAW\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_SIDEBAR_TILES_CHANGED\"] = Fl(10)] = \"MAP_SIDEBAR_TILES_CHANGED\";\n    Map[Map[\"MAP_SIDEBAR_CHANGED\"] = Fl(11)] = \"MAP_SIDEBAR_CHANGED\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_IGNORE_FOV\"] = Fl(12)] = \"E_IGNORE_FOV\";\n    // E_SPREAD_CIRCLE = Fl(13), // Spread in a circle around the spot (using FOV), radius calculated using spread+decrement\n    // E_SPREAD_LINE = Fl(14), // Spread in a line in one random direction\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Horde;\n(function (Horde) {\n    Horde[Horde[\"HORDE_DIES_ON_LEADER_DEATH\"] = Fl(0)] = \"HORDE_DIES_ON_LEADER_DEATH\";\n    Horde[Horde[\"HORDE_IS_SUMMONED\"] = Fl(1)] = \"HORDE_IS_SUMMONED\";\n    Horde[Horde[\"HORDE_SUMMONED_AT_DISTANCE\"] = Fl(2)] = \"HORDE_SUMMONED_AT_DISTANCE\";\n    Horde[Horde[\"HORDE_NO_PERIODIC_SPAWN\"] = Fl(4)] = \"HORDE_NO_PERIODIC_SPAWN\";\n    Horde[Horde[\"HORDE_ALLIED_WITH_PLAYER\"] = Fl(5)] = \"HORDE_ALLIED_WITH_PLAYER\";\n    Horde[Horde[\"HORDE_NEVER_OOD\"] = Fl(15)] = \"HORDE_NEVER_OOD\";\n    // Move all these to tags?\n    // HORDE_LEADER_CAPTIVE = Fl(3), // the leader is in chains and the followers are guards\n    // HORDE_MACHINE_BOSS = Fl(6), // used in machines for a boss challenge\n    // HORDE_MACHINE_WATER_MONSTER = Fl(7), // used in machines where the room floods with shallow water\n    // HORDE_MACHINE_CAPTIVE = Fl(8), // powerful captive monsters without any captors\n    // HORDE_MACHINE_STATUE = Fl(9), // the kinds of monsters that make sense in a statue\n    // HORDE_MACHINE_TURRET = Fl(10), // turrets, for hiding in walls\n    // HORDE_MACHINE_MUD = Fl(11), // bog monsters, for hiding in mud\n    // HORDE_MACHINE_KENNEL = Fl(12), // monsters that can appear in cages in kennels\n    // HORDE_VAMPIRE_FODDER = Fl(13), // monsters that are prone to capture and farming by vampires\n    // HORDE_MACHINE_LEGENDARY_ALLY = Fl(14), // legendary allies\n    // HORDE_MACHINE_THIEF = Fl(16), // monsters that can be generated in the key thief area machines\n    // HORDE_MACHINE_GOBLIN_WARREN = Fl(17), // can spawn in goblin warrens\n    // HORDE_SACRIFICE_TARGET = Fl(18), // can be the target of an assassination challenge; leader will get scary light.\n    // HORDE_MACHINE_ONLY = HORDE_MACHINE_BOSS |\n    //     HORDE_MACHINE_WATER_MONSTER |\n    //     HORDE_MACHINE_CAPTIVE |\n    //     HORDE_MACHINE_STATUE |\n    //     HORDE_MACHINE_TURRET |\n    //     HORDE_MACHINE_MUD |\n    //     HORDE_MACHINE_KENNEL |\n    //     HORDE_VAMPIRE_FODDER |\n    //     HORDE_MACHINE_LEGENDARY_ALLY |\n    //     HORDE_MACHINE_THIEF |\n    //     HORDE_MACHINE_GOBLIN_WARREN |\n    //     HORDE_SACRIFICE_TARGET,\n})(Horde || (Horde = {}));\n","// TODO - Do we need the machine?\nexport class KeyInfo {\n    constructor(x, y, disposable) {\n        this.x = x;\n        this.y = y;\n        this.disposable = disposable;\n    }\n    matches(x, y) {\n        return this.x === x && this.y === y;\n    }\n}\nexport function makeKeyInfo(x, y, disposable) {\n    return new KeyInfo(x, y, disposable);\n}\n","import * as Flags from '../flags/entity';\nlet lastId = 0;\nexport class Entity {\n    // lastSeen: GWU.xy.Loc = [-1, -1];\n    constructor(kind) {\n        this._map = null;\n        this.key = null;\n        this.machineHome = 0;\n        this.changed = true;\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { entity: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n        this.kind = kind;\n        this.id = '' + ++lastId;\n    }\n    get map() {\n        return this._map;\n    }\n    isPlural() {\n        return !!(this.flags.entity & Flags.Entity.L_ALWAYS_PLURAL);\n    }\n    addToMap(map, x, y) {\n        this.x = x;\n        this.y = y;\n        this.setEntityFlag(Flags.Entity.L_ON_MAP);\n        if (this._map === map) {\n            return false;\n        }\n        this._map = map;\n        this.kind.addToMap(this, map);\n        return true;\n    }\n    removeFromMap() {\n        this.clearEntityFlag(Flags.Entity.L_ON_MAP);\n        this.kind.removeFromMap(this);\n    }\n    get sprite() {\n        return this.kind.sprite;\n    }\n    get isDestroyed() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    isAt(x, y) {\n        return this.x === x && this.y === y;\n    }\n    clone() {\n        const other = new this.constructor(this.kind);\n        other.copy(this);\n        return other;\n    }\n    copy(other) {\n        this.depth = other.depth;\n        this.light = other.light;\n        Object.assign(this.flags, other.flags);\n        this.next = other.next;\n        this.x = other.x;\n        this.y = other.y;\n        this.kind = other.kind;\n        this.id = other.id;\n    }\n    canBeSeen() {\n        return this.kind.canBeSeen(this);\n    }\n    destroy() {\n        this.flags.entity |= Flags.Entity.L_DESTROYED;\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasAllEntityFlags(flags) {\n        return (this.flags.entity & flags) === flags;\n    }\n    setEntityFlag(flag) {\n        this.flags.entity |= flag;\n    }\n    clearEntityFlag(flag) {\n        this.flags.entity &= ~flag;\n    }\n    hasTag(tag) {\n        return this.kind.tags.includes(tag);\n    }\n    blocksMove() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    isKey(x, y) {\n        return this.key && this.key.matches(x, y);\n    }\n    forbidsCell(cell) {\n        return this.kind.forbidsCell(cell, this);\n    }\n    avoidsCell(cell) {\n        return this.kind.avoidsCell(cell, this);\n    }\n    getName(opts) {\n        return this.kind.getName(this, opts);\n    }\n    getDescription(opts) {\n        return this.kind.getDescription(this, opts);\n    }\n    getFlavor(opts) {\n        return this.kind.getFlavor(this, opts);\n    }\n    getVerb(verb) {\n        return this.kind.getVerb(this, verb);\n    }\n    drawSidebar(buffer, bounds) {\n        return this.kind.drawSidebar(this, buffer, bounds);\n    }\n    drawInto(dest, _observer) {\n        dest.drawSprite(this.sprite);\n    }\n    toString() {\n        return `${this.kind.id}-${this.id} @ ${this.x},${this.y}`;\n    }\n}\nEntity.default = {\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport { Entity } from './entity';\nimport * as Flags from '../flags';\nexport class EntityKind {\n    constructor(config) {\n        this.tags = [];\n        this.requireTileFlags = 0;\n        this.forbidTileFlags = 0;\n        this.avoidTileFlags = 0;\n        this.requireTileTags = [];\n        this.forbidTileTags = [];\n        this.avoidTileTags = [];\n        this.id = config.id || config.name;\n        this.name = config.name;\n        this.flavor = config.flavor || this.name;\n        this.description = config.description || this.flavor;\n        this.sprite = GWU.sprite.make(config.sprite ? config.sprite : config);\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        if (config.requireTileFlags) {\n            this.requireTileFlags = GWU.flag.from(Flags.Tile, config.requireTileFlags);\n        }\n        if (config.avoidTileFlags) {\n            this.avoidTileFlags = GWU.flag.from(Flags.Tile, config.avoidTileFlags);\n        }\n        if (config.forbidTileFlags) {\n            this.forbidTileFlags = GWU.flag.from(Flags.Tile, config.forbidTileFlags);\n        }\n        if (config.requireTileTags) {\n            if (typeof config.requireTileTags === 'string') {\n                config.requireTileTags = config.requireTileTags.split(/[,|]/g);\n            }\n            this.requireTileTags = config.requireTileTags.map((t) => t.trim());\n        }\n        if (config.avoidTileTags) {\n            if (typeof config.avoidTileTags === 'string') {\n                config.avoidTileTags = config.avoidTileTags.split(/[,|]/g);\n            }\n            this.avoidTileTags = config.avoidTileTags.map((t) => t.trim());\n        }\n        if (config.forbidTileTags) {\n            if (typeof config.forbidTileTags === 'string') {\n                config.forbidTileTags = config.forbidTileTags.split(/[,|]/g);\n            }\n            this.forbidTileTags = config.forbidTileTags.map((t) => t.trim());\n        }\n        if (config.drawSidebar) {\n            this.drawSidebar = config.drawSidebar;\n        }\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Entity.default.sidebarFg);\n    }\n    make(opts) {\n        const entity = new Entity(this);\n        this.init(entity, opts);\n        return entity;\n    }\n    init(entity, opts = {}) {\n        if (opts.machineHome) {\n            entity.machineHome = opts.machineHome;\n        }\n    }\n    addToMap(_entity, _map) { }\n    removeFromMap(_entity) { }\n    canBeSeen(_entity) {\n        return true;\n    }\n    forbidsCell(cell, _entity) {\n        if (this.requireTileFlags &&\n            !cell.hasAllTileFlags(this.requireTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileFlags &&\n            cell.hasTileFlag(this.forbidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.requireTileTags.length &&\n            !cell.hasAllTileTags(this.requireTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileTags.length &&\n            cell.hasAnyTileTag(this.forbidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    avoidsCell(cell, entity) {\n        if (this.forbidsCell(cell, entity))\n            return true;\n        if (this.avoidTileFlags &&\n            cell.hasTileFlag(this.avoidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.avoidTileTags.length &&\n            cell.hasAnyTileTag(this.avoidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    getName(_entity, _opts) {\n        return this.name;\n    }\n    getDescription(_entity, _opts) {\n        return this.description;\n    }\n    getFlavor(_entity, _opts) {\n        return this.flavor;\n    }\n    getVerb(_entity, verb) {\n        return verb;\n    }\n    drawSidebar(entity, buffer, bounds) {\n        if (!entity.map)\n            return 0;\n        if (entity.isDestroyed)\n            return 0;\n        const mixer = new GWU.sprite.Mixer();\n        entity.map.getAppearanceAt(entity.x, entity.y, mixer);\n        buffer.drawSprite(bounds.x + 1, bounds.y, mixer);\n        buffer.wrapText(bounds.x + 3, bounds.y, bounds.width - 3, entity.getName(), this.sidebarFg);\n        return 1;\n    }\n}\nexport function make(opts, makeOpts = {}) {\n    const kind = new EntityKind(opts);\n    return kind.make(makeOpts);\n}\n","export const installedActions = {};\nexport function installAction(name, fn) {\n    installedActions[name.toLowerCase()] = fn;\n}\nexport function getAction(name) {\n    return installedActions[name.toLowerCase()] || null;\n}\n","import * as GWU from 'gw-utils';\nexport class Status {\n    constructor() {\n        this._set = {};\n        this._time = {};\n        this._count = {};\n        this._done = {};\n        this._value = {};\n        this.changed = null;\n    }\n    clear(name) {\n        this.clearTime(name);\n        this.clearCount(name);\n        this.setOff(name);\n        return this._update(name);\n    }\n    get(name) {\n        return this._value[name] || false;\n    }\n    has(name) {\n        return this._value[name] || false;\n    }\n    _addDone(name, done) {\n        if (done) {\n            if (!this._done[name]) {\n                this._done[name] = done;\n            }\n        }\n    }\n    /**\n     * Sets the count for a status variable.\n     * If setting the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} count The count to set.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not setting the count turned the status on.\n     */\n    setCount(name, count, done) {\n        const status = this;\n        status._count[name] = Math.max(count, status._count[name] || 0);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Increments the count for the status by the given amount (1=default)\n     * If incrementing the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} [count=1] The count to incrmeent.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not incrementing the count turned the status on.\n     */\n    increment(name, count = 1, done) {\n        if (typeof count == 'function') {\n            done = count;\n            count = 1;\n        }\n        const status = this;\n        status._count[name] = (status._count[name] || 0) + count;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Decrements the count for the status by the given amount (1=default)\n     * If decrementing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @param {number} [count=1] The count to decrement.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    decrement(name, count = 1) {\n        const status = this;\n        status._count[name] = Math.max(0, (status._count[name] || 0) - count);\n        return this._update(name);\n    }\n    /**\n     * Clears all counts from the given status.\n     * If clearing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    clearCount(name) {\n        const status = this;\n        status._count[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Turns on the given status.\n     * @param {string} name The status to adjust.\n     * @param {function} [done] The function to call when the status is turned off.\n     * @returns {boolean} True if this turns on the status. (It could be on because of a time or count).\n     */\n    setOn(name, done) {\n        const status = this;\n        status._set[name] = true;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Turns off the given status.\n     *\n     * @param {string} name The status to adjust.\n     * @returns {boolean} True if this turns off the status. (It could be on because of a time or count).\n     */\n    setOff(name) {\n        const status = this;\n        status._set[name] = false;\n        return this._update(name);\n    }\n    /**\n     * Sets the time for a status variable.\n     * If setting the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to set.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not setting the time turned the status on.\n     */\n    setTime(name, value, done) {\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        const current = status._time[name] || 0;\n        status._time[name] = Math.max(value, current);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Adds to the time for a status variable.\n     * If adding to the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to add.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not adding the time turned the status on.\n     */\n    addTime(name, value = 1, done) {\n        if (typeof value == 'function') {\n            done = value;\n            value = 1;\n        }\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        status._time[name] = (status._time[name] || 0) + value;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Removes time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to remove.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    removeTime(name, value = 1) {\n        const status = this;\n        value = GWU.range.make(value).value();\n        status._time[name] = Math.max(0, (status._time[name] || 0) - value);\n        return this._update(name);\n    }\n    /**\n     * Removes all time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    clearTime(name) {\n        const status = this;\n        status._time[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Removes time for all status variables that have time.\n     * If removing the time turns off any status (it was on),\n     * then this function returns an object with all of those statuses as keys and false as the values.  Otherwise, false.\n     * @param {Status|object} source The object to set the status on.  If object.status is set then that is where the values are updated.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean|object} false or an object with the names of the statuses that were cleared as keys and false as the values.\n     */\n    decayAllTimes(delta = 1) {\n        const status = this;\n        const cleared = {};\n        let noticed = false;\n        for (let name in status._time) {\n            if (this.removeTime(name, delta)) {\n                noticed = true;\n                cleared[name] = false;\n            }\n        }\n        return noticed ? cleared : false;\n    }\n    /**\n     * Updates the value of the status and returns whether or not this change\n     * turned the status on or off (true = change, false = no change)\n     * @param {string} name The name of the status to update\n     * @returns {boolean} True if the value was turned on or off, False otherwise.\n     */\n    _update(name) {\n        const status = this;\n        const rec = this._value;\n        let was = rec[name];\n        let value = (rec[name] =\n            status._set[name] ||\n                status._time[name] > 0 ||\n                status._count[name] > 0 ||\n                false);\n        const doneFn = this._done[name];\n        if (!value && doneFn) {\n            doneFn(this, name);\n            status._done[name] = null;\n        }\n        if (was && !value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: false');\n            return true;\n        }\n        else if (!was && value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: true');\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Stats {\n    constructor(opts = {}) {\n        this._max = {};\n        this._rate = {};\n        this._value = {};\n        this.init(opts);\n    }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    getPct(name) {\n        const max = this.max(name);\n        return max ? Math.round((100 * this.get(name)) / max) : 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    regen(name) {\n        return this._rate[name] || null;\n    }\n    init(opts) {\n        for (let name in opts) {\n            this.set(name, opts[name]);\n        }\n    }\n    set(name, v, max) {\n        if (typeof v !== 'number') {\n            const r = GWU.range.make(v);\n            v = r.value();\n        }\n        this._value[name] = v;\n        this._max[name] = max || v;\n    }\n    gain(name, amount, allowOver = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        let v = this._value[name] + amount;\n        if (!allowOver) {\n            v = Math.min(v, this._max[name]);\n        }\n        this._value[name] = v;\n    }\n    drain(name, amount) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._value[name] = Math.max(0, this._value[name] - amount);\n    }\n    raiseMax(name, amount, raiseValue = true) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] += amount;\n        if (raiseValue) {\n            this.gain(name, amount);\n        }\n    }\n    reduceMax(name, amount, lowerValue = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] = Math.max(0, this._max[name] - amount);\n        if (lowerValue) {\n            this.drain(name, amount);\n        }\n    }\n    setRegen(name, turns, count = 1) {\n        const r = (this._rate[name] = this._rate[name] || { elapsed: 0 });\n        r.turns = turns;\n        r.count = count;\n    }\n    regenAll() {\n        for (let name in this._max) {\n            const r = this._rate[name];\n            r.elapsed += 1;\n            if (r.elapsed >= r.turns) {\n                this.gain(name, r.count);\n                r.elapsed -= r.turns;\n            }\n        }\n    }\n    restore(name, value) {\n        if (value === undefined)\n            value = this._max[name];\n        this._value[name] = value;\n    }\n    adjust(name, type, amount) {\n        amount = GWU.range.from(amount);\n        const v = amount.value();\n        const c = this.get(name);\n        if (type === 'inc') {\n            this.gain(name, amount);\n        }\n        else if (type === 'dec') {\n            this.drain(name, amount);\n        }\n        else if (type === 'set') {\n            this.set(name, amount);\n        }\n        else if (type === 'min') {\n            const v = amount.value();\n            if (this.get(name) < v) {\n                this.set(name, v);\n            }\n        }\n        else if (type === 'max') {\n            if (this.get(name) > v) {\n                this.set(name, v);\n            }\n        }\n        else {\n            throw new Error('Invalid stat adjust type: ' + type);\n        }\n        return c !== this.get(name);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity/entity';\nimport * as Flags from '../flags';\nimport { getAction } from './action';\nimport { Status } from './status';\nimport { Stats } from './stat';\nexport class Actor extends Entity.Entity {\n    constructor(kind) {\n        super(kind);\n        this.ai = {};\n        this.leader = null;\n        this.items = null; // inventory\n        this.visionDistance = 99;\n        this.data = {};\n        this._costMap = null;\n        this._goalMap = null;\n        this._mapToMe = null;\n        this.next = null; // TODO - can we get rid of this?\n        // @ts-ignore - initialized in Entity\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n        this.kind = kind;\n        this.stats = new Stats();\n        this.status = new Status();\n    }\n    setData(key, value) {\n        this.data[key] = value;\n        this.changed = true;\n    }\n    copy(other) {\n        super.copy(other);\n        this.leader = other.leader;\n        this.items = other.items;\n        this.visionDistance = other.visionDistance;\n    }\n    destroy() {\n        this.setEntityFlag(Flags.Entity.L_DESTROYED);\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    setActorFlag(flag) {\n        this.flags.actor |= flag;\n    }\n    clearActorFlag(flag) {\n        this.flags.actor &= ~flag;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isDead() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        if (action === undefined || action === true) {\n            const main = getAction(name); // default is to do any action\n            return main || false;\n        }\n        else if (action === false) {\n            return false;\n        }\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n    /////////////// VISIBILITY\n    becameVisible() {\n        return (this.hasActorFlag(Flags.Actor.IS_VISIBLE) &&\n            !this.hasActorFlag(Flags.Actor.WAS_VISIBLE));\n    }\n    canSee(x, y) {\n        if (x instanceof Entity.Entity) {\n            return this.canSee(x.x, x.y) && this.kind.isAbleToSee(this, x);\n        }\n        else if (this.map) {\n            if (this.isPlayer()) {\n                return this.map.fov.isDirectlyVisible(x, y);\n            }\n            if (GWU.xy.distanceBetween(this.x, this.y, x, y) >\n                this.visionDistance) {\n                return false;\n            }\n            return GWU.xy.forLineBetween(this.x, this.y, x, y, (i, j) => {\n                if (this.map.cell(i, j).blocksVision())\n                    return false;\n            });\n        }\n        else {\n            return false; // need a map or an fov\n        }\n    }\n    canSeeOrSense(x, y) {\n        if (x instanceof Entity.Entity) {\n            return (this.canSeeOrSense(x.x, x.y) &&\n                (this.kind.isAbleToSee(this, x) ||\n                    this.kind.isAbleToSense(this, x)));\n        }\n        if (this.map && this.isPlayer()) {\n            return this.map.fov.isAnyKindOfVisible(x, y);\n        }\n        return this.canSee(x, y);\n    }\n    isAbleToSee(entity) {\n        return this.kind.isAbleToSee(this, entity);\n    }\n    isAbleToSense(entity) {\n        return this.kind.isAbleToSense(this, entity);\n    }\n    ////////////////// ACTOR\n    async act(game) {\n        let startedVisible = false;\n        if (game.player.canSee(this)) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            startedVisible = true;\n        }\n        else {\n            if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n                console.log('not visible');\n            }\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        if (this.becameVisible()) {\n            console.log('became visible');\n            game.player.interrupt(this);\n        }\n        let r = 0;\n        if (this.ai && this.ai.fn) {\n            r = await this.ai.fn(game, this);\n        }\n        if (r == 0 && this.kind.ai.fn) {\n            r = await this.kind.ai.fn(game, this);\n        }\n        if (r) {\n            // did something\n            if (startedVisible || game.player.canSee(this)) {\n            }\n            return r;\n        }\n        // idle - always\n        return this.endTurn();\n    }\n    moveSpeed() {\n        return this.kind.moveSpeed;\n    }\n    startTurn() {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            if (!this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                !this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n            if (map &&\n                !this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        return Math.floor((pct * this.moveSpeed()) / 100);\n    }\n    ///////\n    willAttack(_other) {\n        return true;\n    }\n    canPass(_other) {\n        return false;\n    }\n    ////////////////// INVENTORY\n    avoidsItem(_item) {\n        return false;\n    }\n    canAddItem(_item) {\n        return false;\n    }\n    addItem(_item) { }\n    pickupItem(item, opts) {\n        return this.kind.pickupItem(this, item, opts);\n    }\n    dropItem(item, opts) {\n        return this.kind.dropItem(this, item, opts);\n    }\n    // PATHFINDING\n    addToMap(map, x, y) {\n        const mapChanged = super.addToMap(map, x, y);\n        if (mapChanged) {\n            this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n        }\n        return mapChanged;\n    }\n    removeFromMap() {\n        super.removeFromMap();\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    /*\n    Calculates and returns the actor's move cost map.\n    Used in pathfinding.\n    */\n    costMap() {\n        if (!this.map) {\n            throw new Error('Actor must have map to calculate costMap.');\n        }\n        const staleMap = !this.hasActorFlag(Flags.Actor.STABLE_COST_MAP);\n        if (staleMap && this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (!this._costMap) {\n            this._costMap = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        else if (!staleMap) {\n            return this._costMap;\n        }\n        const kind = this.kind;\n        const map = this.map;\n        this._costMap.update((_v, x, y) => {\n            const cell = map.cell(x, y);\n            return kind.cellCost(cell, this);\n        });\n        this.setActorFlag(Flags.Actor.STABLE_COST_MAP);\n        /*\n\n            if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n            && (!cellHasTMFlag(i, j, TM_IS_SECRET) || (discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)))\n            {\n                playerCostMap[i][j] = monsterCostMap[i][j] = cellHasTerrainFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? PDS_OBSTRUCTION : PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_SACRED)) {\n                    playerCostMap[i][j] = 1;\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_LAVA_INSTA_DEATH)) {\n        monsterCostMap[i][j] = PDS_FORBIDDEN;\n        if (player.status[STATUS_LEVITATING] || !player.status[STATUS_IMMUNE_TO_FIRE]) {\n            playerCostMap[i][j] = 1;\n        } else {\n            playerCostMap[i][j] = PDS_FORBIDDEN;\n        }\n            } else {\n                if (pmap[i][j].flags & HAS_MONSTER) {\n                    monst = monsterAtLoc(i, j);\n                    if ((monst.creatureState == MONSTER_SLEEPING\n                         || monst.turnsSpentStationary > 2\n             || (monst.info.flags & MONST_GETS_TURN_ON_ACTIVATION)\n                         || monst.creatureState == MONSTER_ALLY)\n                        && monst.creatureState != MONSTER_FLEEING)\n                    {\n                        playerCostMap[i][j] = 1;\n                        monsterCostMap[i][j] = PDS_FORBIDDEN;\n                        continue;\n                    }\n                }\n\n                if (cellHasTerrainFlag(i, j, (T_AUTO_DESCENT | T_IS_DF_TRAP))) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, T_IS_FIRE)) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_IMMUNE_TO_FIRE]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, (T_IS_DEEP_WATER | T_SPONTANEOUSLY_IGNITES))) {\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = 5;\n          }\n                    monsterCostMap[i][j] = 5;\n        } else if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n                   && cellHasTMFlag(i, j, TM_IS_SECRET) && !(discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)\n                   && !(pmap[i][j].flags & IN_FIELD_OF_VIEW))\n             {\n            // Secret door that the player can't currently see\n            playerCostMap[i][j] = 100;\n            monsterCostMap[i][j] = 1;\n                } else {\n                    playerCostMap[i][j] = monsterCostMap[i][j] = 1;\n                }\n            }\n        }\n    }\n        */\n        return this._costMap;\n    }\n    get goalMap() {\n        return this._goalMap;\n    }\n    hasGoal() {\n        return !!this._goalMap;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    clearGoal() {\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n    }\n    mapToMe() {\n        if (!this.map)\n            throw new Error('No map!');\n        if (!this._mapToMe) {\n            this._mapToMe = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        if (this._mapToMe.x !== this.x || this._mapToMe.y !== this.y) {\n            GWU.path.calculateDistances(this._mapToMe, this.x, this.y, this.costMap());\n        }\n        return this._mapToMe;\n    }\n}\nActor.default = {\n    sidebarFg: 'purple',\n};\n","export const handlers = {};\nexport function installHandler(id, handler) {\n    handlers[id.toLowerCase()] = handler;\n}\nexport const effectTypes = {};\nexport function installType(id, type) {\n    effectTypes[id] = type;\n}\n// export class Effect {\n//     id = '';\n//     chance = 100 * 100; // 100%\n//     type: string; // self | bolt | beam | ball | burst | adjacent | spread\n//     aim: string; // actor | item | cell\n//     bolt: string | GWU.sprite.SpriteData | null = null;\n//     beam = false;\n//     range = 0;\n//     ball: string | GWU.sprite.SpriteData | null = null;\n//     radius = 0;\n//     center = false;\n//     effects: EffectFn[];\n//     good = false;\n//     seen = false;\n//     next: Effect | null = null;\n//     constructor(config: EffectConfig) {\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         this.aim = config.aim || 'actor';\n//         if (typeof config.chance === 'string') {\n//             // '20%' becomes 2000\n//             config.chance = Math.floor(Number.parseFloat(config.chance) * 100);\n//         }\n//         this.chance = config.chance || 100 * 100;\n//         const type = config.type || 'basic';\n//         const parts = type.split(':');\n//         if (type.startsWith('bolt') || type.startsWith('beam')) {\n//             // bolt:range:sprite\n//             this.type = parts[0];\n//             this.range = parts[1] ? Number.parseInt(parts[1]) : 99;\n//             this.bolt = parts[1] || 'missile';\n//             this.beam = type.startsWith('beam');\n//         } else if (\n//             type.startsWith('ball') ||\n//             type.startsWith('burst') ||\n//             type.startsWith('aura')\n//         ) {\n//             this.type = parts[0];\n//             this.radius = parts[1] ? Number.parseInt(parts[1]) : 2;\n//             this.range = parts[2] ? Number.parseInt(parts[2]) : 99;\n//             this.ball = parts[3] || 'explosion';\n//             this.center = !type.startsWith('aura');\n//         } else {\n//             this.type = 'basic';\n//         }\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         if (Array.isArray(config.effects)) {\n//             this.effects = config.effects.map((e) => {\n//                 if (typeof e === 'function') return e;\n//                 return effectFnFromString(e);\n//             });\n//         } else {\n//             this.effects = [];\n//             Object.entries(config.effects).forEach(([key, value]) => {\n//                 const handler = handlers[key.toLowerCase()];\n//                 if (handler) {\n//                     this.effects.push(handler(value));\n//                 } else if (typeof value === 'function') {\n//                     this.effects.push(value);\n//                 } else {\n//                     throw new Error('Unknown effect: ' + key);\n//                 }\n//             });\n//         }\n//         if (this.effects.length === 0) throw new Error('No effects!');\n//     }\n//     clone(): this {\n//         const other = new (this.constructor as new (\n//             config: EffectConfig\n//         ) => this)(this as EffectConfig);\n//         return other;\n//     }\n//     fire(map: Map.MapType, x: number, y: number, ctx: EffectCtx = {}): boolean {\n//         let didSomething = false;\n//         ctx.good = this.good;\n//         ctx.seen = this.seen;\n//         if (!this.chance || map.rng.chance(this.chance, 10000)) {\n//             // fire\n//             for (let effect of this.effects) {\n//                 if (GWU.data.gameHasEnded) break;\n//                 if (effect(map, x, y, ctx)) {\n//                     didSomething = true;\n//                 } else {\n//                     break;\n//                 }\n//             }\n//         }\n//         if (ctx.aware && didSomething) {\n//             this.seen = true;\n//         }\n//         this.good = ctx.good;\n//         return didSomething;\n//     }\n//     reset() {\n//         this.seen = false;\n//     }\n// }\n// export function effectFnFromString(e: string): EffectFn {\n//     const parts = e.split(':');\n//     if (parts.length === 0) throw new Error('Invalid effect string.');\n//     // @ts-ignore\n//     const name = parts.shift().toLowerCase();\n//     const handler = handlers[name] || null;\n//     if (!handler) {\n//         throw new Error('Failed to find effect handler: ' + name);\n//     }\n//     return handler(parts);\n// }\nexport function make(opts) {\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    let config = {};\n    if (typeof opts === 'string') {\n        // Special case\n        if (opts.toLowerCase().startsWith('spread:')) {\n            const endPos = opts.indexOf(':', 8);\n            const tile = opts.substring(8, endPos);\n            config = {\n                type: 'spread:' + opts.substring(endPos),\n                effects: ['tile:' + tile],\n            };\n        }\n        else {\n            config = { type: 'basic', effects: [opts] };\n        }\n    }\n    else if (typeof opts === 'function') {\n        config = { type: 'basic', effects: [opts] };\n    }\n    else if (Array.isArray(opts)) {\n        config = { type: 'basic', effects: opts };\n    }\n    else {\n        // @ts-ignore\n        if (opts.effect) {\n            // @ts-ignore\n            opts.effects = [opts.effect];\n            delete opts.effect;\n        }\n        // object only\n        if (opts.effects) {\n            Object.assign(config, opts);\n            if (typeof config.effects === 'string') {\n                config.effects = [opts.effects];\n            }\n            else if (typeof config.effects === 'function') {\n                config.effects = [opts.effects];\n            }\n        }\n        else {\n            config.effects = {};\n            Object.entries(opts).forEach(([key, value]) => {\n                const handler = handlers[key.toLowerCase()];\n                if (handler !== undefined) {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else if (typeof value === 'function') {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else {\n                    // @ts-ignore\n                    config[key] = value;\n                }\n            });\n        }\n    }\n    config.type = config.type || 'basic';\n    if (typeof config.type !== 'string')\n        throw new Error('Invalid effect type: ' + JSON.stringify(config.type));\n    const typeParts = config.type.split(':').map((t) => t.trim());\n    const typeName = typeParts.shift();\n    const makeFn = effectTypes[typeName.toLowerCase()];\n    if (!makeFn)\n        throw new Error('Invalid effect type: ' + typeName);\n    const effect = makeFn(config);\n    if (Array.isArray(config.effects)) {\n        config.effects.forEach((e) => {\n            if (typeof e === 'function') {\n                effect.effects.push(e);\n            }\n            else {\n                const parts = e.split(':').map((t) => t.trim());\n                if (parts.length === 1) {\n                    const effect = installedEffects[parts[0]];\n                    if (!effect)\n                        throw new Error('Failed to find effect with id: ' + parts[0]);\n                    effect.effects.push(effect.trigger.bind(effect));\n                }\n                else {\n                    const handler = handlers[parts[0].toLowerCase()];\n                    if (!handler)\n                        throw new Error('Unknown effect: ' + parts[0]);\n                    parts.shift();\n                    effect.effects.push(handler(parts));\n                }\n            }\n        });\n    }\n    else {\n        Object.entries(config.effects).forEach(([key, value]) => {\n            const handler = handlers[key.toLowerCase()];\n            if (!handler)\n                throw new Error('Failed to find handler type: ' + key);\n            effect.effects.push(handler(value));\n        });\n    }\n    if (config.next) {\n        effect.next = make(config.next);\n    }\n    return effect;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'object' && 'trigger' in opts) {\n        return opts;\n    }\n    if (typeof opts === 'string') {\n        const effect = installedEffects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\nfunction isEffect(obj) {\n    return typeof obj === 'object' && 'trigger' in obj;\n}\n//////////////////////////////\n// INSTALL\nexport const installedEffects = {};\nexport function install(id, config) {\n    const effect = isEffect(config) ? config.clone() : make(config);\n    installedEffects[id] = effect;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(installedEffects).forEach((e) => (e.seen = false));\n}\n","import * as GWU from 'gw-utils';\nimport { make as makeEffect } from '../effect/effect';\nimport * as Flags from '../flags';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.tags = [];\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = GWU.sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { entity: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n        if (this.hasEffect('fire')) {\n            this.flags.tile |= Flags.Tile.T_IS_FLAMMABLE;\n        }\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                config.tags\n                    .split(/[,|]/)\n                    .map((t) => t.trim())\n                    .forEach((t) => {\n                    this.tags.push(t);\n                });\n            }\n            else {\n                this.tags = config.tags.slice().map((t) => t.trim());\n            }\n        }\n    }\n    hasTag(tag) {\n        return this.tags.includes(tag);\n    }\n    hasAnyTag(tags) {\n        return GWU.arraysIntersect(this.tags, tags);\n    }\n    hasAllTags(tags) {\n        return tags.every((t) => this.tags.includes(t));\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllEntityFlags(flag) {\n        return (this.flags.entity & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (typeof arg === 'boolean') {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = GWU.color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription(opts) {\n        return this.description || this.getName(opts);\n    }\n    getFlavor(opts) {\n        return this.flavor || this.getName(opts);\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f;\n    let base = { effects: {}, flags: {}, sprite: {}, priority: 50 };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    let priority = base.priority;\n    if (typeof options.priority === 'string') {\n        let text = options.priority.replace(/ /g, '');\n        let index = text.search(/[+-]/);\n        if (index == 0) {\n            priority = base.priority + Number.parseInt(text);\n        }\n        else if (index == -1) {\n            if (text.search(/[a-zA-Z]/) == 0) {\n                const tile = tiles[text];\n                if (!tile)\n                    throw new Error('Failed to find tile for priority - ' + text + '.');\n                priority = tile.priority;\n            }\n            else {\n                priority = Number.parseInt(text);\n            }\n        }\n        else {\n            const id = text.substring(0, index);\n            const delta = Number.parseInt(text.substring(index));\n            const tile = tiles[id];\n            if (!tile)\n                throw new Error('Failed to find tile for priority - ' + id + '.');\n            priority = tile.priority + delta;\n        }\n    }\n    else if (options.priority !== undefined) {\n        priority = options.priority;\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string' && !value.includes(':')) {\n                effects[key] = value;\n                return;\n            }\n            try {\n                effects[key] = makeEffect(value);\n            }\n            catch (e) {\n                throw new Error(`Failed to add effect to tile => ${key} : ${JSON.stringify(value)} : ` + e.message);\n            }\n        });\n    }\n    const flags = {\n        entity: GWU.flag.from(Flags.Entity, base.flags.entity, options.flags),\n        tile: GWU.flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: GWU.flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Flags.Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = GWU.light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_b = options.ch) !== null && _b !== void 0 ? _b : base.sprite.ch,\n        fg: (_c = options.fg) !== null && _c !== void 0 ? _c : base.sprite.fg,\n        bg: (_d = options.bg) !== null && _d !== void 0 ? _d : base.sprite.bg,\n        opacity: (_e = options.opacity) !== null && _e !== void 0 ? _e : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_f = options.article) !== null && _f !== void 0 ? _f : base.article,\n        tags: options.tags || null,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string')\n        return tiles[id] || null;\n    return all[id] || null;\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n// These are the minimal set of tiles to make the diggers work\nexport const NULL = install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\n","import { Tile, TileMech } from '../flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\n// import './tiles';\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nimport * as Flags from '../../flags';\nexport class BasicEffect {\n    constructor(config) {\n        this.effects = [];\n        this.chance = 100 * 100; // 100%\n        this.seen = false;\n        this.flags = 0;\n        this.next = null;\n        if (typeof config === 'object' && !Array.isArray(config)) {\n            this.flags = GWU.flag.from(Flags.Effect, config.flags);\n            if (typeof config.chance === 'string' &&\n                config.chance.endsWith('%')) {\n                this.chance = Number.parseFloat(config.chance) * 100;\n            }\n            else {\n                this.chance = Number.parseInt(config.chance || '10000');\n            }\n        }\n    }\n    clone() {\n        const other = new this.constructor();\n        other.effects = this.effects.slice();\n        other.chance = this.chance;\n        other.seen = false;\n        other.flags = this.flags;\n        other.next = this.next;\n        return other;\n    }\n    trigger(loc, ctx = {}) {\n        if (!ctx.force && this.chance) {\n            const rng = ctx.rng || loc.map.rng || GWU.random;\n            if (!rng.chance(this.chance, 10000))\n                return false;\n        }\n        let didSomething = false;\n        for (let eff of this.effects) {\n            if (eff(loc, ctx)) {\n                didSomething = true;\n            }\n        }\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                return this.next.trigger(loc, ctx);\n            }\n        }\n        return didSomething;\n    }\n}\nexport function makeBasicEffect(config) {\n    if (typeof config !== 'object') {\n        return new BasicEffect();\n    }\n    return new BasicEffect(config);\n}\nEffect.installType('basic', makeBasicEffect);\n","import * as GWU from 'gw-utils';\nimport { BasicEffect } from './basic';\nimport { installType } from '../effect';\nimport * as Flags from '../../flags';\nexport function makeSpreadEffect(config) {\n    return new SpreadEffect(config);\n}\ninstallType('spread', makeSpreadEffect);\nexport class SpreadEffect extends BasicEffect {\n    constructor(config) {\n        super(config);\n        this.grow = 0;\n        this.decrement = 0;\n        this.matchTile = '';\n        if (!config) {\n            config = { grow: 0, decrement: 0, flags: 0 };\n        }\n        if (typeof config === 'string') {\n            config = config.split(':').map((t) => t.trim());\n        }\n        if (Array.isArray(config)) {\n            if (config[0].toLowerCase() === 'spread') {\n                config.shift();\n            }\n            config = {\n                grow: config[0] || '0',\n                decrement: config[1] || '100',\n                flags: config[2] || '0',\n            };\n        }\n        else if (typeof config.type === 'string' &&\n            config.type.includes(':')) {\n            const parts = config.type.split(':').map((t) => t.trim());\n            if (parts[0].toLowerCase() === 'spread') {\n                parts.shift();\n            }\n            config.grow = parts[0] || '0';\n            config.decrement = parts[1] || '100';\n            config.flags = config.flags + '|' + parts[2];\n        }\n        this.grow = Number.parseInt(config.grow || 0);\n        this.decrement = Number.parseInt(config.decrement || 100);\n        this.flags = GWU.flag.from(Flags.Effect, config.flags || 0);\n        this.matchTile = config.matchTile || '';\n    }\n    clone() {\n        const other = super.clone();\n        other.grow = this.grow;\n        other.decrement = this.decrement;\n        other.matchTile = this.matchTile;\n        return other;\n    }\n    trigger(xy, ctx = {}) {\n        const abortIfBlocking = !!(this.flags & Flags.Effect.E_ABORT_IF_BLOCKS_MAP);\n        let didSomething = false;\n        const map = xy.map;\n        const spawnMap = GWU.grid.alloc(map.width, map.height);\n        didSomething = computeSpawnMap(this, xy, spawnMap);\n        if (!didSomething) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (abortIfBlocking && mapDisruptedBy(map, spawnMap)) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, spawnMap, this.flags)) {\n                didSomething = true;\n            }\n        }\n        spawnMap.forEach((v, x, y) => {\n            if (!v)\n                return;\n            spawnMap[x][y] = 1; // convert from generations to off/on/success\n            for (let eff of this.effects) {\n                if (eff({ map, x, y }, ctx)) {\n                    didSomething = true;\n                    spawnMap[x][y] = 2;\n                }\n            }\n        });\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                if (this.flags & Flags.Effect.E_NEXT_EVERYWHERE) {\n                    spawnMap.forEach((v, x, y) => {\n                        if (!v)\n                            return;\n                        if (v == 2 || nextAlways) {\n                            this.next.trigger({ map, x, y }, ctx);\n                        }\n                    });\n                }\n                else {\n                    this.next.trigger({ map, x: xy.x, y: xy.y }, ctx);\n                }\n            }\n        }\n        GWU.grid.free(spawnMap);\n        return didSomething;\n    }\n}\nexport function mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(map.width, map.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(map.width, map.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (map.cell(i, j).isStairs()) {\n                disrupts = true;\n            }\n        }\n        else if (!map.cell(i, j).blocksMove()) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGWU.grid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Flags.Effect.E_BUILD_IN_WALLS) {\n        if (!map.cell(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cell(x, y).isWall())\n            return false; // or on wall\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.matchTile && !isStart && !cell.hasTile(effect.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, loc, spawnMap) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const map = loc.map;\n    let startProb = effect.grow || 0;\n    let probDec = effect.decrement || 0;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, loc.x, loc.y, true)) {\n        return false;\n    }\n    spawnMap[loc.x][loc.y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + GWU.xy.DIRS[dir][0];\n                            y2 = j + GWU.xy.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                map.rng.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Flags.Effect.E_CLEAR_CELL) === Flags.Effect.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Flags.Effect.E_CLEAR_GAS) {\n                cell.clearDepth(Flags.Depth.GAS);\n            }\n            if (flags & Flags.Effect.E_CLEAR_LIQUID) {\n                cell.clearDepth(Flags.Depth.LIQUID);\n            }\n            if (flags & Flags.Effect.E_CLEAR_SURFACE) {\n                cell.clearDepth(Flags.Depth.SURFACE);\n            }\n            if (flags & Flags.Effect.E_CLEAR_GROUND) {\n                cell.clearDepth(Flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let didSomething = false;\n    map.eachActor((a) => {\n        if (!blockingMap[a.x][a.y])\n            return;\n        const loc = map.rng.matchingLocNear(a.x, a.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const c = map.cell(x, y);\n            return !a.forbidsCell(c);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeActor(a);\n            map.addActor(loc[0], loc[1], a);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    map.eachItem((i) => {\n        if (!blockingMap[i.x][i.y])\n            return;\n        const loc = map.rng.matchingLocNear(i.x, i.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const dest = map.cell(x, y);\n            return !i.forbidsCell(dest);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeItem(i);\n            map.addItem(loc[0], loc[1], i);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// EMIT\nexport function makeEmitHandler(config) {\n    if (Array.isArray(config))\n        config = config[0];\n    if (typeof config !== 'string')\n        throw new Error('Invalid EMIT handler config - ' + config);\n    return emitEffect.bind(undefined, config);\n}\nexport function emitEffect(id, loc, ctx) {\n    return loc.map.events.emit(id, loc, ctx);\n}\ninstallHandler('emit', makeEmitHandler);\n","import * as GWU from 'gw-utils';\nimport { installHandler } from '../effect';\n//////////////////////////////////////////////\n// MESSAGE\nexport function makeMessageHandler(src) {\n    if (Array.isArray(src))\n        src = src[0];\n    if (typeof src !== 'string') {\n        throw new Error('Need message for message effect.');\n    }\n    const info = {\n        msg: src,\n    };\n    return messageEffect.bind(undefined, info);\n}\nexport function messageEffect(info, loc, ctx) {\n    const seen = ctx.seen;\n    const msg = info.msg;\n    if (msg &&\n        msg.length &&\n        ctx.aware &&\n        !seen\n    // && map.isVisible(x, y)\n    ) {\n        GWU.message.addAt(loc.x, loc.y, msg, ctx);\n        return true;\n    }\n    return false;\n}\ninstallHandler('msg', makeMessageHandler);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// ActivateMachine\nexport function makeActivateMachine() {\n    return activateMachine.bind(undefined);\n}\nexport function activateMachine(loc, ctx) {\n    const cell = loc.map.cell(loc.x, loc.y);\n    const machine = cell.machineId;\n    if (!machine)\n        return false;\n    return loc.map.activateMachine(machine, loc.x, loc.y, ctx);\n}\ninstallHandler('activateMachine', makeActivateMachine);\n","import { installHandler } from '../effect';\nexport function makeTileHandler(src) {\n    if (!src)\n        throw new Error('Tile effect needs configuration.');\n    if (typeof src === 'string') {\n        src = { id: src };\n    }\n    else if (Array.isArray(src)) {\n        src = { id: src[0] };\n    }\n    else if (!src.id) {\n        throw new Error('Tile effect needs configuration with id.');\n    }\n    const opts = src;\n    if (opts.id.includes('!')) {\n        opts.superpriority = true;\n    }\n    if (opts.id.includes('~')) {\n        opts.blockedByActors = true;\n        opts.blockedByItems = true;\n    }\n    opts.id = opts.id.replace(/[!~]*/g, '');\n    return tileEffect.bind(opts);\n}\nexport function tileEffect(loc, ctx) {\n    this.machine = ctx.machine || 0;\n    const didSomething = loc.map.setTile(loc.x, loc.y, this.id, this);\n    return didSomething;\n}\ninstallHandler('tile', makeTileHandler);\n","import * as Flags from '../../flags';\nimport { installHandler } from '../effect';\nexport function makeClearHandler(config) {\n    let layers = 0;\n    if (!config) {\n        layers = Flags.Depth.ALL_LAYERS;\n    }\n    else if (typeof config === 'number') {\n        layers = config;\n    }\n    else if (typeof config === 'string') {\n        const parts = config.split(/[,|]/g);\n        layers = parts.reduce((out, v) => {\n            if (typeof v === 'number')\n                return out | v;\n            const depth = Flags.Depth[v] || 0;\n            return out | depth;\n        }, 0);\n    }\n    else {\n        throw new Error('Invalid config for clear effect: ' + JSON.stringify(config));\n    }\n    return clearEffect.bind(undefined, layers);\n}\nexport function clearEffect(layers, loc, _ctx) {\n    if (!layers)\n        return false;\n    const cell = loc.map.cell(loc.x, loc.y);\n    return cell.clearDepth(layers);\n}\ninstallHandler('clear', makeClearHandler);\n","import * as Effect from '../effect';\nexport function makeFeatureHandler(id) {\n    if (Array.isArray(id))\n        id = id[0];\n    if (id && typeof id !== 'string') {\n        id = id.id;\n    }\n    if (!id || !id.length)\n        throw new Error('Feature effect needs ID');\n    return featureEffect.bind(undefined, id);\n}\nexport function featureEffect(id, loc, ctx) {\n    const feat = Effect.installedEffects[id];\n    if (!feat) {\n        throw new Error('Failed to find feature: ' + id);\n    }\n    return feat.trigger(loc, ctx);\n}\nEffect.installHandler('feature', makeFeatureHandler);\nEffect.installHandler('effect', makeFeatureHandler);\nEffect.installHandler('id', makeFeatureHandler);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeNourishEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Nourish config.');\n    let info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.type = opts[0] || 'inc';\n        info.amount = GWU.range.make(opts[1] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(opts.amount || 1);\n    }\n    else {\n        throw new Error('Invalid Nourish config: ' + JSON.stringify(opts));\n    }\n    return nourishEffect.bind(undefined, info);\n}\nexport function nourishEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    const stats = actor.stats;\n    const c = stats.get('food');\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    const n = stats.get('food');\n    if (n < c && n / stats.max('food') < 0.1) {\n        GWU.message.addAt(actor.x, actor.y, nourishEffect.default.pukeMsg, {\n            actor,\n        });\n    }\n    return true;\n}\nnourishEffect.default = {\n    pukeMsg: '%you vomit.',\n};\nEffect.installHandler('nourish', makeNourishEffect);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeStatEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Stat config.');\n    const info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.stat = opts[0];\n        info.type = opts[1] || 'inc';\n        info.amount = GWU.range.make(opts[2] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.stat = opts.stat;\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(info.amount || 1);\n    }\n    else {\n        throw new Error('Invalid stat effect configuration: ' + JSON.stringify(opts));\n    }\n    return statEffect.bind(undefined, info);\n}\nexport function statEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    // sustain?\n    const stats = actor.stats;\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    return true;\n}\nEffect.installHandler('stat', makeStatEffect);\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nGWU.color.install('cellStatusName', 'light_blue');\nexport const NEVER_SEEN = {\n    tiles: [TILE.NULL],\n    item: null,\n    actor: null,\n    flags: {\n        cell: 0,\n        entity: TILE.NULL.flags.entity,\n        tile: TILE.NULL.flags.tile,\n        tileMech: TILE.NULL.flags.tileMech,\n    },\n};\nexport class Cell {\n    constructor(map, x, y, groundTile) {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.x = -1;\n        this.y = -1;\n        // toFire: Partial<Effect.EffectCtx>[] = [];\n        this.memory = null;\n        // this._entities = new CellEntities(this);\n        this.flags = { cell: Flags.Cell.NEEDS_REDRAW };\n        this.tiles = [TILE.tiles.NULL];\n        this.map = map;\n        this.x = x;\n        this.y = y;\n        this.snapshot = GWU.sprite.makeMixer();\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n        this.memory = NEVER_SEEN;\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    get hasStableSnapshot() {\n        return this.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    }\n    get hasStableMemory() {\n        return this.hasCellFlag(Flags.Cell.STABLE_MEMORY);\n    }\n    storeMemory() {\n        var _a;\n        this.setCellFlag(Flags.Cell.STABLE_MEMORY);\n        // store memory\n        this.memory = {\n            flags: {\n                cell: this.flags.cell,\n                entity: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.entity) || 0), 0),\n                tile: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tile) || 0), 0),\n                tileMech: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tileMech) || 0), 0),\n            },\n            tiles: this.tiles.slice(),\n            item: ((_a = this.item) === null || _a === void 0 ? void 0 : _a.clone()) || null,\n            actor: null,\n        };\n        if (this.hasItem()) {\n            const item = this.item;\n            if (item) {\n                this.memory.flags.entity |= item.flags.entity;\n            }\n        }\n        if (this.hasActor()) {\n            const actor = this.actor;\n            if (actor) {\n                this.memory.flags.entity |= actor.flags.entity;\n            }\n            this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n    }\n    clearMemory() {\n        this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT | Flags.Cell.STABLE_MEMORY);\n        this.memory = null;\n        this.needsRedraw = true;\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles.length = other.tiles.length;\n        for (let i = 0; i < this.tiles.length; ++i) {\n            this.tiles[i] = other.tiles[i];\n        }\n        this.machineId = other.machineId;\n        // this._actor = other.actor;\n        // this._item = other.item;\n        this.memory = other.memory;\n        this.map = other.map;\n        this.x = other.x;\n        this.y = other.y;\n        other.getSnapshot(this.snapshot);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasEntityFlag(flag, checkEntities = false) {\n        var _a, _b;\n        if (this.tiles.some((t) => t && t.flags.entity & flag))\n            return true;\n        if (!checkEntities)\n            return false;\n        if (this.hasItem()) {\n            if ((_a = this.item) === null || _a === void 0 ? void 0 : _a.hasEntityFlag(flag))\n                return true;\n        }\n        if (this.hasActor()) {\n            if ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.hasEntityFlag(flag))\n                return true;\n        }\n        return false;\n    }\n    hasAllEntityFlags(flags, checkEntities = false) {\n        return (this.entityFlags(checkEntities) & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    hasTileTag(tag) {\n        return this.tiles.some((tile) => tile && tile.hasTag(tag));\n    }\n    hasAllTileTags(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAllTags(tags);\n        });\n    }\n    hasAnyTileTag(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAnyTag(tags);\n        });\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    entityFlags(withEntities = false) {\n        var _a, _b;\n        let flag = this.tiles.reduce((out, t) => out | (t ? t.flags.entity : 0), 0);\n        if (withEntities) {\n            if (this.hasItem()) {\n                flag |= ((_a = this.item) === null || _a === void 0 ? void 0 : _a.flags.entity) || 0;\n            }\n            if (this.hasActor()) {\n                flag |= ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.flags.entity) || 0;\n            }\n        }\n        return flag;\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.Cell.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            if (!this.memory) {\n                this.flags.cell |= Flags.Cell.NEEDS_REDRAW;\n                this.flags.cell &= ~Flags.Cell.STABLE_SNAPSHOT;\n                this.map.needsRedraw = true;\n            }\n        }\n        else {\n            this.flags.cell &= ~Flags.Cell.NEEDS_REDRAW;\n        }\n    }\n    get changed() {\n        return !!(this.flags.cell & Flags.Cell.CHANGED);\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.entity & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return this.tiles.some((t) => t && t.blocksVision());\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) &&\n            !this.tiles.some((t) => t && t.hasTileFlag(Flags.Tile.T_BRIDGE)));\n    }\n    blocksMove() {\n        return this.tiles.some((t) => t && t.blocksMove());\n    }\n    blocksEffects() {\n        return this.tiles.some((t) => t && t.blocksEffects());\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isNull() {\n        return this.tiles.every((t) => !t || t === TILE.tiles.NULL);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllEntityFlags(Flags.Entity.L_WALL_FLAGS);\n    }\n    isDoor() {\n        return this.hasTileFlag(Flags.Tile.T_IS_DOOR);\n    }\n    isStairs() {\n        return this.hasTileFlag(Flags.Tile.T_HAS_STAIRS);\n    }\n    isFloor() {\n        // Floor tiles do not block anything...\n        return (!this.hasEntityFlag(Flags.Entity.L_BLOCKS_EVERYTHING) &&\n            !this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    isGateSite() {\n        return this.hasCellFlag(Flags.Cell.IS_GATE_SITE);\n    }\n    isSecretlyPassable() {\n        return this.hasEntityFlag(Flags.Entity.L_SECRETLY_PASSABLE);\n    }\n    // hasKey(): boolean {\n    //     return this._entities.some(\n    //         (e) => !!e.key && e.key.matches(this.x, this.y)\n    //     );\n    // }\n    hasLiquid() {\n        return this.hasTileFlag(Flags.Tile.T_ANY_LIQUID);\n    }\n    // @returns - whether or not the change results in a change to the cell tiles.\n    //          - If there is a change to cell lighting, the cell will have the\n    //          - LIGHT_CHANGED flag set.\n    setTile(tile, opts = {}) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        if (current === tile)\n            return false;\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (this.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && this.hasItem())\n            return false;\n        if (opts.blockedByActors && this.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && this.highestPriority() > tile.priority)\n            return false;\n        // TODO - Are we blocked by other layer (L_BLOCKS_SURFACE on an already present tile)?\n        if (tile.depth > Flags.Depth.GROUND && tile.groundTile) {\n            const currentGround = this.depthTile(Flags.Depth.GROUND);\n            const wantGround = TILE.get(tile.groundTile);\n            if (currentGround !== wantGround) {\n                if (!this.setTile(wantGround, opts)) {\n                    return false;\n                }\n            }\n        }\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        if (tile.hasEntityFlag(Flags.Entity.L_BLOCKS_SURFACE)) {\n            this.clearDepth(Flags.Depth.SURFACE);\n        }\n        if (opts.machine) {\n            this.machineId = opts.machine;\n        }\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (current.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR) !==\n            tile.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.map.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            this.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clearTiles(tile) {\n        this.tiles[0] = TILE.tiles.NULL;\n        for (let i = 1; i < this.tiles.length; ++i) {\n            this.tiles[i] = null;\n        }\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.needsRedraw = true;\n    }\n    clear(tile) {\n        this.tiles = [TILE.tiles.NULL];\n        this.flags.cell = 0;\n        this.needsRedraw = true;\n        this.chokeCount = 0;\n        this.machineId = 0;\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.snapshot.blackOut();\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    tileWithEffect(name) {\n        return this.tiles.find((t) => t === null || t === void 0 ? void 0 : t.hasEffect(name)) || null;\n    }\n    fireEvent(event, ctx = {}) {\n        // ctx.cell = this;\n        let didSomething = false;\n        // console.log('fire event - %s', event);\n        for (const tile of this.tiles) {\n            if (!tile || !tile.effects)\n                continue;\n            const ev = tile.effects[event];\n            if (ev) {\n                const r = this._activate(ev, ctx);\n                if (r) {\n                    didSomething = true;\n                }\n            }\n        }\n        return didSomething;\n    }\n    _activate(effect, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.installedEffects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = effect.trigger(this, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.Cell.HAS_ITEM);\n    }\n    get item() {\n        return this.map.itemAt(this.x, this.y);\n    }\n    canAddItem(_item) {\n        return true;\n    }\n    canRemoveItem(_item) {\n        return true;\n    }\n    _addItem(_item) {\n        this.setCellFlag(Flags.Cell.HAS_ITEM);\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeItem(item) {\n        let hasItems = false;\n        let foundIndex = -1;\n        this.map.items.forEach((obj, index) => {\n            if (obj === item) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasItems = true;\n            }\n        });\n        if (!hasItems) {\n            this.clearCellFlag(Flags.Cell.HAS_ITEM);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.Cell.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.Cell.HAS_PLAYER);\n    }\n    get actor() {\n        return this.map.actorAt(this.x, this.y);\n    }\n    canAddActor(_actor) {\n        return true;\n    }\n    canRemoveActor(_actor) {\n        return true;\n    }\n    _addActor(actor) {\n        this.setCellFlag(Flags.Cell.HAS_ACTOR);\n        if (actor.isPlayer()) {\n            this.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeActor(actor) {\n        let hasActor = false;\n        let foundIndex = -1;\n        this.map.actors.forEach((obj, index) => {\n            if (obj === actor) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasActor = true;\n            }\n        });\n        if (!hasActor) {\n            this.clearCellFlag(Flags.Cell.HAS_ACTOR | Flags.Cell.HAS_PLAYER);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    hasFx() {\n        return !!(this.flags.cell & Flags.Cell.HAS_FX);\n    }\n    get fx() {\n        return this.map.fxAt(this.x, this.y);\n    }\n    _addFx(_fx) {\n        this.setCellFlag(Flags.Cell.HAS_FX);\n        this.needsRedraw = true;\n    }\n    _removeFx(_fx) {\n        if (!this.fx) {\n            this.clearCellFlag(Flags.Cell.HAS_FX);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        if (this.hasActor()) {\n            const actor = this.map.actorAt(this.x, this.y);\n            if (actor && actor.sprite.ch)\n                return actor.sprite.ch;\n        }\n        if (this.hasItem()) {\n            const item = this.map.itemAt(this.x, this.y);\n            if (item && item.sprite.ch)\n                return item.sprite.ch;\n        }\n        if (this.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return '=';\n        }\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n    drawSidebar(buffer, bounds) {\n        const lines = buffer.wrapText(bounds.x + 1, bounds.y, bounds.width - 1, this.getName(), 'cellStatusName');\n        return lines;\n    }\n    toString() {\n        return `Cell @ ${this.x},${this.y}`;\n    }\n}\n","import { Entity } from '../entity/entity';\nimport { Depth } from '../flags';\nexport class Item extends Entity {\n    constructor(kind) {\n        super(kind);\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore - initialized in constructor\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n        this.kind = kind;\n    }\n    isPlural() {\n        if (this.quantity > 1)\n            return true;\n        return super.isPlural();\n    }\n    copy(other) {\n        super.copy(other);\n        this.quantity = other.quantity;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n}\nItem.default = {\n    sidebarFg: 'gold',\n};\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor/actor';\nimport { Cell } from '../map/cell';\nimport { Item } from '../item/item';\nimport * as Flags from '../flags';\nexport function messageYou(name, view, args) {\n    const field = args[0] || 'actor';\n    const actor = this.get(view, field);\n    if (actor && actor instanceof Actor) {\n        if (actor.isPlayer()) {\n            return 'you';\n        }\n        else {\n            return 'the ' + actor.getName();\n        }\n    }\n    return actor || name;\n}\nGWU.text.addHelper('you', messageYou);\nexport function messageThe(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else {\n                return 'the ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'the ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('the', messageThe);\nexport function messageA(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else if (value.hasEntityFlag(Flags.Entity.L_FORMAL_NAME)) {\n                return value.getName();\n            }\n        }\n        if ('getName' in value) {\n            const name = value.getName();\n            const char = GWU.text.firstChar(name);\n            const ana = /[aeiouy]/i.exec(char) ? 'an ' : 'a ';\n            return ana + name;\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('a', messageA);\nGWU.text.addHelper('an', messageA);\nexport function messageVerb(_name, view, args) {\n    const verb = args[0] || 'verb';\n    const value = args[1]\n        ? this.get(view, args[1])\n        : view.actor || view.target || view.item || view.cell;\n    let plural = false;\n    if (value) {\n        if (value instanceof Cell) {\n            plural = false;\n        }\n        else if (value instanceof Actor) {\n            plural = value.isPlural();\n        }\n        else if (value instanceof Item) {\n            plural = value.isPlural();\n        }\n    }\n    return plural ? GWU.text.toPluralVerb(verb) : GWU.text.toSingularVerb(verb);\n}\nGWU.text.addHelper('verb', messageVerb);\n","import * as GWU from 'gw-utils';\nexport class PainMessages {\n    constructor(msgs = []) {\n        this._msgs = [];\n        msgs.forEach((m) => this.add(m));\n    }\n    add(msg) {\n        this._msgs.push(msg);\n        return this;\n    }\n    get(pct, singular = true) {\n        const index = GWU.clamp(Math.floor(pct * this._msgs.length), 0, this._msgs.length - 1);\n        const msg = this._msgs[index];\n        return this._format(msg, singular);\n    }\n    _format(msg, singular = true) {\n        return msg.replace(/\\[(\\w+)\\|?(\\w*)\\]/g, singular ? '$1' : '$2');\n    }\n}\nexport const painMessages = {};\nexport function installPain(id, pain) {\n    if (Array.isArray(pain)) {\n        pain = new PainMessages(pain);\n    }\n    painMessages[id] = pain;\n}\nexport function getPain(id) {\n    const m = painMessages[id];\n    if (!m)\n        throw new Error('No such pain message index: ' + id);\n    return m;\n}\n","export const ais = {};\nexport function install(name, fn) {\n    ais[name] = fn;\n}\nexport function make(opts) {\n    if (typeof opts === 'string') {\n        opts = { fn: opts };\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    if (typeof opts.fn === 'string') {\n        opts.fn = ais[opts.fn];\n    }\n    if (!opts.fn) {\n        opts.fn = ais.default;\n    }\n    return opts;\n}\n","import * as GWU from 'gw-utils';\nimport { getAction } from '../actor/action';\nimport * as AI from './ai';\nimport { wander } from './wander';\nexport class AICtx {\n    constructor(game, actor, target) {\n        this.item = null;\n        this.count = 0;\n        this.game = game;\n        this.actor = actor;\n        this.target = target || null;\n        this.distanceMap = GWU.grid.alloc(game.map.width, game.map.height);\n        if (target) {\n            const costMap = actor.costMap();\n            GWU.path.calculateDistances(this.distanceMap, target.x, target.y, costMap);\n        }\n    }\n    start() {\n        ++this.count;\n        return this;\n    }\n    done(result) {\n        --this.count;\n        if (this.count == 0) {\n            GWU.grid.free(this.distanceMap);\n        }\n        return result;\n    }\n}\n/*\nhttp://roguebasin.com/index.php/Roguelike_Intelligence_-_Stateless_AIs\n-- Typical AI\n*/\nexport async function typical(game, actor) {\n    if (actor.isDead())\n        return -1;\n    const map = actor.map;\n    if (!map)\n        return -1; // actor not on map ?!?!\n    const target = game.player;\n    const tryAttack = actor.canSee(target) && actor.willAttack(target);\n    if (tryAttack) {\n        const damagePct = 100 - actor.stats.getPct('health');\n        const morale = actor.stats.get('morale');\n        const chargeChance = 100;\n        const retreatChance = 0;\n        actor.ai.lastSawPlayer = [target.x, target.y];\n        actor.clearGoal();\n        console.log('SAW YOU!', actor.id, target.x, target.y);\n        const ctx = new AICtx(game, actor, target).start();\n        let result = 0;\n        if (damagePct > morale) {\n            if (canRunAwayFrom(game, actor, target, ctx)) {\n                result = await runAwayFrom(game, actor, target, ctx);\n            }\n            else if (canAttack(game, actor, target, ctx)) {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            if (GWU.random.chance(chargeChance)) {\n                result = await moveToward(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            if (GWU.random.chance(retreatChance)) {\n                result = await moveAwayFrom(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (canAttack(game, actor, target, ctx)) {\n            result = await attack(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            result = await moveToward(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            result = await moveAwayFrom(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n    }\n    // TODO - Use scent, menory, other teammates info, ...\n    else if (actor.ai.lastSawPlayer) {\n        if (!actor.hasGoal()) {\n            const loc = actor.ai.lastSawPlayer;\n            actor.setGoal(loc[0], loc[1]);\n        }\n        console.log('CHASING YOU!', actor.id, actor.goalMap.x, actor.goalMap.y);\n        const result = await moveTowardGoal(game, actor);\n        if (result) {\n            return result;\n        }\n        actor.ai.lastSawPlayer = null; // no longer\n        actor.clearGoal();\n    }\n    // check if they noticed the player scent\n    if (target.scent) {\n        const dir = target.scent.nextDir(actor.x, actor.y);\n        if (dir) {\n            console.log('tracking scent', actor.id, dir);\n            const moveDir = getAction('moveDir');\n            if (!moveDir)\n                throw new Error('No moveDir action found for Actors!');\n            const result = await moveDir(game, actor, { dir });\n            if (result)\n                return result;\n        }\n    }\n    const wanderOpt = GWU.object.firstOpt('wander', actor.ai, actor.kind.ai, false);\n    if (wanderOpt) {\n        if (actor.goalMap || // we have a current goal\n            typeof wanderOpt !== 'number' || // wander: true\n            GWU.random.chance(wanderOpt) // chance\n        ) {\n            const result = wander(game, actor);\n            if (result)\n                return result;\n        }\n        else {\n            const idle = getAction('idle');\n            if (idle) {\n                return idle(game, actor);\n            }\n        }\n    }\n    const standStill = getAction('standStill');\n    if (!standStill)\n        throw new Error('No standStill action found for actors!');\n    return standStill(game, actor);\n}\nAI.install('typical', typical);\nAI.install('default', typical);\nexport function canMoveToward(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        if (distanceMap[x][y] < center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveToward(game, actor, target, ctx) {\n    // pathfinding?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    // distanceMap.dump();\n    const map = game.map;\n    const step = GWU.path.nextStep(ctx.distanceMap, actor.x, actor.y, (x, y) => {\n        const cell = map.cell(x, y);\n        if (!cell)\n            return true;\n        if (cell.hasActor() && cell.actor !== target)\n            return true;\n        if (cell.blocksMove())\n            return true;\n        return false;\n    });\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        const standStill = getAction('standStill');\n        if (!standStill)\n            throw new Error('No standStill action found for actors!');\n        result = await standStill(game, actor);\n        return ctx.done(result);\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return ctx.done(result);\n}\nexport function canMoveAwayFrom(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        const d = distanceMap[x][y];\n        if (d >= GWU.path.NO_PATH)\n            return;\n        if (distanceMap[x][y] > center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveAwayFrom(_game, actor, _target, _ctx) {\n    // safety/strategy?\n    // always move using safety map?\n    return actor.endTurn();\n}\nexport function canRunAwayFrom(_game, _actor, _target, _ctx) {\n    // can move?\n    return false;\n}\nexport async function runAwayFrom(_game, actor, _target, _ctx) {\n    // move toward loop if away from player\n    return actor.endTurn();\n}\nexport function canAttack(_game, actor, target, _ctx) {\n    // has attack?\n    // attack affects player?\n    // cooldown?\n    return GWU.xy.distanceFromTo(actor, target) <= 1;\n}\nexport async function attack(game, actor, target, _ctx) {\n    console.log('attack!', actor.id, target.id);\n    let attack = actor.getAction('attack');\n    if (!attack)\n        return 0;\n    return attack(game, actor, { actor: target });\n}\nexport function tooFarFrom(_game, actor, target, _ctx) {\n    // diagonal?\n    return GWU.xy.distanceFromTo(actor, target) > 1;\n}\nexport function tooCloseTo(_game, actor, target, _ctx) {\n    return GWU.xy.distanceFromTo(actor, target) < 1;\n}\n// TODO - make an action\nexport async function moveTowardGoal(game, actor) {\n    if (!actor.hasGoal())\n        return 0;\n    const nextStep = GWU.path.nextStep(actor.goalMap, actor.x, actor.y, (x, y) => {\n        return actor.map.hasActor(x, y);\n    });\n    if (!nextStep) {\n        actor.clearGoal();\n        return 0;\n    }\n    const moveDir = actor.getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action for actor!');\n    return await moveDir(game, actor, { dir: nextStep });\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { getAction } from '../actor/action';\nexport async function wander(game, actor) {\n    // Do we have a wander target?\n    let goalMap = actor.goalMap;\n    if (!goalMap) {\n        //      pick new wander target\n        const costMap = actor.costMap();\n        const loc = GWU.random.matchingLoc(costMap.width, costMap.height, (x, y) => {\n            return costMap[x][y] > 0 && costMap[x][y] !== GWU.path.NO_PATH;\n        });\n        if (!loc || loc[0] < 0 || loc[1] < 0) {\n            console.log('No wander location found!');\n            return 0;\n        }\n        //      build distance map to target\n        goalMap = actor.setGoal(loc[0], loc[1]);\n    }\n    // take the next step to the target\n    const step = GWU.path.nextStep(goalMap, actor.x, actor.y, (x, y) => {\n        if (!game.map.hasActor(x, y))\n            return false;\n        const other = game.map.actorAt(x, y);\n        if (!other) {\n            console.log(`Cell @ ${x},${y} has actor flag, but no actor.`);\n            game.map.cell(x, y).clearCellFlag(Flags.Cell.HAS_ACTOR);\n            return false;\n        }\n        return !actor.canPass(other);\n    });\n    if (!step) {\n        actor.clearGoal();\n        return 0;\n    }\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        return 0; // did nothing\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return result;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nexport function fillSafetyMap(safetyMap, actor, target) {\n    const costGrid = GWU.grid.alloc(actor.costMap());\n    GWU.path.calculateDistances(safetyMap, target.x, target.y, costGrid, true);\n    safetyMap.update((v) => v * -1); // Can set factor to be < -1 e.g. -1.2\n    actor.map.actors.forEach((a) => {\n        if (a.willAttack(actor)) {\n            costGrid[a.x][a.y] = GWU.path.FORBIDDEN; // This is why we allocate a copy\n        }\n    });\n    actor.map.eachCell((c, x, y) => {\n        if (c.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n            safetyMap[x][y] -= GWU.path.AVOIDED; // loop cells are extra good\n        }\n    });\n    GWU.path.rescan(safetyMap, costGrid, true);\n    safetyMap.update((v) => (v <= -30000 ? 30000 : v));\n    GWU.grid.free(costGrid);\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Actor } from './actor';\nimport * as AI from '../ai';\nexport class ActorKind extends Entity.EntityKind {\n    constructor(opts) {\n        super(opts);\n        this.flags = {\n            actor: Flags.Actor.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.vision = {};\n        this.actions = {};\n        this.bump = ['attack'];\n        this.moveSpeed = 100;\n        if (opts.flags) {\n            this.flags.actor = GWU.flag.from(Flags.Actor, this.flags.actor, opts.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, opts.flags);\n        }\n        if (opts.vision) {\n            this.vision.normal = opts.vision;\n        }\n        this.stats = Object.assign({ health: 1, morale: 100 }, opts.stats);\n        if (opts.actions) {\n            Object.assign(this.actions, opts.actions);\n        }\n        if (opts.moveSpeed) {\n            this.moveSpeed = opts.moveSpeed;\n        }\n        this.ai = AI.make(opts.ai || 'default');\n        if (opts.bump) {\n            if (typeof opts.bump === 'string') {\n                opts.bump = opts.bump.split(/[|,]/g).map((t) => t.trim());\n            }\n            if (typeof opts.bump === 'function') {\n                opts.bump = [opts.bump];\n            }\n            if (Array.isArray(opts.bump)) {\n                this.bump = opts.bump.slice();\n            }\n        }\n        if (opts.waterOnly) {\n            this.forbidTileFlags =\n                this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.avoidTileFlags =\n                this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.requireTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n        }\n        else if (opts.lavaOnly) {\n            this.forbidTileFlags = this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n            this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n            this.requireTileFlags |= Flags.Tile.T_LAVA;\n        }\n        else {\n            if (opts.swim) {\n                this.avoidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            else {\n                this.forbidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            if (opts.fly) {\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n                this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_LAVA;\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.avoidTileFlags =\n                    this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n        }\n        this.sidebarFg = GWU.color.from(opts.sidebarFg || Actor.default.sidebarFg);\n    }\n    make(options) {\n        const actor = new Actor(this);\n        this.init(actor, options);\n        return actor;\n    }\n    init(actor, options = {}) {\n        super.init(actor, options);\n        Object.assign(actor.flags, this.flags);\n        // if (options.fov) {\n        //     actor.fov = options.fov;\n        // }\n        // if (options.memory) {\n        //     actor.memory = options.memory;\n        // }\n        if (this.vision.normal) {\n            actor.visionDistance = this.vision.normal;\n        }\n        actor.stats.init(this.stats);\n    }\n    addToMap(actor, map) {\n        super.addToMap(actor, map);\n        // if (this.hasActorFlag(Flags.Actor.HAS_MEMORY)) {\n        //     actor.memory = Memory.get(actor, map);\n        // }\n        // if (this.hasActorFlag(Flags.Actor.USES_FOV)) {\n        //     actor.fov = new GWU.fov.FovSystem(map);\n        //     actor.fov.follow = actor;\n        //     if (actor.memory) {\n        //         actor.fov.callback = actor.memory;\n        //     }\n        // }\n    }\n    removeFromMap(actor) {\n        super.removeFromMap(actor);\n        // if (actor._map && actor.memory) {\n        //     Memory.store(actor, actor._map, actor.memory);\n        // }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    canSeeEntity(_actor, _entity) {\n        return true;\n    }\n    isAbleToSee(_actor, _entity) {\n        return true;\n    }\n    isAbleToSense(_actor, _entity) {\n        return true;\n    }\n    forbidsCell(cell, actor) {\n        if (super.forbidsCell(cell, actor)) {\n            return true;\n        }\n        if (cell.blocksMove())\n            return true;\n        return false;\n    }\n    avoidsCell(cell, actor) {\n        if (super.avoidsCell(cell, actor))\n            return true;\n        if (cell.blocksPathing())\n            return true;\n        return false;\n    }\n    getFlavor(actor, opts) {\n        const flavor = actor.isPlayer() ? 'yourself' : this.flavor;\n        if (opts && opts.action) {\n            return flavor + ' standing';\n        }\n        return flavor;\n    }\n    pickupItem(actor, item, _opts) {\n        if (!GWU.list.push(actor, 'items', item))\n            return false;\n        // TODO - Pickup effects\n        return true;\n    }\n    dropItem(actor, item, _opts) {\n        if (!GWU.list.remove(actor, 'items', item))\n            return false;\n        // TODO - Drop effects\n        return true;\n    }\n    cellCost(cell, actor) {\n        if (this.forbidsCell(cell, actor)) {\n            return cell.hasEntityFlag(Flags.Entity.L_BLOCKS_DIAGONAL)\n                ? GWU.path.OBSTRUCTION\n                : GWU.path.FORBIDDEN;\n        }\n        else if (this.avoidsCell(cell, actor)) {\n            return GWU.path.AVOIDED;\n        }\n        return GWU.path.OK;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ActorKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ActorKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ActorKind) {\n        kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ActorKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ActorKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","import { installAction } from '../action';\n// BUMP\n//\n// prefixes:\n// @ = only for player\n// + = only for ally\n// - = only for opposed\n// = = only for same kind\n// $ = use my action (if used with one of the above, this comes last)\n//\nexport async function bump(game, actor, ctx = {}) {\n    const other = ctx.actor;\n    if (other) {\n        const bumpActions = other.getBumpActions();\n        for (let action of bumpActions) {\n            if (typeof action === 'string') {\n                if (action.startsWith('$')) {\n                    const selfName = action.substring(1);\n                    let selfAction = other.getAction(selfName);\n                    if (selfAction === false) {\n                        throw new Error('Cannot have bump action for self action that actor cannot do: ' +\n                            action);\n                    }\n                    const ctx2 = Object.assign({}, ctx, { actor });\n                    const result = await selfAction(game, other, ctx2);\n                    if (result)\n                        return result;\n                }\n                else {\n                    const config = actor.getAction(action);\n                    if (config === false) {\n                        throw new Error('Cannot configure actor with bump action they cannot do: ' +\n                            action);\n                    }\n                    else {\n                        action = config;\n                    }\n                    const result = await action(game, actor, ctx);\n                    if (result)\n                        return result;\n                }\n            }\n            else {\n                const result = await action(game, actor, ctx);\n                if (result)\n                    return result;\n            }\n        }\n    }\n    const item = ctx.item;\n    if (item) {\n        // TODO - Item Actions\n    }\n    return 0;\n}\ninstallAction('bump', bump);\n","import { installAction } from '../action';\nexport async function standStill(_game, actor, _ctx) {\n    return actor.endTurn();\n}\ninstallAction('standStill', standStill);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\n// export class SpriteFX extends FX {\n//     sprite: GWU.sprite.SpriteConfig;\n//     stepCount: number;\n//     x: number;\n//     y: number;\n//     constructor(\n//         map: Map,\n//         sprite: string | GWU.sprite.SpriteConfig,\n//         x: number,\n//         y: number,\n//         opts: SpriteFxOptions = {}\n//     ) {\n//         const count = opts.blink || 1;\n//         const duration = opts.duration || 1000;\n//         opts.speed = opts.speed || duration / (2 * count - 1);\n//         super(map, opts);\n//         if (typeof sprite === 'string') {\n//             const name = sprite;\n//             sprite = GWU.sprite.sprites[sprite];\n//             if (!sprite) throw new Error('Cannot find sprite! ' + name);\n//         }\n//         this.sprite = sprite;\n//         this.x = x || 0;\n//         this.y = y || 0;\n//         this.stepCount = 2 * count - 1;\n//     }\n//     start() {\n//         this.map.addFx(this.x, this.y, this.sprite);\n//         return super.start();\n//     }\n//     step() {\n//         --this.stepCount;\n//         if (this.stepCount <= 0) return this.stop();\n//         if (this.stepCount % 2 == 0) {\n//             this.map.removeFx(this);\n//         } else {\n//             this.map.addFx(this.x, this.y, this);\n//         }\n//     }\n//     stop(result?: any) {\n//         this.map.removeFx(this);\n//         return super.stop(result);\n//     }\n//     moveDir(dx: number, dy: number) {\n//         return this.moveTo(this.x + dx, this.y + dy);\n//     }\n//     moveTo(x: number, y: number) {\n//         this.map.moveFx(x, y, this);\n//         return true;\n//     }\n// }\nexport async function flashSprite(map, x, y, sprite, duration = 100, count = 1, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ visible: true })\n        .to({ visible: false })\n        .repeat(count)\n        .repeatDelay(duration)\n        .duration(duration)\n        .onUpdate((obj) => {\n        if (obj.visible) {\n            map.addFx(x, y, entity);\n        }\n        else {\n            map.removeFx(entity);\n        }\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nGWU.sprite.install('bump', 'white', 50);\nexport async function hit(map, target, sprite, duration, animator) {\n    sprite = sprite || 'hit';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('hit', 'red', 50);\nexport async function miss(map, target, sprite, duration, animator) {\n    sprite = sprite || 'miss';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('miss', 'green', 50);\nexport async function fadeInOut(map, x, y, sprite, duration = 100, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite).clone();\n    }\n    else {\n        sprite = GWU.sprite.make(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ opacity: 0 })\n        .to({ opacity: 100 })\n        .repeat(2)\n        .yoyo(true)\n        .duration(Math.floor(duration / 2))\n        .onUpdate((obj) => {\n        entity.sprite.opacity = obj.opacity;\n        map.cell(x, y).needsRedraw = true; // we changed the sprite so redraw\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport async function moveSprite(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    const from = { x: GWU.xy.x(source), y: GWU.xy.y(source) };\n    map.addFx(from.x, from.y, entity);\n    let duration = opts.duration ||\n        Math.ceil(16 * (GWU.xy.maxAxisFromTo(source, target) / (opts.speed || 8)));\n    if (GWU.xy.isLoc(target)) {\n        target = { x: target[0], y: target[1] };\n    }\n    const tween = GWU.tween\n        .make(from)\n        .to(target)\n        .duration(duration)\n        .onUpdate((vals) => {\n        // tweens dont update every step, so...\n        // draw line from current pos to vals pos\n        // check each step for blocking...\n        // end at either vals or last blocking spot\n        const dest = { x: entity.x, y: entity.y };\n        const ok = GWU.xy.forLineBetween(dest.x, dest.y, vals.x, vals.y, (x, y) => {\n            if (opts.stepFn) {\n                if (opts.stepFn(x, y)) {\n                    if (!opts.stopBeforeWalls) {\n                        dest.x = x;\n                        dest.y = y;\n                    }\n                    return false;\n                }\n            }\n            else if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (!opts.stopBeforeWalls) {\n                    dest.x = x;\n                    dest.y = y;\n                }\n                return false;\n            }\n            dest.x = x;\n            dest.y = y;\n        });\n        map.moveFx(entity, dest.x, dest.y);\n        if (!ok) {\n            tween.stop();\n        }\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n        return entity;\n    });\n    const animator = opts.animator || map;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport function bolt(map, source, target, sprite, opts = {}) {\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport async function projectile(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    if (sprite.ch && sprite.ch.length == 4) {\n        const dir = GWU.xy.dirFromTo(source, target);\n        let index = 0;\n        if (dir[0] && dir[1]) {\n            index = 2;\n            if (dir[0] != dir[1]) {\n                // remember up is -y\n                index = 3;\n            }\n        }\n        else if (dir[0]) {\n            index = 1;\n        }\n        const ch = sprite.ch[index];\n        sprite = GWU.sprite.make(ch, sprite.fg, sprite.bg);\n    }\n    else if (sprite.ch && sprite.ch.length !== 1) {\n        throw new Error('projectile requires 4 chars - vert,horiz,diag-left,diag-right (e.g: \"|-\\\\/\")');\n    }\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport function beam(map, from, to, sprite, opts = {}) {\n    opts.fade = opts.fade || 100;\n    if (opts.stopAtWalls === undefined)\n        opts.stopAtWalls = true;\n    const line = [];\n    GWU.xy.forLineFromTo(from, to, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (opts.stepFn && opts.stepFn(x, y))\n            return false;\n        if (opts.stopAtWalls || opts.stopBeforeWalls) {\n            if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (opts.stopBeforeWalls)\n                    return false;\n                line.push([x, y]);\n                return false;\n            }\n        }\n        line.push([x, y]);\n        return true;\n    });\n    const duration = opts.duration || Math.ceil(16 * (line.length / (opts.speed || 8)));\n    const animator = opts.animator || map;\n    const promises = [];\n    let lastIndex = -1;\n    const tween = GWU.tween\n        .make({ index: 0 })\n        .to({ index: line.length - 1 })\n        .duration(duration)\n        .onUpdate((vals) => {\n        while (lastIndex < vals.index) {\n            ++lastIndex;\n            const loc = line[lastIndex] || [-1, -1];\n            promises.push(fadeInOut(map, loc[0], loc[1], sprite, opts.fade, animator));\n        }\n    })\n        .onFinish(async () => {\n        await Promise.all(promises);\n        const loc = line[line.length - 1];\n        return { x: loc[0], y: loc[1] };\n    });\n    animator.addAnimation(tween);\n    return tween.start();\n}\nfunction isInShape(shape, cx, cy, allowCenter, x, y) {\n    const sx = Math.abs(x - cx);\n    const sy = Math.abs(y - cy);\n    if (sx == 0 && sy == 0 && !allowCenter)\n        return false;\n    switch (shape) {\n        case '+':\n            return sx == 0 || sy == 0;\n        case 'x':\n        case 'X':\n            return sx == sy;\n        case '*':\n            return sx == 0 || sy == 0 || sx == sy;\n        default:\n            return true;\n    }\n}\nfunction checkExplosionOpts(opts) {\n    opts.speed = opts.speed || 2;\n    opts.fade = opts.fade || 100;\n    opts.shape = opts.shape || 'o';\n    if (opts.center === undefined) {\n        opts.center = true;\n    }\n}\nexport function explosion(map, x, y, radius, sprite, opts = {}) {\n    checkExplosionOpts(opts);\n    opts.animator = opts.animator || map;\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const grid = GWU.grid.alloc(map.width, map.height);\n    const fov = new GWU.fov.FOV({\n        isBlocked(x, y) {\n            return map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE);\n        },\n        hasXY(x, y) {\n            return map.hasXY(x, y);\n        },\n    });\n    fov.calculate(x, y, radius, (x1, y1) => {\n        grid[x1][y1] = 1;\n    });\n    const duration = opts.duration || 32 * (radius / opts.speed);\n    const promises = [];\n    const tween = GWU.tween\n        .make({ r: 0 })\n        .to({ r: radius })\n        .duration(duration)\n        .onUpdate((vals) => {\n        const minX = Math.max(0, x - vals.r);\n        const minY = Math.max(0, y - vals.r);\n        const maxX = Math.min(map.width - 1, x + vals.r);\n        const maxY = Math.min(map.height - 1, y + vals.r);\n        for (let x1 = minX; x1 <= maxX; ++x1) {\n            for (let y1 = minY; y1 <= maxY; ++y1) {\n                if (grid[x1][y1] &&\n                    GWU.xy.distanceBetween(x, y, x1, y1) <= vals.r) {\n                    grid[x1][y1] = 0;\n                    if (isInShape(opts.shape, x, y, opts.center, x1, y1)) {\n                        promises.push(fadeInOut(map, x1, y1, sprite, opts.fade, opts.animator));\n                    }\n                }\n            }\n        }\n    })\n        .onFinish(async (_obj, success) => {\n        GWU.grid.free(grid);\n        await Promise.all(promises);\n        return success;\n    });\n    opts.animator.addAnimation(tween);\n    return tween.start();\n}\n/*\nexport function explosionFor(\n    map: Map,\n    grid: GWU.grid.NumGrid,\n    x: number,\n    y: number,\n    radius: number,\n    sprite: string | GWU.sprite.SpriteConfig,\n    opts: ExplosionOptions = {}\n) {\n    checkExplosionOpts(opts);\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    const animation = new ExplosionFX(\n        map,\n        grid,\n        x,\n        y,\n        radius,\n        sprite,\n        opts.speed,\n        opts.fade,\n        opts.shape,\n        opts.center,\n        opts.stepFn\n    );\n    return opts.playFn!(animation);\n}\n*/\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { bump } from './bump';\nimport { standStill } from './standStill';\nimport * as FX from '../../fx';\nimport * as Flags from '../../flags';\nexport async function moveDir(game, actor, ctx = {}) {\n    //\n    const step = ctx.dir;\n    if (!step)\n        throw new Error('moveDir called with no direction!');\n    const newX = actor.x + step[0];\n    const newY = actor.y + step[1];\n    const map = game.map;\n    const currentCell = map.cell(actor.x, actor.y);\n    const newCell = map.cell(newX, newY);\n    let result = 0;\n    if (actor.forbidsCell(newCell)) {\n        if (ctx.try)\n            return 0;\n        if (actor.isPlayer()) {\n            FX.hit(map, newCell, 'hit', 100);\n            GWU.message.addAt(newCell.x, newCell.y, '{{you}} {{verb bump~}} into {{a cell}}.', { actor, cell: newCell });\n        }\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    if (newCell.blocksMove()) {\n        if (ctx.try)\n            return 0;\n        FX.hit(map, newCell, 'hit', 100);\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    // can we leave?\n    if (!currentCell.canRemoveActor(actor)) {\n        if (ctx.try)\n            return 0;\n        // canActorLeave must add appropriate message\n        return actor.endTurn();\n    }\n    // is there an actor there?\n    if (newCell.hasActor() || newCell.hasItem()) {\n        if (ctx.try)\n            return 0;\n        const ctx2 = { actor: newCell.actor, item: newCell.item };\n        result = await bump(game, actor, ctx2);\n        if (result)\n            return result;\n    }\n    // can we enter?\n    if (!newCell.canAddActor(actor)) {\n        if (ctx.try)\n            return 0;\n        return actor.endTurn();\n    }\n    if (!map.moveActor(actor, newX, newY)) {\n        result = await standStill(game, actor, ctx);\n        return result;\n    }\n    let rate = 100;\n    if (newCell.hasTileFlag(Flags.Tile.T_DEEP_WATER)) {\n        rate = 150;\n    }\n    result = actor.endTurn(rate);\n    return result;\n}\ninstallAction('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { moveDir } from './moveDir';\nexport async function idle(game, actor, _ctx) {\n    if (GWU.random.chance(50)) {\n        // do nothing\n        return actor.endTurn();\n    }\n    // try to step in a random direction\n    const dirIndex = GWU.random.number(4);\n    const dir = GWU.xy.DIRS[dirIndex];\n    const result = await moveDir(game, actor, { dir, try: true });\n    if (result)\n        return result;\n    // stand still\n    return actor.endTurn();\n}\ninstallAction('idle', idle);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nexport async function pickup(game, actor, ctx = {}) {\n    const map = actor.map;\n    if (!map)\n        throw new Error('Actor not on map!');\n    const item = actor.map.itemAt(actor.x, actor.y);\n    if (!item) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, 'Nothing to pickup.');\n        }\n        return 0;\n    }\n    if (actor.avoidsItem(item))\n        return 0;\n    const itemAction = item.getAction('pickup');\n    if (itemAction === false) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, '{{you}} cannot pickup {{the item}}.', {\n                actor,\n                item,\n            });\n        }\n        return 0;\n    }\n    else if (typeof itemAction === 'function') {\n        // You have to do everything\n        const result = await itemAction(game, actor, item);\n        if (result)\n            return result; // handled\n    }\n    // logs error messages\n    if (!actor.canAddItem(item)) {\n        return 0;\n    }\n    if (!actor.map.removeItem(item)) {\n        return 0;\n    }\n    actor.addItem(item);\n    if (!ctx.quiet) {\n        GWU.message.addAt(actor.x, actor.y, '{{you}} {{verb pick[s]up}} {{an item}}.', {\n            actor,\n            item,\n        });\n    }\n    return actor.endTurn();\n}\ninstallAction('pickup', pickup);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Item } from './item';\nexport class ItemKind extends Entity.EntityKind {\n    constructor(config) {\n        super(config);\n        this.flags = {\n            item: Flags.Item.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.actions = {};\n        this.bump = [];\n        if (config.flags) {\n            this.flags.item = GWU.flag.from(Flags.Item, this.flags.item, config.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, config.flags);\n        }\n        if (config.actions) {\n            Object.entries(config.actions).forEach(([key, value]) => {\n                this.actions[key] = value;\n            });\n        }\n        if (config.bump) {\n            if (typeof config.bump === 'string' ||\n                typeof config.bump === 'function') {\n                config.bump = [config.bump];\n            }\n            if (Array.isArray(config.bump)) {\n                this.bump = config.bump.slice();\n            }\n        }\n        this.avoidTileFlags |= Flags.Tile.T_DEEP_WATER;\n        this.forbidTileFlags |= Flags.Tile.T_LAVA | Flags.Tile.T_AUTO_DESCENT;\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Item.default.sidebarFg);\n    }\n    make(options) {\n        const item = new Item(this);\n        this.init(item, options);\n        return item;\n    }\n    init(item, options = {}) {\n        super.init(item, options);\n        Object.assign(item.flags, this.flags);\n        item.quantity = options.quantity || 1;\n    }\n    avoidsCell(cell, item) {\n        if (cell.isDoor())\n            return true;\n        return super.avoidsCell(cell, item);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ItemKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ItemKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ItemKind) {\n        kinds[id] = kind;\n        kind.id = id;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ItemKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ItemKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","export class MapLayer {\n    constructor(map, name = 'layer') {\n        this.changed = false;\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    clear() { }\n    setTile(_x, _y, _tile, _opts) {\n        return false;\n    }\n    clearTile(_x, _y) {\n        return false;\n    }\n    addActor(_x, _y, _actor) {\n        return false;\n    }\n    forceActor(_x, _y, _actor) {\n        return false;\n    }\n    removeActor(_actor) {\n        return false;\n    }\n    addItem(_x, _y, _item) {\n        return false;\n    }\n    forceItem(_x, _y, _item) {\n        return false;\n    }\n    removeItem(_item) {\n        return false;\n    }\n    // Time based changes to the layer (e.g. dissipate gasses)\n    tick(_dt) {\n        return false;\n    }\n}\n","import { MapLayer } from './mapLayer';\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    setTile(x, y, tile, opts) {\n        const cell = this.map.cell(x, y);\n        return cell.setTile(tile, opts);\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // // Bookkeeping for fire, pressure plates and key-activated tiles.\n        // for (let x = 0; x < this.map.width; ++x) {\n        //     for (let y = 0; y < this.map.height; ++y) {\n        //         const cell = this.map.cell(x, y);\n        //         if (\n        //             !cell.hasCellFlag(\n        //                 Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM\n        //             ) &&\n        //             cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)\n        //         ) {\n        //             cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n        //         }\n        //     }\n        // }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nexport class GasLayer extends TileLayer {\n    constructor(map, name = 'gas') {\n        super(map, name);\n        this.volume = GWU.grid.alloc(map.width, map.height, 0);\n    }\n    clear() {\n        this.volume.fill(0);\n    }\n    setTile(x, y, tile, opts = {}) {\n        if (!opts.volume)\n            return false;\n        const cell = this.map.cell(x, y);\n        if (cell.depthTile(tile.depth) === tile) {\n            this.volume[x][y] += opts.volume;\n            return true;\n        }\n        if (!super.setTile(x, y, tile, opts)) {\n            return false;\n        }\n        this.volume[x][y] = opts.volume;\n        this.changed = true;\n        return true;\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        if (cell.clearDepth(this.depth)) {\n            this.volume[x][y] = 0;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        this.volume.copy(other.volume);\n        this.changed = other.changed;\n    }\n    tick(_dt) {\n        if (!this.changed)\n            return false;\n        this.changed = false;\n        const startingVolume = this.volume;\n        this.volume = GWU.grid.alloc(this.map.width, this.map.height);\n        // dissipate the gas...\n        this.dissipate(startingVolume);\n        // spread the gas...\n        this.spread(startingVolume);\n        GWU.grid.free(startingVolume);\n        return true;\n    }\n    dissipate(volume) {\n        volume.update((v, x, y) => {\n            if (!v)\n                return 0;\n            const tile = this.map.cell(x, y).depthTile(this.depth);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (v) {\n                this.changed = true;\n            }\n            else {\n                this.clearTile(x, y);\n            }\n            return v;\n        });\n    }\n    calcOpacity(volume) {\n        return Math.floor(Math.min(volume, 10) * 10);\n    }\n    updateCellVolume(x, y, startingVolume) {\n        let total = 0;\n        let count = 0;\n        let highestVolume = 0;\n        const cell = this.map.cell(x, y);\n        let startingTile = cell.depthTile(this.depth);\n        let highestTile = startingTile;\n        if (cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n            this.volume[x][y] = 0;\n            if (startingVolume[x][y]) {\n                this.clearTile(x, y);\n            }\n            return;\n        }\n        for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n            for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n                const v = startingVolume[i][j];\n                if (!cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n                    ++count;\n                    if (v > highestVolume) {\n                        highestVolume = v;\n                        highestTile = this.map.cell(i, j).depthTile(this.depth);\n                    }\n                }\n                total += v;\n            }\n        }\n        const v = Math.floor((total * 10) / count) / 10;\n        this.volume[x][y] = v;\n        if (v > 0 && highestTile) {\n            if (!startingTile || startingTile !== highestTile) {\n                cell.setTile(highestTile);\n            }\n        }\n        if (v > 0) {\n            cell.needsRedraw = true;\n        }\n    }\n    spread(startingVolume) {\n        for (let x = 0; x < startingVolume.width; ++x) {\n            for (let y = 0; y < startingVolume.height; ++y) {\n                this.updateCellVolume(x, y, startingVolume);\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nimport * as Effect from '../effect';\nconst Depth = Flags.Depth;\nconst ObjectFlags = Flags.Entity;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport class FireLayer extends TileLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n            }\n        }\n        // now spread the fire...\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                    !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                    this.exposeToFire(x, y, false);\n                    for (let d = 0; d < 4; ++d) {\n                        const dir = GWU.xy.DIRS[d];\n                        this.exposeToFire(x + dir[0], y + dir[1]);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    exposeToFire(x, y, alwaysIgnite = false) {\n        let ignitionChance = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n        let fireIgnited = false, explosivePromotion = false;\n        const cell = this.map.cell(x, y);\n        if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n            return false;\n        }\n        // Pick the extinguishing layer with the best priority.\n        cell.eachTile((tile) => {\n            if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n                tile.priority > bestExtinguishingPriority) {\n                bestExtinguishingPriority = tile.priority;\n            }\n        });\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        cell.eachTile((tile) => {\n            if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n                (tile.depth === Depth.GAS ||\n                    tile.priority >= bestExtinguishingPriority)) {\n                const effect = Effect.from(tile.effects.fire);\n                if (effect && effect.chance > ignitionChance) {\n                    ignitionChance = effect.chance;\n                }\n            }\n        });\n        if (alwaysIgnite ||\n            (ignitionChance && this.map.rng.chance(ignitionChance, 10000))) {\n            // If it ignites...\n            fireIgnited = true;\n            // Count explosive neighbors.\n            if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                GWU.xy.eachNeighbor(x, y, (x0, y0) => {\n                    const n = this.map.cell(x0, y0);\n                    if (n.hasEntityFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                        n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                        n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                        ++explosiveNeighborCount;\n                    }\n                });\n                if (explosiveNeighborCount >= 8) {\n                    explosivePromotion = true;\n                }\n            }\n            let event = 'fire';\n            if (explosivePromotion && cell.hasEffect('explode')) {\n                event = 'explode';\n            }\n            // cell.eachTile( (tile) => {\n            //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n            //         if (tile.depth === Depth.GAS) {\n            //             cell.gasVolume = 0;\n            //         } else if (tile.depth === Depth.LIQUID) {\n            //             cell.liquidVolume = 0;\n            //         }\n            //     }\n            // });\n            cell.fireEvent(event, {\n                force: true,\n            });\n            cell.needsRedraw = true;\n        }\n        return fireIgnited;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nconst highlightColor = GWU.color.install('highlight', [100, 100, 0]);\nexport class BasicDrawer {\n    constructor() {\n        this.scent = false;\n    }\n    drawInto(dest, map, opts = {}) {\n        const buffer = dest instanceof GWU.buffer.Buffer ? dest : dest.buffer;\n        const offsetX = opts.offsetX || 0;\n        const offsetY = opts.offsetY || 0;\n        map.clearMapFlag(Flags.Map.MAP_DANCES);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                if (map.hasXY(x + offsetX, y + offsetY)) {\n                    const cell = map.cell(x + offsetX, y + offsetY);\n                    this.drawCell(mixer, map, cell, map.fov);\n                    buffer.drawSprite(x, y, mixer);\n                }\n            }\n        }\n    }\n    drawCell(dest, map, cell, fov) {\n        dest.blackOut();\n        // const isVisible = fov ? fov.isAnyKindOfVisible(cell.x, cell.y) : true;\n        const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        if (cell.needsRedraw || needSnapshot) {\n            this.getAppearance(dest, map, cell);\n            cell.putSnapshot(dest);\n            cell.needsRedraw = false;\n            cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n        else {\n            cell.getSnapshot(dest);\n            if (cell.hasCellFlag(Flags.Cell.COLORS_DANCE)) {\n                map.setMapFlag(Flags.Map.MAP_DANCES);\n            }\n        }\n        this.applyLight(dest, cell, fov);\n        let separate = false;\n        if (cell.memory) {\n            separate = !!((cell.memory.flags.entity & Flags.Entity.L_VISUALLY_DISTINCT)\n            // Flags.Entity.L_LIST_IN_SIDEBAR)\n            );\n        }\n        else {\n            separate = cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT, \n            // Flags.Entity.L_LIST_IN_SIDEBAR,\n            true);\n        }\n        if (cell.hasCellFlag(Flags.Cell.IS_CURSOR)) {\n            dest.bg = highlightColor;\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        else if (cell.hasCellFlag(Flags.Cell.IS_HIGHLIGHTED)) {\n            dest.bg = highlightColor.mix(dest.bg, 35);\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        if (this.scent && map.player) {\n            const s = GWU.clamp(map.player.scent.get(cell.x, cell.y) * 5, 0, 50);\n            if (s) {\n                const c = GWU.color.colors.red;\n                dest.mix(c, 0, s);\n            }\n        }\n        if (separate) {\n            [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n        }\n        return true;\n    }\n    // getCellAppearance(cell: CellType, dest: GWU.sprite.Mixer) {\n    //     dest.blackOut();\n    //     const isVisible = true; // this.fov.isAnyKindOfVisible(x, y);\n    //     const isRevealed = true; // this.fov.isRevealed(x, y);\n    //     const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     if (needSnapshot || (cell.needsRedraw && isVisible)) {\n    //         this.layers.forEach((layer) => layer.putAppearance(dest, cell));\n    //         if (dest.dances) {\n    //             cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n    //         } else {\n    //             cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n    //         }\n    //         dest.bake();\n    //         cell.putSnapshot(dest);\n    //         cell.needsRedraw = false;\n    //         cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     } else {\n    //         cell.getSnapshot(dest);\n    //     }\n    //     if (isVisible) {\n    //         const light = this.light.getLight(cell.x, cell.y);\n    //         dest.multiply(light);\n    //     } else if (isRevealed) {\n    //         dest.scale(50);\n    //     } else {\n    //         dest.blackOut();\n    //     }\n    //     if (cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT)) {\n    //         [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n    //     }\n    // }\n    getAppearance(dest, map, cell) {\n        let tiles = cell.tiles;\n        let actor = null;\n        let item = null;\n        if (cell.memory) {\n            tiles = cell.memory.tiles;\n            item = cell.memory.item;\n        }\n        else {\n            actor = cell.hasActor() ? cell.actor : null;\n            item = cell.hasItem() ? cell.item : null;\n        }\n        const ground = tiles[Flags.Depth.GROUND];\n        const surface = tiles[Flags.Depth.SURFACE];\n        const liquid = tiles[Flags.Depth.LIQUID];\n        const gas = tiles[Flags.Depth.GAS]; // How to get volume!?!?!?!\n        dest.drawSprite(ground.sprite);\n        if (surface) {\n            dest.drawSprite(surface.sprite);\n        }\n        if (liquid) {\n            dest.drawSprite(liquid.sprite);\n        }\n        if (item) {\n            item.drawInto(dest);\n        }\n        if (actor) {\n            actor.drawInto(dest);\n        }\n        if (gas) {\n            const opacity = GWU.rng.cosmetic.number(50) + 25;\n            dest.drawSprite(gas.sprite, opacity);\n        }\n        if (cell.hasFx()) {\n            const fx = map.fxAt(cell.x, cell.y);\n            if (fx)\n                dest.drawSprite(fx.sprite);\n        }\n        if (dest.dances) {\n            cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            map.setMapFlag(Flags.Map.MAP_DANCES);\n        }\n        else {\n            cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n        }\n        dest.bake(true); // apply dancing\n    }\n    applyLight(dest, cell, fov) {\n        const isVisible = !fov || fov.isAnyKindOfVisible(cell.x, cell.y);\n        const isRevealed = !fov || fov.isRevealed(cell.x, cell.y);\n        const light = cell.map.light.getLight(cell.x, cell.y);\n        dest.multiply(light);\n        // TODO - is Clairy\n        // TODO - is Telepathy\n        if (fov && fov.isCursor(cell.x, cell.y)) {\n            dest.invert();\n        }\n        else if (!isVisible) {\n            if (isRevealed) {\n                dest.scale(70);\n            }\n            else {\n                dest.blackOut();\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { Cell } from './cell';\nimport * as TILE from '../tile';\nimport * as Layer from '../layer';\nimport * as Effect from '../effect';\nimport { BasicDrawer } from '../draw/basic';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.locations = {};\n        // _memory: GWU.grid.Grid<CellMemory>;\n        // machineCount = 0;\n        // _seed = 0;\n        this.rng = GWU.rng.random;\n        this.id = 0;\n        this.actors = [];\n        this.items = [];\n        this.fx = [];\n        this.player = null;\n        this._animations = [];\n        this.events = new GWU.events.EventEmitter();\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.data = { seed: 0, machineCount: 0 };\n        if (opts.id) {\n            this.data.id = opts.id;\n        }\n        this.drawer = opts.drawer || new BasicDrawer();\n        this.cells = GWU.grid.make(width, height, (x, y) => new Cell(this, x, y));\n        // this._memory = GWU.grid.make(\n        //     width,\n        //     height,\n        //     (x, y) => new CellMemory(this, x, y)\n        // );\n        if (opts.seed) {\n            this.data.seed = opts.seed;\n            this.rng = GWU.rng.make(opts.seed);\n        }\n        this.light = new GWU.light.LightSystem(this, opts);\n        if (opts.fov === undefined) {\n            opts.alwaysVisible = true;\n        }\n        else if (opts.fov === false) {\n            opts.visible = true;\n        }\n        opts.callback = this.onFovChange.bind(this);\n        this.fov = new GWU.fov.FovSystem(this, opts);\n        this.initLayers();\n        if (opts.player) {\n            this.setPlayer(opts.player);\n        }\n    }\n    get seed() {\n        return this.data.seed;\n    }\n    set seed(v) {\n        this.data.seed = v;\n        this.rng = GWU.rng.make(v);\n    }\n    get width() {\n        return this.cells.width;\n    }\n    get height() {\n        return this.cells.height;\n    }\n    // memory(x: number, y: number): CellMemory {\n    //     return this._memory[x][y];\n    // }\n    // knowledge(x: number, y: number): CellInfoType {\n    //     if (this.fov.isAnyKindOfVisible(x, y)) return this.cell(x,y);\n    //     return this._memory[x][y];\n    // }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Flags.Depth.GROUND, new Layer.TileLayer(this, 'ground'));\n        this.addLayer(Flags.Depth.SURFACE, new Layer.FireLayer(this, 'surface'));\n        this.addLayer(Flags.Depth.GAS, new Layer.GasLayer(this, 'gas'));\n    }\n    addLayer(depth, layer) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // items\n    hasItem(x, y) {\n        return this.cell(x, y).hasItem();\n    }\n    itemAt(x, y) {\n        return this.items.find((i) => i.isAt(x, y)) || null;\n    }\n    eachItem(cb) {\n        this.items.forEach(cb);\n    }\n    addItem(x, y, item, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        // if (!cell.canAddItem(item)) return false;\n        if (cell._addItem(item)) {\n            const index = this.items.indexOf(item);\n            if (index < 0) {\n                this.items.push(item);\n            }\n            item.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddItemEffects(item, cell);\n            }\n            if (index < 0) {\n                this.events.emit('item', this, item, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddItemEffects(item, cell) {\n        if (item.key &&\n            item.key.matches(cell.x, cell.y) &&\n            cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('add_item')) {\n            cell.fireEvent('add_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    addItemNear(x, y, item, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasItem())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (item.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addItem(loc[0], loc[1], item, fireEffects);\n    }\n    removeItem(item, fireEffects = false) {\n        const cell = this.cell(item.x, item.y);\n        // if (!cell.canRemoveItem(item)) return false;\n        if (cell._removeItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, cell);\n            }\n            GWU.arrayDelete(this.items, item);\n            item.removeFromMap();\n            this.events.emit('item', this, item, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveItemEffects(item, cell) {\n        if (item.isKey(cell.x, cell.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('remove_item')) {\n            cell.fireEvent('remove_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    moveItem(item, x, y, fireEffects = false) {\n        if (item.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(item.x, item.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveItem(item)) return false;\n        // if (!newCell.canAddItem(item)) return false;\n        currentCell._removeItem(item);\n        if (newCell._addItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, currentCell);\n                this._fireAddItemEffects(item, newCell);\n            }\n            item.addToMap(this, x, y);\n        }\n        return true;\n    }\n    //  moveItem(item: Item, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = item.x;\n    //     const oldY = item.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[item.depth] as Layer.ItemLayer;\n    //     if (!( layer.removeItem(item))) return false;\n    //     if (!( this.addItem(x, y, item))) {\n    //         layer.forceItem(item.x, item.y, item);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (item.lastSeen) {\n    //     //         this._memory[item.lastSeen.x][item.lastSeen.y].removeItem(item);\n    //     //         this.clearCellFlag(\n    //     //             item.lastSeen.x,\n    //     //             item.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         item.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.item = item;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     item.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    setPlayer(player) {\n        this.player = player;\n    }\n    actorAt(x, y) {\n        return this.actors.find((a) => a.isAt(x, y)) || null;\n    }\n    eachActor(cb) {\n        this.actors.forEach(cb);\n    }\n    addActor(x, y, actor, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        if (!cell.canAddActor(actor))\n            return false;\n        if (cell._addActor(actor)) {\n            const index = this.actors.indexOf(actor);\n            if (index < 0) {\n                this.actors.push(actor);\n            }\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddActorEffects(actor, cell);\n            }\n            if (index < 0) {\n                this.events.emit('actor', this, actor, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddActorEffects(actor, cell) {\n        if (actor.isKey(cell.x, cell.y) && cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('add_player')) {\n            cell.fireEvent('add_player', {\n                player: actor,\n                actor,\n            });\n        }\n        else if (cell.hasEffect('add_actor')) {\n            cell.fireEvent('add_actor', {\n                actor,\n            });\n        }\n    }\n    addActorNear(x, y, actor, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasActor())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addActor(loc[0], loc[1], actor, fireEffects);\n    }\n    removeActor(actor, fireEffects = false) {\n        const cell = this.cell(actor.x, actor.y);\n        if (!cell.canRemoveActor(actor))\n            return false;\n        if (cell._removeActor(actor)) {\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, cell);\n            }\n            actor.removeFromMap();\n            GWU.arrayDelete(this.actors, actor);\n            this.events.emit('actor', this, actor, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveActorEffects(actor, cell) {\n        if (actor.isKey(actor.x, actor.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('remove_player')) {\n            cell.fireEvent('remove_player', {\n                actor,\n                player: actor,\n            });\n        }\n        else if (cell.hasEffect('remove_actor')) {\n            cell.fireEvent('remove_actor', {\n                actor,\n            });\n        }\n    }\n    moveActor(actor, x, y, fireEffects = false) {\n        if (actor.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(actor.x, actor.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveActor(actor)) return false;\n        // if (!newCell.canAddActor(actor)) return false;\n        currentCell._removeActor(actor);\n        if (newCell._addActor(actor)) {\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, currentCell);\n                this._fireAddActorEffects(actor, newCell);\n            }\n        }\n        return true;\n    }\n    //  moveActor(actor: Actor, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = actor.x;\n    //     const oldY = actor.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[actor.depth] as Layer.ActorLayer;\n    //     if (!( layer.removeActor(actor))) return false;\n    //     if (!( layer.addActor(x, y, actor))) {\n    //         layer.forceActor(actor.x, actor.y, actor);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (actor.lastSeen) {\n    //     //         this._memory[actor.lastSeen.x][actor.lastSeen.y].removeActor(\n    //     //             actor\n    //     //         );\n    //     //         this.clearCellFlag(\n    //     //             actor.lastSeen.x,\n    //     //             actor.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         actor.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.actor = actor;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     actor.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    fxAt(x, y) {\n        return this.fx.find((i) => i.isAt(x, y)) || null;\n    }\n    eachFx(cb) {\n        this.fx.forEach(cb);\n    }\n    addFx(x, y, fx) {\n        const cell = this.get(x, y);\n        if (!cell)\n            return false;\n        fx.x = x;\n        fx.y = y;\n        cell._addFx(fx);\n        this.fx.push(fx);\n        this.events.emit('fx', this, fx, true);\n        return true;\n    }\n    moveFx(fx, x, y) {\n        const current = this.get(fx.x, fx.y);\n        const updated = this.get(x, y);\n        if (!updated)\n            return false;\n        current._removeFx(fx);\n        fx.x = x;\n        fx.y = y;\n        updated._addFx(fx);\n        return true;\n    }\n    removeFx(fx) {\n        const cell = this.get(fx.x, fx.y);\n        GWU.arrayDelete(this.fx, fx);\n        if (cell) {\n            cell._removeFx(fx);\n        }\n        this.events.emit('fx', this, fx, false);\n        return true;\n    }\n    // Information\n    // isVisible(x: number, y: number): boolean {\n    //     return this.fov.isAnyKindOfVisible(x, y);\n    // }\n    hasKey(x, y) {\n        const actor = this.actorAt(x, y);\n        if (actor && actor.isKey(x, y))\n            return true;\n        const item = this.itemAt(x, y);\n        if (item && item.isKey(x, y))\n            return true;\n        return false;\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        const getCh = (cell) => {\n            return cell.dump();\n        };\n        this.cells.dump(fmt || getCh, log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    get needsRedraw() {\n        return this.hasMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v)\n            this.setMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n        else\n            this.clearMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    hasCellFlag(x, y, flag) {\n        return this.cell(x, y).hasCellFlag(flag);\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasEntityFlag(x, y, flag) {\n        return this.cell(x, y).hasEntityFlag(flag);\n    }\n    hasTileFlag(x, y, flag) {\n        return this.cell(x, y).hasTileFlag(flag);\n    }\n    highlightPath(path, markCursor = true) {\n        this.clearPath();\n        path.forEach((loc) => {\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_HIGHLIGHTED);\n        });\n        if (markCursor && path[0]) {\n            const loc = path[0];\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_CURSOR);\n        }\n        this.needsRedraw = true;\n    }\n    clearPath() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR | Flags.Cell.IS_HIGHLIGHTED));\n        this.needsRedraw = true;\n    }\n    showCursor(x, y) {\n        this.clearCursor();\n        this.cell(x, y).setCellFlag(Flags.Cell.IS_CURSOR);\n        this.needsRedraw = true;\n    }\n    clearCursor() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR));\n        this.needsRedraw = true;\n    }\n    clear() {\n        this.light.glowLightChanged = true;\n        // this.fov.needsUpdate = true;\n        this.layers.forEach((l) => l.clear());\n    }\n    clearCell(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clear(tile);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cells[i][j];\n                cell.clear(this.isBoundaryXY(i, j) ? boundary : tile);\n            }\n        }\n    }\n    hasTile(x, y, tile\n    // useMemory = false\n    ) {\n        return this.cell(x, y).hasTile(tile);\n        // if (!useMemory) return this.cell(x, y).hasTile(tile);\n        // return this.memory(x, y).hasTile(tile);\n    }\n    forceTile(x, y, tile) {\n        return this.setTile(x, y, tile, { superpriority: true });\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            const name = tile;\n            tile = TILE.get(name);\n            if (!tile)\n                throw new Error('Failed to find tile: ' + name);\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof Layer.TileLayer))\n            return false;\n        return layer.setTile(x, y, tile, opts);\n    }\n    clearTiles(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clearTiles(tile);\n    }\n    tick(dt) {\n        let didSomething = false;\n        this._animations.forEach((a) => {\n            didSomething = a.tick(dt) || didSomething;\n        });\n        this._animations = this._animations.filter((a) => a.isRunning());\n        didSomething = this.fireAll('tick') || didSomething;\n        for (let layer of this.layers) {\n            if (layer && layer.tick(dt)) {\n                didSomething = true;\n            }\n        }\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cell(x, y));\n        });\n        this.layers.forEach((l, depth) => {\n            l.copy(src.layers[depth]);\n        });\n        this.actors = src.actors.slice();\n        this.items = src.items.slice();\n        this.flags.map = src.flags.map;\n        // this.fov.needsUpdate = true;\n        this.light.copy(src.light);\n        this.rng = src.rng;\n        this.data = Object.assign({}, src.data);\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    fire(event, x, y, ctx = {}) {\n        const cell = this.cell(x, y);\n        return cell.fireEvent(event, ctx);\n    }\n    fireAll(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = GWU.grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    GWU.xy.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    this.rng.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= GWU.flag.fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        willFire.forEach((w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & GWU.flag.fl(depth)) {\n                    cell.fireEvent(event, {\n                        force: true,\n                    });\n                }\n            }\n        });\n        GWU.grid.free(willFire);\n        return didSomething;\n    }\n    activateMachine(machineId, originX, originY, ctx = {}) {\n        let didSomething = false;\n        ctx.originX = originX;\n        ctx.originY = originY;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const cell = this.cell(x, y);\n                if (cell.machineId !== machineId)\n                    continue;\n                if (cell.hasEffect('machine')) {\n                    didSomething =\n                        cell.fireEvent('machine', ctx) || didSomething;\n                }\n            }\n        }\n        return didSomething;\n    }\n    // DRAW\n    drawInto(dest, opts) {\n        this.drawer.drawInto(dest, this, opts);\n    }\n    getAppearanceAt(x, y, dest) {\n        const cell = this.cell(x, y);\n        return this.drawer.drawCell(dest, this, cell);\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n            // cell.clearCellFlag(Flags.Cell.LIGHT_CHANGED);\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(cb) {\n        // TODO - Clairy, Telepathy, Detect, etc...\n        if (this.player) {\n            cb(this.player.x, this.player.y, this.player.visionDistance, GWU.fov.FovFlags.PLAYER);\n        }\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    // redrawCell(x: number, y: number): void {\n    //     // if (clearMemory) {\n    //     //     this.clearMemory(x, y);\n    //     // }\n    //     this.cell(x, y).needsRedraw = true;\n    // }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        cell.storeMemory();\n        if (cell.hasActor() &&\n            cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    makeVisible(x, y) {\n        const cell = this.cell(x, y);\n        cell.clearMemory();\n        if (cell.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED |\n                Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasActor() &&\n            !cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasItem() &&\n            !cell.item.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    onFovChange(x, y, isVisible) {\n        if (!isVisible) {\n            this.storeMemory(x, y);\n        }\n        else {\n            this.makeVisible(x, y);\n        }\n    }\n    // Animator\n    addAnimation(a) {\n        this._animations.push(a);\n    }\n    removeAnimation(a) {\n        GWU.arrayDelete(this._animations, a);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Entity as ObjectFlags } from '../flags/entity';\nimport * as Flags from '../flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = GWU.grid.alloc(map.width, map.height);\n    const grid = GWU.grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~Flags.Cell.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & Flags.Cell.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    const newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    Flags.Cell.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & Flags.Cell.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & Flags.Cell.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + GWU.xy.DIRS[dir][0];\n                        const newY = j + GWU.xy.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                Flags.Cell.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount =\n                                                cellCount;\n                                            map.cell(i2, j2).flags.cell &=\n                                                ~Flags.Cell.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= Flags.Cell.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GWU.grid.free(passMap);\n    GWU.grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    function getCount(x, y) {\n        let count = passMap[x][y] == 2 ? 5000 : 1;\n        if (map.cell(x, y).flags.cell & Flags.Cell.IS_IN_AREA_MACHINE) {\n            count = 10000;\n        }\n        return count;\n    }\n    let count = 0;\n    const todo = [[startX, startY]];\n    const free = [];\n    while (todo.length) {\n        const item = todo.pop();\n        free.push(item);\n        const x = item[0];\n        const y = item[1];\n        if (results[x][y])\n            continue;\n        results[x][y] = 1;\n        count += getCount(x, y);\n        for (let dir = 0; dir < 4; dir++) {\n            const newX = x + GWU.xy.DIRS[dir][0];\n            const newY = y + GWU.xy.DIRS[dir][1];\n            if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                passMap[newX][newY] &&\n                !results[newX][newY]) {\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    checkLoopiness(map);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    const todo = GWU.grid.alloc(map.width, map.height, 1);\n    let tryAgain = true;\n    while (tryAgain) {\n        tryAgain = false;\n        todo.forEach((v, x, y) => {\n            if (!v)\n                return;\n            const cell = map.cell(x, y);\n            todo[x][y] = 0;\n            if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                return;\n            }\n            // find an unloopy neighbor to start on\n            for (sdir = 0; sdir < 8; sdir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[sdir][0];\n                newY = y + GWU.xy.CLOCK_DIRS[sdir][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const cell = map.cell(newX, newY);\n                if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    break;\n                }\n            }\n            if (sdir == 8) {\n                // no unloopy neighbors\n                return; // leave cell loopy\n            }\n            // starting on this unloopy neighbor,\n            // work clockwise and count up:\n            // (a) the number of strings of loopy neighbors, and\n            // (b) the length of the longest such string.\n            numStrings = maxStringLength = currentStringLength = 0;\n            inString = false;\n            for (dir = sdir; dir < sdir + 8; dir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[dir % 8][0];\n                newY = y + GWU.xy.CLOCK_DIRS[dir % 8][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const newCell = map.cell(newX, newY);\n                if (newCell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    currentStringLength++;\n                    if (!inString) {\n                        numStrings++;\n                        inString = true;\n                        if (numStrings > 1) {\n                            break; // more than one string here; leave loopy\n                        }\n                    }\n                }\n                else if (inString) {\n                    if (currentStringLength > maxStringLength) {\n                        maxStringLength = currentStringLength;\n                    }\n                    currentStringLength = 0;\n                    inString = false;\n                }\n            }\n            if (inString && currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            if (numStrings == 1 && maxStringLength <= 4) {\n                cell.clearCellFlag(Flags.Cell.IS_IN_LOOP);\n                // console.log(x, y, numStrings, maxStringLength);\n                // map.dump((c) =>\n                //     c.hasCellFlag(Flags.Cell.IS_IN_LOOP) ? '*' : ' '\n                // );\n                for (dir = 0; dir < 8; dir++) {\n                    newX = x + GWU.xy.CLOCK_DIRS[dir][0];\n                    newY = y + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) &&\n                        map.cell(newX, newY).hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                        todo[newX][newY] = 1;\n                        tryAgain = true;\n                    }\n                }\n            }\n        });\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & Flags.Cell.IS_IN_LOOP &&\n                    left.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = GWU.grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    let newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            Flags.Cell.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    GWU.grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n","import * as GWU from 'gw-utils';\nimport { Map } from './map';\nexport class Snapshot {\n    constructor(map) {\n        this.map = new Map(map.width, map.height);\n        this.version = 0;\n    }\n}\nexport class SnapshotManager {\n    constructor(map) {\n        this.version = 0;\n        this.layerVersion = [];\n        this.lightVersion = 0;\n        // fovVersion = 0;\n        this.free = [];\n        this.map = map;\n        this.cellVersion = GWU.grid.make(map.width, map.height);\n        this.layerVersion = map.layers.map(() => 1);\n    }\n    takeNew() {\n        ++this.version;\n        const snap = this.free.length\n            ? this.free.pop()\n            : new Snapshot(this.map);\n        snap.map.flags.map = this.map.flags.map;\n        this.cellVersion.update((v, x, y) => {\n            const srcCell = this.map.cell(x, y);\n            if (srcCell.changed) {\n                v = this.version;\n            }\n            if (v !== snap.version) {\n                const destCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n            }\n            return v;\n        });\n        // systems\n        if (this.map.light.changed) {\n            this.lightVersion = this.version;\n            this.map.light.changed = false;\n        }\n        if (snap.version !== this.lightVersion) {\n            snap.map.light.copy(this.map.light);\n        }\n        // if (this.map.fov.changed) {\n        //     this.fovVersion = this.version;\n        //     this.map.fov.changed = false;\n        // }\n        // if (snap.version !== this.fovVersion) {\n        //     snap.map.fov.copy(this.map.fov);\n        // }\n        // layers\n        this.map.layers.forEach((layer, index) => {\n            const snapLayer = snap.map.layers[index];\n            if (layer.changed) {\n                this.layerVersion[index] = this.version;\n            }\n            if (this.layerVersion[index] !== snap.version) {\n                snapLayer.copy(layer);\n            }\n        });\n        snap.version = this.version;\n        return snap;\n    }\n    revertMapTo(snap) {\n        this.cellVersion.update((v, x, y) => {\n            if (v < snap.version)\n                return v;\n            const destCell = this.map.cell(x, y);\n            if (v > snap.version || destCell.changed) {\n                const srcCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n                return snap.version;\n            }\n            return v;\n        });\n        // systems\n        if (snap.version < this.lightVersion || this.map.light.changed) {\n            this.map.light.copy(snap.map.light);\n            this.lightVersion = snap.version;\n        }\n        // if (snap.version < this.fovVersion || this.map.fov.changed) {\n        //     this.map.fov.copy(snap.map.fov);\n        //     this.fovVersion = snap.version;\n        // }\n        // layers\n        this.layerVersion.forEach((v, index) => {\n            if (v < snap.version)\n                return;\n            const destLayer = this.map.layers[index];\n            if (v > snap.version || destLayer.changed) {\n                const srcLayer = snap.map.layers[index];\n                destLayer.copy(srcLayer);\n                this.layerVersion[index] = snap.version;\n            }\n        });\n        this.version = snap.version;\n    }\n    release(snap) {\n        this.free.push(snap);\n    }\n}\n","import * as GWU from 'gw-utils';\nexport function isHallway(map, x, y) {\n    return (GWU.xy.arcCount(x, y, (i, j) => {\n        return map.cell(i, j).isPassable();\n    }) > 1);\n}\n","import { Map } from './map';\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile === undefined) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === undefined) {\n        opts.boundary = 'WALL';\n    }\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n        map.light.update();\n    }\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    // // In case we reveal the map or make it all visible we need our memory set correctly\n    // map.cells.forEach((_c, x, y) => {\n    //     if (map.fov.isRevealed(x, y)) {\n    //         map.storeMemory(x, y, true); // with snapshot\n    //     }\n    // });\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n","import * as GWU from 'gw-utils';\nimport { Horde as Flags } from '../flags/horde';\nimport * as Map from '../map';\nimport * as Actor from '../actor';\nexport class Horde {\n    // requiredTile: string | null = null;\n    constructor(config) {\n        this.tags = [];\n        this.members = {};\n        // blueprintId: string | null = null;\n        this.flags = { horde: 0 };\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        this.leader = config.leader;\n        if (config.members) {\n            Object.entries(config.members).forEach(([id, range]) => {\n                this.members[id] = GWU.range.make(range);\n            });\n        }\n        this.frequency = GWU.frequency.make(config.frequency || 100);\n        // this.blueprintId = config.blueprintId || null;\n        this.flags.horde = GWU.flag.from(Flags, config.flags);\n        // if (config.requiredTile) this.requiredTile = config.requiredTile;\n    }\n    spawn(map, x = -1, y = -1, opts = {}) {\n        var _a;\n        opts.canSpawn = opts.canSpawn || GWU.TRUE;\n        opts.rng = opts.rng || map.rng;\n        opts.machine = (_a = opts.machine) !== null && _a !== void 0 ? _a : 0;\n        const leader = this._spawnLeader(map, x, y, opts);\n        if (!leader)\n            return null;\n        this._spawnMembers(leader, map, opts);\n        return leader;\n    }\n    _spawnLeader(map, x, y, opts) {\n        const leaderKind = Actor.get(this.leader);\n        if (!leaderKind) {\n            throw new Error('Failed to find leader kind = ' + this.leader);\n        }\n        if (x >= 0 && y >= 0) {\n            if (leaderKind.avoidsCell(map.cell(x, y)))\n                return null;\n        }\n        const leader = Actor.make(leaderKind, { machineHome: opts.machine });\n        if (!leader)\n            throw new Error('Failed to make horde leader - ' + this.leader);\n        if (x < 0 || y < 0) {\n            [x, y] = this._pickLeaderLoc(leader, map, opts) || [-1, -1];\n            if (x < 0 || y < 0) {\n                return null;\n            }\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addLeader(leader, map, x, y, opts)) {\n            return null;\n        }\n        return leader;\n    }\n    _addLeader(leader, map, x, y, _opts) {\n        return map.addActor(x, y, leader);\n    }\n    _addMember(member, map, x, y, leader, _opts) {\n        member.leader = leader;\n        return map.addActor(x, y, member);\n    }\n    _spawnMembers(leader, map, opts) {\n        const entries = Object.entries(this.members);\n        if (entries.length == 0)\n            return 0;\n        let count = 0;\n        entries.forEach(([kindId, countRange]) => {\n            const count = countRange.value(opts.rng);\n            for (let i = 0; i < count; ++i) {\n                this._spawnMember(kindId, map, leader, opts);\n            }\n        });\n        return count;\n    }\n    _spawnMember(kindId, map, leader, opts) {\n        const kind = Actor.get(kindId);\n        if (!kind) {\n            throw new Error('Failed to find member kind = ' + kindId);\n        }\n        const member = Actor.make(kind, { machineHome: opts.machine });\n        if (!member)\n            throw new Error('Failed to make horde member - ' + kindId);\n        const [x, y] = this._pickMemberLoc(member, map, leader, opts) || [\n            -1, -1,\n        ];\n        if (x < 0 || y < 0) {\n            return null;\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addMember(member, map, x, y, leader, opts)) {\n            return null;\n        }\n        return member;\n    }\n    _pickLeaderLoc(leader, map, opts) {\n        let loc = opts.rng.matchingLoc(map.width, map.height, (x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            if (!opts.canSpawn(x, y))\n                return false;\n            if (leader.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n    _pickMemberLoc(actor, map, leader, opts) {\n        let loc = opts.rng.matchingLocNear(leader.x, leader.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            // if (map.fov.isAnyKindOfVisible(x, y)) return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Horde } from './horde';\nimport { Horde as Flags } from '../flags/horde';\nexport const hordes = {};\nexport function install(id, horde) {\n    if (typeof horde === 'string') {\n        horde = { leader: horde };\n    }\n    if (!(horde instanceof Horde)) {\n        horde = new Horde(horde);\n    }\n    hordes[id] = horde;\n    return horde;\n}\nexport function installAll(hordes) {\n    Object.entries(hordes).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function from(id) {\n    if (id instanceof Horde) {\n        return id;\n    }\n    if (typeof id === 'string') {\n        return hordes[id];\n    }\n    return new Horde(id);\n}\nexport function random(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n        flags: 0,\n        forbidFlags: 0,\n        depth: 0,\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    const rng = opts.rng || GWU.rng.random;\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    if (opts.flags) {\n        if (typeof opts.flags === 'string') {\n            opts.flags\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .forEach((flag) => {\n                if (flag.startsWith('!')) {\n                    const key = flag.substring(1);\n                    match.forbidFlags |= Flags[key];\n                }\n                else {\n                    match.flags |= Flags[flag];\n                }\n            });\n        }\n    }\n    if (opts.forbidFlags) {\n        match.forbidFlags = GWU.flag.from(Flags, opts.forbidFlags);\n    }\n    if (opts.depth) {\n        match.depth = opts.depth;\n    }\n    if (match.depth && opts.oodChance) {\n        while (rng.chance(opts.oodChance)) {\n            match.depth += 1;\n        }\n        match.forbidFlags |= Flags.HORDE_NEVER_OOD;\n    }\n    const matches = Object.values(hordes).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        if (match.flags && !(k.flags.horde & match.flags)) {\n            return false;\n        }\n        if (match.forbidFlags && k.flags.horde & match.forbidFlags) {\n            return false;\n        }\n        return true;\n    });\n    if (match.depth) {\n        return rng.item(matches) || null;\n    }\n    const depth = match.depth;\n    const weights = matches.map((h) => h.frequency(depth));\n    const index = rng.weighted(weights);\n    if (index < 0)\n        return null;\n    return matches[index];\n}\n","export const actions = {};\nexport function installCommand(name, fn) {\n    actions[name] = fn;\n}\nexport function getCommand(name) {\n    return actions[name];\n}\n","import { installCommand } from './command';\nimport * as Actor from '../actor';\n// COMMANDS\n// this === GAME\nexport async function moveDir(actor, e) {\n    const dir = e.dir;\n    if (!actor.map || !dir)\n        return -1;\n    return Actor.actions.moveDir(this, actor, e);\n}\ninstallCommand('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installCommand } from './command';\nexport async function pickup(actor, _ev) {\n    if (!actor.map)\n        return -1;\n    const playerAction = actor.getAction('pickup');\n    if (!playerAction) {\n        GWU.message.addAt(actor.x, actor.y, 'You cannot pickup items.');\n        return actor.endTurn();\n    }\n    else {\n        // You have to do everything\n        const result = await playerAction(this, actor);\n        if (result)\n            return result; // handled\n    }\n    // Should never get here, but...\n    const standStill = actor.getAction('standStill');\n    if (!standStill)\n        throw new Error('Actor cannot stand still.');\n    return standStill(this, actor);\n}\ninstallCommand('pickup', pickup);\n","// export * from './memory';\n// export * from './system';\nexport const empty = {};\n","/*\n    Attributes\n    ========================\n\n    To configure attributes, set the defaults:\n\n    Attribute.install(')\n\n    const attr = new Attributes(10);\n\n    attr.set('str', 10);\n    attr.set('dex', 10);\n    ...\n    attr.set('chr', 10);\n\n    // to get the current value\n    attr.get('str');\n\n    // To raise an attribute permanently\n    attr.gain('chr', 1);\n\n    // To raise an attribute temporarily\n    attr.gain('chr', 1, false);\n\n    // To lower an attribute permanently\n    attr.drain('chr', 1, true);\n\n    // to lower an attribute temporarily\n    attr.drain('chr', 1);\n\n    // to restore (remove) all temporary changes\n    attr.restore();\n\n    // to add a temporary change that can be removed by itself\n    attr.addBonus('str', 1);\n\n    // to remove the bonus\n    attr.clearBonus('str', 1);\n\n    // adjustments (bonuses) are also possible via:\n    attr.adjust('str', { bonus: 1 });\n\n    // But adjustments can also set the\n    attr.adjust('str', { fixed: 14 });      // temporarily sets base\n    attr.adjust('str', { base: 21 });       // resets the base\n    attr.adjust('str', { restore: true });  // removes all bonuses/penalties\n    attr.adjust('str', { min: 10 });        // limits value\n    attr.adjust('str', { max: 30 });        // limits value\n    attr.adjust('str', { sustain: true });  // turns off lowering values\n*/\nexport class Attributes {\n    constructor(baseValues) {\n        this._base = {};\n        this._max = {};\n        this._bonus = {};\n        this._sustain = {};\n        this._value = {};\n        this.changed = null;\n        this.init(baseValues);\n    }\n    init(baseValues) {\n        for (let k in attributes) {\n            const v = typeof baseValues === 'number' ? baseValues : attributes[k];\n            this.set(k, v);\n        }\n        if (typeof baseValues !== 'number') {\n            for (let k in baseValues) {\n                this.set(k, baseValues[k]);\n            }\n        }\n    }\n    forEach(fn) {\n        Object.keys(attributes).forEach((k) => fn(this.get(k)));\n    }\n    // modifier(name: string) {\n    //     return Math.floor((this.get(name) - 10) / 2);\n    // }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    set(name, value = 0) {\n        this._value[name] = value;\n        this._base[name] = value;\n        this._max[name] = value;\n        this._bonus[name] = [];\n        return value;\n    }\n    base(name) {\n        return this._base[name] || 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    sustain(name) {\n        return this._sustain[name] || false;\n    }\n    gain(name, delta, raiseMax = true) {\n        if (delta < 0 && this._sustain[name])\n            return 0;\n        this._base[name] += delta;\n        if (raiseMax && this._base[name] > this._max[name]) {\n            this._max[name] = this._base[name];\n        }\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    drain(name, loss, lowerMax = false) {\n        if (loss < 0)\n            loss = -loss;\n        const changed = this.gain(name, -loss, false);\n        if (changed && lowerMax) {\n            this._max[name] = this._base[name];\n        }\n        return changed;\n    }\n    restore(name) {\n        this._base[name] = this._max[name];\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    addBonus(name, bonus) {\n        return this._addBonus(name, { bonus });\n    }\n    _addBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        if (this._value[name] === undefined) {\n            this.set(name, 0);\n        }\n        this._bonus[name].push(bonus);\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    clearBonus(name, bonus) {\n        return this._clearBonus(name, { bonus });\n    }\n    _clearBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        let arr = this._bonus[name] || [];\n        let key = JSON.stringify(bonus);\n        let index = arr.findIndex((o) => {\n            return JSON.stringify(o) == key;\n        });\n        if (index > -1) {\n            arr.splice(index, 1);\n            let old = this.get(name);\n            return this._calcValue(name) - old;\n        }\n        return 0;\n    }\n    _calcValue(name) {\n        let allAdjustments = {};\n        this._bonus[name].forEach((adj) => this._applyAdjustment(allAdjustments, adj));\n        this._sustain[name] = allAdjustments.sustain || false;\n        let value = this._base[name] || 0;\n        if (allAdjustments.fixed !== undefined) {\n            value = allAdjustments.fixed;\n        }\n        else {\n            value += allAdjustments.bonus || 0;\n            if (allAdjustments.min !== undefined) {\n                value = Math.max(allAdjustments.min, value);\n            }\n            if (allAdjustments.max !== undefined) {\n                value = Math.min(allAdjustments.max, value);\n            }\n        }\n        return (this._value[name] = value);\n    }\n    adjust(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.gain(name, adj.base);\n        }\n        else if (adj.restore) {\n            delta = this.restore(name);\n            if (delta == 0)\n                delta = undefined;\n        }\n        else {\n            delta = this._addBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    clearAdjustment(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.drain(name, adj.base, true);\n        }\n        else if (adj.restore) {\n            // do nothing...\n        }\n        else {\n            delta = this._clearBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    _applyAdjustment(total, opts) {\n        if (opts.bonus) {\n            total.bonus = (total.bonus || 0) + opts.bonus;\n        }\n        if (opts.fixed !== undefined) {\n            total.fixed = Math.max(total.fixed || 0, opts.fixed);\n        }\n        if (opts.min !== undefined) {\n            total.min = Math.max(total.min || 0, opts.min);\n        }\n        if (opts.max !== undefined) {\n            total.max = Math.max(total.max || 0, opts.max);\n        }\n        if (opts.sustain !== undefined) {\n            total.sustain = opts.sustain;\n        }\n    }\n}\nexport const attributes = {};\nexport function installAttribute(attr) {\n    if (typeof attr === 'string') {\n        attributes[attr] = 0;\n        return;\n    }\n    // clear existing\n    Object.keys(attributes).forEach((k) => {\n        delete attributes[k];\n    });\n    Object.assign(attributes, attr);\n}\nexport function makeAttributes(defaults) {\n    return new Attributes(defaults);\n}\n/*\nfunction adjust(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = undefined;\n        if (a.base) {\n            delta = being.attributes.addBase(a.name, a.base);\n        } else if (a.restore) {\n            delta = being.attributes.restoreBase(a.name);\n            if (delta == 0) delta = undefined;\n        } else {\n            delta = being.attributes.addBonus(a.name, a);\n        }\n        if (delta !== undefined) {\n            out[a.name] = delta;\n        }\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n\n    return results;\n};\n\n function clearAdjustment(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = 0;\n        delta += being.attributes.clearBonus(a.name, a);\n\n        out[a.name] = delta;\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n    return results;\n};\n\nRUT.Attribute.rollAttributes = function (opts = {}) {\n    let dice = [];\n    let total = 0;\n\n    if (RUT.Calc.isValue(opts)) opts = { value: opts };\n    Object.defaults(opts, RUT.Config.Attribute.rollAttributes);\n\n    let attributes = RUT.Config.Attributes;\n\n    let min_average = Math.max(opts.min_average - 5, 0);\n    let max_average = Math.min(opts.max_average - 5, RUT.Config.ATTRIBUTE_MAX);\n\n    let min_total = min_average * attributes.length;\n    let max_total = max_average * attributes.length;\n\n    do {\n        total = 0;\n        dice = [];\n        for (let i = 0; i < 18; ++i) {\n            dice.push(RUT.RNG.rollDie(3 + (i % 3)));\n            total += dice[i];\n        }\n    } while (total <= min_total || total > max_total);\n\n    let values = attributes.reduce((out, name, i) => {\n        let index = 3 * i;\n        let value = 5 + dice[index] + dice[index + 1] + dice[index + 2];\n        if (opts.value) {\n            value = RUT.Calc.calc(opts.value);\n        } else if (opts[name]) {\n            value = RUT.Calc.calc(opts[name]);\n        }\n        out[name] = value;\n        return out;\n    }, {});\n    return values;\n};\nRUT.Config.Attribute.rollAttributes = { min_average: 11, max_average: 14 };\n*/\n/*\nexport function normalize_adjustment(args: ) {\n    if (args.length == 3) {\n        let opts = args[2];\n        if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        let name = `${args[0]}.${args[1]}`;\n        return [Object.assign({ name }, opts)];\n    }\n    if (args.length == 2) {\n        let opts = args[1];\n        if (opts === true || opts === false) {\n            opts = { has: opts };\n        } else if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        return [Object.assign({ name: args[0] }, opts)];\n    }\n\n    let opts = args[0];\n    if (opts.name) {\n        return [opts];\n    }\n    if (opts.attribute) {\n        opts.name = opts.attribute;\n        return [opts];\n    }\n    if (opts.restore) {\n        if (opts.restore == 'all') {\n            return RUT.Attributes.map((a) => {\n                return { name: a, restore: true };\n            });\n        }\n        return [{ name: opts.restore, restore: true }];\n    }\n    if (opts.skill) {\n        opts.name = opts.skill;\n        return [opts];\n    }\n    if (opts.stat) {\n        opts.name = opts.stat;\n        return [opts];\n    }\n    if (opts.save) {\n        opts.name = opts.save;\n        return [opts];\n    }\n    // if (opts.saves) {\n    //   opts.name = opts.saves;\n    //   return [opts];\n    // }\n    if (opts.ability) {\n        opts.name = opts.ability;\n        return [opts];\n    }\n\n    // now we assume that each key is for a separate skill...\n    return Object.keys(opts).reduce((out, key) => {\n        let opt = opts[key];\n        if (key == 'reset' || key == 'restore') {\n            if (typeof opt == 'string') opt = [opt];\n            opt.forEach((a) => {\n                out.push({ name: a, restore: true });\n            });\n        } else {\n            if (typeof opt == 'number' || Array.isArray(opt)) {\n                opt = { bonus: opt };\n            } else if (opt === true || opt === false) {\n                opt = { has: opt };\n            } else if (opt == 'reset' || opt == 'restore') {\n                opt = { restore: true };\n            } else if (opt == 'sustain') {\n                opt = { sustain: true };\n            }\n            out.push(Object.assign({ name: key }, opt));\n        }\n        return out;\n    }, []);\n}\n*/\n","/*\nSkills\n\nSkills generally fall into 2 categories - binary and progressive.\n\n\n// Create a skills object\nconst skills = new Skills();\n\n// set skills\nskills.set('diving', true); // = { has: true, level: 0 }\nskills.set('diving', 10); // = { has: true, level: 10 }\n\nskills.remove('diving'); // {}\n\n// adjustments\nskills.adjust('diving', { bonus: 1 });\nskills.adjust('diving', { disadvantage: true });\nskills.adjust('diving', { advantage: 3 });\nskills.adjust('diving', { fixed: 10 });\nskills.adjust('diving', { critical: 5 });\n\n\n\n\n\n*/\nclass Skill {\n    constructor(name) {\n        this.name = name;\n    }\n    get has() {\n        return this._bool('_has');\n    }\n    get level() {\n        return this._int('_level');\n    }\n    get disadvantage() {\n        return this._bool('_disadvantage');\n    }\n    get advantage() {\n        return this._bool('_advantage');\n    }\n    get fixed() {\n        return this._int('_fixed');\n    }\n    get bonus() {\n        const b = this._int('_bonus') || 0;\n        if (!this._parent)\n            return b;\n        return b + this._parent.bonus;\n    }\n    get succeed() {\n        return this._bool('_succeed');\n    }\n    get fail() {\n        return this._bool('_fail');\n    }\n    set(value) {\n        if (value === false) {\n            this._has = false;\n            this._level = 0;\n        }\n        else {\n            this._has = true;\n            this._level = value === true ? 0 : value;\n        }\n    }\n    _value(name) {\n        if (this[name] !== undefined) {\n            // @ts-ignore\n            return this[name];\n        }\n        if (this._parent) {\n            // @ts-ignore\n            return this._parent._value(name);\n        }\n        return undefined;\n    }\n    _bool(name) {\n        return !!this._value(name);\n    }\n    _int(name) {\n        return this._value(name);\n    }\n    adjust(adj) {\n        Object.entries(adj).forEach(([key, value]) => {\n            key = '_' + key;\n            if (value === undefined)\n                return;\n            if (key === '_fixed') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = Math.max(value, this._fixed || 0);\n            }\n            else if (key === '_bonus') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = value + (this._bonus || 0);\n            }\n            // @ts-ignore\n            this[key] = value;\n        });\n    }\n    clear(adj) {\n        Object.keys(adj).forEach((key) => {\n            key = '_' + key;\n            // @ts-ignore\n            if (this[key] !== undefined) {\n                // @ts-ignore\n                this[key] = undefined;\n            }\n        });\n    }\n}\nexport class Skills {\n    constructor(vals = {}) {\n        this._skills = {};\n        Object.entries(vals).forEach(([key, value]) => {\n            this.set(key, value);\n        });\n    }\n    set(name, value) {\n        const s = this.get(name);\n        s.set(value);\n        return s;\n    }\n    get(name) {\n        let s = this._skills[name];\n        if (s)\n            return s;\n        s = this._skills[name] = new Skill(name);\n        const index = name.lastIndexOf('.');\n        if (index > 0) {\n            s._parent = this.get(name.substring(0, index));\n        }\n        else {\n            s.set(false);\n        }\n        return s;\n    }\n    adjust(name, adj) {\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        let s = this.get(name);\n        s.adjust(adj);\n        return s;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Scent {\n    constructor(player) {\n        this._player = player;\n    }\n    get(x, y) {\n        if (!this._data)\n            return 0;\n        return this._data[x][y];\n    }\n    clear() {\n        if (!this._player.map)\n            return;\n        if (this._data)\n            GWU.grid.free(this._data);\n        this._data = GWU.grid.alloc(this._player.map.width, this._player.map.height);\n    }\n    update() {\n        if (!this._player.map)\n            return;\n        const scent = this._player.data.scent || 10;\n        this._data[this._player.x][this._player.y] = scent;\n        const updated = GWU.grid.alloc(this._data.width, this._data.height);\n        const map = this._player.map;\n        this._data.forEach((v, x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.blocksMove())\n                return;\n            let highest = v;\n            GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n                if (!this._data.hasXY(x1, y1))\n                    return;\n                const v1 = this._data[x1][y1];\n                if (v1 > highest) {\n                    highest = v1;\n                }\n            }, true);\n            const delta = cell.hasLiquid() ? 3 : 1;\n            updated[x][y] = Math.max(0, highest - delta);\n        });\n        GWU.grid.free(this._data);\n        this._data = updated;\n    }\n    nextDir(x, y) {\n        const v = this._data[x][y] || 0;\n        if (!v)\n            return null;\n        let highest = v;\n        let highestLoc = [];\n        GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n            if (!this._data.hasXY(x1, y1))\n                return;\n            const v1 = this._data[x1][y1];\n            if (v1 == highest) {\n                highestLoc.push([x1, y1]);\n            }\n            else if (v1 > highest) {\n                highestLoc = [[x1, y1]];\n                highest = v1;\n            }\n        }, false);\n        if (!highestLoc.length)\n            return null;\n        const loc = GWU.random.item(highestLoc);\n        loc[0] = loc[0] - x;\n        loc[1] = loc[1] - y;\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor';\nimport { Scent } from './scent';\nimport * as Flags from '../flags';\nexport class Player extends Actor {\n    constructor(kind) {\n        super(kind);\n        this.scent = new Scent(this);\n    }\n    interrupt(other) {\n        if (this.hasGoal()) {\n            this.clearGoal();\n            GWU.message.addAt(this.x, this.y, '{{you}} {{verb see~}} {{a other}}.', {\n                actor: this,\n                verb: 'see',\n                other,\n            });\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.map) {\n            if (this.map.fov.update()) {\n                this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n            }\n            this.scent.update();\n        }\n        return super.endTurn(pct);\n    }\n    addToMap(map, x, y) {\n        if (!super.addToMap(map, x, y))\n            return false;\n        this.scent.clear();\n        return true;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            let loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            loc = loc || [this.x, this.y];\n            x = loc[0];\n            y = loc[1];\n        }\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    nextGoalStep() {\n        const map = this.map;\n        if (!map)\n            return null;\n        const goalMap = this.goalMap;\n        const step = GWU.path.nextStep(goalMap, this.x, this.y, (x, y) => map.hasActor(x, y) && map.actorAt(x, y) !== this);\n        return step;\n    }\n    pathTo(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (args.length === 1) {\n            x = args[0].x;\n            y = args[0].y;\n        }\n        const map = this.map;\n        if (!map)\n            return null;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            const loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            if (!loc)\n                return null;\n            x = loc[0];\n            y = loc[1];\n        }\n        const path = GWU.path.getPath(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y), true);\n        return path;\n    }\n}\nPlayer.default = {\n    ch: '@',\n    fg: 'white',\n    name: 'You',\n    swim: true,\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport * as Actor from '../actor';\nimport * as Skills from './skill';\nimport * as Attributes from './attribute';\nimport { Player } from './player';\nimport * as Flags from '../flags';\nexport class PlayerKind extends Actor.ActorKind {\n    constructor(opts = {}) {\n        super((() => {\n            if (!opts.sprite) {\n                opts.ch = opts.ch || Player.default.ch;\n                opts.fg = opts.fg || Player.default.fg;\n            }\n            if (!opts.name) {\n                opts.name = Player.default.name;\n            }\n            if (opts.swim === undefined) {\n                opts.swim = Player.default.swim;\n            }\n            return opts;\n        })());\n        this.flags.actor |= Flags.Actor.IS_PLAYER;\n        this.flags.entity |= Flags.Entity.L_ALWAYS_PLURAL;\n        this.attributes = new Attributes.Attributes(opts.attributes || {});\n        this.skills = new Skills.Skills(opts.skills || {});\n    }\n    make(options) {\n        const actor = new Player(this);\n        this.init(actor, options);\n        return actor;\n    }\n    cellCost(cell, player) {\n        const map = cell.map;\n        if (!map.fov.isRevealed(cell.x, cell.y))\n            return GWU.path.FORBIDDEN;\n        return super.cellCost(cell, player);\n    }\n}\n","import { PlayerKind } from './kind';\nimport * as Actor from '../actor';\nexport function make(id, makeOptions) {\n    let kind;\n    if (typeof id === 'string') {\n        // @ts-ignore\n        kind = Actor.get(id);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + id);\n        if (!(kind instanceof PlayerKind))\n            throw new Error('Not a player kind.');\n    }\n    else if (id instanceof PlayerKind) {\n        kind = id;\n    }\n    else {\n        kind = makeKind(id);\n    }\n    return kind.make(makeOptions);\n}\nexport function install(id, kind) {\n    if (kind instanceof PlayerKind) {\n        Actor.kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    Actor.kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof PlayerKind)\n        return id;\n    const k = Actor.kinds[id];\n    if (k && !(k instanceof PlayerKind)) {\n        throw new Error('No a player kind.');\n    }\n    return k;\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new PlayerKind(config);\n}\n","import * as GWU from 'gw-utils';\nimport { Player } from '../player/player';\nimport * as Flags from '../flags';\nexport class Viewport {\n    constructor(opts) {\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n        this.player = null;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        this.lockX = opts.lock || opts.lockX || false;\n        this.lockY = opts.lock || opts.lockY || false;\n        this.scent = opts.scent || false;\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n        if (subject && subject instanceof Player) {\n            this.player = subject;\n        }\n        else {\n            this.player = null;\n        }\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map || !map.needsRedraw)\n            return false;\n        const fov = map.fov;\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const drawer = map.drawer;\n        drawer.scent = this.scent;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, map, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n    tick(_dt) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map)\n            return false;\n        if (!map.hasMapFlag(Flags.Map.MAP_DANCES) || !GWU.cosmetic.chance(10)) {\n            return false;\n        }\n        map.eachCell((c) => {\n            if (c.hasCellFlag(Flags.Cell.COLORS_DANCE) &&\n                map.fov.isAnyKindOfVisible(c.x, c.y) &&\n                GWU.cosmetic.chance(2)) {\n                c.needsRedraw = true;\n            }\n        });\n        map.needsRedraw = true;\n        return true;\n    }\n    mousemove(ev) {\n        if (!this.bounds.contains(ev.x, ev.y)) {\n            this.clearPath();\n            return false;\n        }\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        return this.showPath(this.toInnerX(ev.x), this.toInnerY(ev.y));\n    }\n    click(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.player)\n            return false;\n        if (this.player.hasGoal()) {\n            this.player.clearGoal();\n        }\n        else {\n            this.player.setGoal(this.toInnerX(ev.x), this.toInnerY(ev.y));\n        }\n        return true;\n    }\n    clearPath() {\n        if (!this.player)\n            return;\n        const map = this.player.map;\n        if (!map)\n            return;\n        map.clearPath();\n    }\n    showPath(x, y) {\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        // if (!this.player.hasGoal()) return false;\n        // console.log('mouse', ev.x, ev.y);\n        const path = this.player.pathTo(x, y);\n        if (path) {\n            map.highlightPath(path, true);\n        }\n        else {\n            map.clearPath();\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Messages {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n        this.fg = GWU.color.from(opts.fg || 'white');\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.archive || 40,\n            match: () => {\n                this.needsDraw = true;\n            },\n        });\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    clear() {\n        this.cache.clear();\n        this.needsDraw = true;\n    }\n    click(e, game) {\n        if (!this.bounds.contains(e))\n            return false;\n        return this.showArchive(game);\n    }\n    confirmAll() {\n        this.cache.confirmAll();\n        this.needsDraw = true;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed && this.bg) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    showArchive(game) {\n        if (this.cache.length <= this.bounds.height)\n            return false;\n        return showArchive(this, game).then(() => this.confirmAll());\n    }\n}\nexport class MessageArchive extends GWU.widget.Widget {\n    constructor(layer, source) {\n        super(layer, {\n            id: 'ARCHIVE',\n            tag: 'messages',\n            height: source.bounds.height,\n            width: source.bounds.width,\n            bg: source.bg,\n            x: 0,\n            y: 0,\n            tabStop: true,\n            depth: 100, // I'm on top\n        });\n        this.mode = 'forward';\n        this._timeout = null;\n        this.source = source;\n        this.isOnTop = this.source.bounds.y < 10;\n        this.bounds.height = this.isOnTop\n            ? layer.height - source.bounds.y\n            : source.bounds.bottom;\n        this.totalCount = Math.min(source.cache.length, this.isOnTop\n            ? layer.height - this.source.bounds.top\n            : this.source.bounds.bottom);\n        this.shown = source.bounds.height;\n        this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        // confirm them as they are right now...\n        this.source.cache.confirmAll();\n    }\n    contains() {\n        return true; // Eat all mouse activity\n    }\n    finish() {\n        this.layer.finish();\n    }\n    keypress(e) {\n        return this.click(e);\n    }\n    click(_e) {\n        if (this.mode === 'ack') {\n            this.mode = 'reverse';\n            this.layer.needsDraw = true;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n            }\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        else if (this.mode === 'reverse') {\n            this.finish();\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n                this._timeout = null;\n            }\n            this.layer.needsDraw = true;\n        }\n        return true;\n    }\n    _forward() {\n        // console.log('forward');\n        ++this.shown;\n        this._timeout = null;\n        this.layer.needsDraw = true;\n        if (this.shown < this.totalCount) {\n            this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n        }\n        return true;\n    }\n    _reverse() {\n        // console.log('reverse');\n        --this.shown;\n        this._timeout = null;\n        if (this.shown <= this.source.bounds.height) {\n            this.finish();\n        }\n        else {\n            this.layer.needsDraw = true;\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        return true;\n    }\n    _draw(buffer) {\n        let fadePercent = 0;\n        // let reverse = this.mode === 'reverse';\n        // Count the number of lines in the archive.\n        // let totalMessageCount = this.totalCount;\n        const isOnTop = this.isOnTop;\n        const dbuf = buffer;\n        const fg = GWU.color.from(this.source.fg);\n        // const dM = reverse ? -1 : 1;\n        // const startM = reverse ? totalMessageCount : this.bounds.height;\n        // const endM = reverse\n        //     ? this.bounds.height + dM + 1\n        //     : totalMessageCount + dM;\n        const startY = isOnTop\n            ? this.shown - 1\n            : this.bounds.bottom - this.shown;\n        const endY = isOnTop ? 0 : this.bounds.bottom - 1;\n        const dy = isOnTop ? -1 : 1;\n        dbuf.fillRect(this.source.bounds.x, Math.min(startY, endY), this.bounds.width, this.shown, ' ', this._used.bg, this._used.bg);\n        this.source.cache.forEach((line, _confirmed, j) => {\n            const y = startY + j * dy;\n            if (isOnTop) {\n                if (y < endY)\n                    return;\n            }\n            else if (y > endY)\n                return;\n            fadePercent = Math.floor((50 * j) / this.shown);\n            const fgColor = fg.mix(this._used.bg, fadePercent);\n            dbuf.drawText(this.source.bounds.x, y, line, fgColor, this._used.bg);\n        });\n        if (this.mode === 'ack') {\n            const y = this.isOnTop ? 0 : dbuf.height - 1;\n            const x = this.source.bounds.x > 8\n                ? this.source.bounds.x - 8 // to left of box\n                : Math.min(this.source.bounds.x + this.bounds.width, // just to right of box\n                dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                );\n            dbuf.wrapText(x, y, 8, '--DONE--', this._used.bg, this._used.fg);\n        }\n        return true;\n    }\n}\nexport async function showArchive(widget, game) {\n    const layer = new GWU.widget.WidgetLayer(game.ui);\n    // @ts-ignore\n    const w = new MessageArchive(layer, widget);\n    await layer.run();\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as Tile from '../tile/tile';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.text = '';\n        this.fg = GWU.color.from(opts.fg || 'purple');\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n        this.promptFg = GWU.color.from(opts.promptFg || 'gold');\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = text;\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    clear() {\n        this.text = '';\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    showPrompt(text) {\n        this.text = text;\n        this.isPrompt = true;\n        this.needsDraw = true;\n        return this;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'You see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'You sense';\n        }\n        else if (isRemembered) {\n            intro = 'You remember seeing';\n        }\n        else if (isMapped) {\n            intro = 'You expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(Flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(Flags.Depth.GROUND) || Tile.NULL;\n        const surfaceTile = cell.depthTile(Flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(Flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(Flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('{{intro}} {{text}}.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, ' ', this.bg, this.bg);\n        buffer.drawText(this.bounds.x, this.bounds.y, this.text, this.fg, this.bg, this.bounds.width, 'left');\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\n// import { UISubject } from './viewport';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    get changed() {\n        return this.actor.changed;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawSidebar(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    get changed() {\n        return this.item.changed;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawSidebar(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.changed = true;\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawSidebar(buffer, bounds);\n    }\n}\nexport class Sidebar {\n    constructor(opts) {\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n        this.needsDraw = true;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    reset() {\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n        this.needsDraw = true;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    click(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.highlight)\n            return false;\n        if (!this.subject)\n            return false;\n        this.subject.setGoal(this.highlight.x, this.highlight.y);\n        return true;\n    }\n    mousemove(e) {\n        if (this.contains(e)) {\n            this._highlightRow(e.y);\n            return true;\n        }\n        this.clearHighlight();\n        return false;\n    }\n    highlightAt(x, y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.x == x && e.y == y) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this.needsDraw || (this.needsDraw = changed);\n        return changed;\n    }\n    _highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this.needsDraw || (this.needsDraw = changed);\n        if (this.highlight && this.subject && this.subject.map) {\n            const path = this.subject.pathTo(\n            // @ts-ignore\n            this.highlight.x, \n            // @ts-ignore\n            this.highlight.y);\n            if (path) {\n                this.subject.map.highlightPath(path, true);\n            }\n            else {\n                // @ts-ignore\n                this.subject.map.showCursor(this.highlight.x, this.highlight.y);\n            }\n        }\n        return changed;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        this.needsDraw || (this.needsDraw = result);\n        return result;\n    }\n    _updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return false;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        this.needsDraw = true;\n        return true;\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(Flags.Cell.STABLE_MEMORY) ? 3 : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return entry.priority > 2 || !!this.highlight;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0 || priority === 3)\n            return false;\n        if (actor.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        if (item.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _updateEntryCache(map, cx, cy, fov) {\n        if (map === this.lastMap &&\n            cx === this.lastX &&\n            cy === this.lastY &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED |\n                Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            let anyChanged = this.entries.some((e) => e.changed);\n            if (!anyChanged)\n                return false;\n        }\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (!done[x][y] && this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n                a.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n            else {\n                a.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (!done[x][y] && this._addItemEntry(i, map, cx, cy, fov)) {\n                i.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n                done[x][y] = 1;\n            }\n            else {\n                i.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n        return true;\n    }\n    update() {\n        if (!this.subject) {\n            return false;\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        if (!subject.map)\n            return false;\n        return this.updateAt(subject.map, subject.x, subject.y, subject.map.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        let changed = this._updateCellCache(map);\n        if (this._updateEntryCache(map, cx, cy, fov)) {\n            changed = true;\n        }\n        return changed;\n    }\n    draw(buffer) {\n        var _a;\n        const map = (_a = this.subject) === null || _a === void 0 ? void 0 : _a.map;\n        if (!map)\n            return false;\n        if (this.update()) {\n            this.needsDraw = true;\n        }\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(this.bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            else if (this.highlight === currentEntry) {\n                buffer.mix('white', 20, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Command from '../command';\nimport * as Actor from '../actor';\nimport * as Viewport from './viewport';\nimport * as Message from './message';\nimport * as Flavor from './flavor';\nimport * as Sidebar from './sidebar';\nexport class Game {\n    constructor(opts) {\n        this.result = undefined;\n        this.mouse = false;\n        this.fov = false;\n        this.scent = false;\n        this.running = false;\n        this.keymap = {};\n        this.ui = opts.ui || new GWU.ui.UI(opts);\n        if (!opts.makeMap || !opts.makePlayer) {\n            throw new Error('Need funcitons for makeMap and makePlayer');\n        }\n        this._makeMap = opts.makeMap;\n        this._makePlayer = opts.makePlayer;\n        this._startMap = opts.startMap || GWU.NOOP;\n        if (opts.keymap) {\n            Object.assign(this.keymap, opts.keymap);\n        }\n        if (opts.mouse) {\n            this.mouse = true;\n        }\n        if (typeof opts.messages === 'number') {\n            opts.messages = { size: opts.messages };\n        }\n        if (opts.flavor === true) {\n            opts.flavor = {};\n        }\n        else if (opts.flavor === false) {\n            delete opts.flavor;\n        }\n        opts.viewport = opts.viewport || {};\n        const _opts = opts;\n        _opts.viewport.x = 0;\n        _opts.viewport.y = 0;\n        _opts.viewport.width = this.ui.width;\n        _opts.viewport.height = this.ui.height;\n        this._initMenu(_opts);\n        if (opts.sidebar)\n            this._initSidebar(_opts);\n        if (opts.messages)\n            this._initMessages(_opts);\n        if (opts.flavor)\n            this._initFlavor(_opts);\n        this._initViewport(_opts);\n    }\n    get width() {\n        return this.viewport.bounds.width;\n    }\n    get height() {\n        return this.viewport.bounds.height;\n    }\n    _initMenu(_opts) { }\n    _initSidebar(opts) {\n        if (typeof opts.sidebar === 'number') {\n            opts.sidebar = { width: opts.sidebar };\n        }\n        else if (opts.sidebar === true) {\n            opts.sidebar = {};\n        }\n        const sideOpts = opts.sidebar;\n        sideOpts.width = sideOpts.width || -20; // on right side\n        const viewInit = opts.viewport;\n        if (sideOpts.width < 0) {\n            sideOpts.width *= -1;\n            sideOpts.x = viewInit.x + viewInit.width - sideOpts.width;\n            sideOpts.y = viewInit.y;\n            sideOpts.height = viewInit.height;\n            viewInit.width -= sideOpts.width;\n        }\n        else {\n            sideOpts.x = 0;\n            sideOpts.height = viewInit.height;\n            sideOpts.y = viewInit.y;\n            viewInit.x = sideOpts.width;\n            viewInit.width -= sideOpts.width;\n        }\n        this.sidebar = new Sidebar.Sidebar(sideOpts);\n    }\n    _initMessages(opts) {\n        if (opts.messages === false)\n            return;\n        if (opts.messages === true) {\n            opts.messages = { size: -4 };\n        }\n        const messOpts = opts.messages || { size: -4 };\n        messOpts.size = messOpts.size || messOpts.y || -4;\n        if (messOpts.size < 0) {\n            // bottom\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = this.ui.height + messOpts.size; // length < 0\n            messOpts.width = viewInit.width;\n            messOpts.height = -messOpts.size;\n            opts.viewport.height -= messOpts.height;\n        }\n        else {\n            // top\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = viewInit.y;\n            messOpts.width = viewInit.width;\n            messOpts.height = messOpts.size;\n            viewInit.y += messOpts.size;\n            viewInit.height -= messOpts.size;\n        }\n        this.messages = new Message.Messages(messOpts);\n    }\n    _initFlavor(opts) {\n        const flavOpts = opts.flavor || {};\n        const viewOpts = opts.viewport;\n        if (viewOpts.y === 0) {\n            // messages must be on bottom (or not there)\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.height - 1;\n            flavOpts.width = viewOpts.width;\n            viewOpts.height -= 1;\n        }\n        else {\n            // messages on top\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.y;\n            flavOpts.width = viewOpts.width;\n            viewOpts.y += 1;\n            viewOpts.height -= 1;\n        }\n        this.flavor = new Flavor.Flavor(flavOpts);\n    }\n    _initViewport(opts) {\n        const viewOpts = opts.viewport || {};\n        const viewInit = viewOpts;\n        viewInit.lock = true;\n        this.viewport = new Viewport.Viewport(viewInit);\n    }\n    async start() {\n        this.layer = new GWU.ui.Layer(this.ui);\n        this.buffer = this.layer.buffer;\n        this.io = this.layer.io;\n        this.running = true;\n        this.scheduler = new GWU.scheduler.Scheduler();\n        if (this.messages)\n            this.messages.clear();\n        this.player = this._makePlayer.call(this);\n        this.viewport.subject = this.player;\n        if (this.sidebar)\n            this.sidebar.subject = this.player;\n        this.startNewMap(0);\n        this.scheduler.push(this.player, 0);\n        while (this.running) {\n            await this.animate();\n            await this.runTurn();\n        }\n        return this.result;\n    }\n    startNewMap(id, _location = 'start') {\n        this.scheduler.clear();\n        this.map = this._makeMap.call(this, id);\n        this.map.setPlayer(this.player);\n        this.map.id = id;\n        this._startMap.call(this, this.map, this.player);\n        // make sure player is on map\n        if (this.player.map !== this.map) {\n            // if not, add them (where?)\n            const loc = this.map.locations.start || [0, 0]; // Is top left fallback any good?\n            this.map.addActorNear(loc[0], loc[1], this.player);\n        }\n        if (this.scent) {\n            this.map.drawer.scent = this.scent;\n        }\n        this.map.actors.forEach((a) => {\n            if (!a.isPlayer()) {\n                this.scheduler.push(a, a.moveSpeed());\n            }\n        });\n        this.map.fov.update();\n        this.draw();\n    }\n    draw() {\n        this.viewport.draw(this.buffer);\n        if (this.messages)\n            this.messages.draw(this.buffer);\n        if (this.flavor)\n            this.flavor.draw(this.buffer);\n        if (this.sidebar)\n            this.sidebar.draw(this.buffer);\n        if (this.buffer.changed) {\n            this.buffer.render();\n        }\n        this.buffer.changed = false;\n        this.map.actors.forEach((a) => (a.changed = false));\n        this.map.items.forEach((i) => (i.changed = false));\n    }\n    finish(result) {\n        this.running = false;\n        this.layer.finish();\n        this.result = result;\n    }\n    async runTurn() {\n        const actor = this.scheduler.pop();\n        if (!actor) {\n            this.finish();\n            return;\n        }\n        let nextTime = 0;\n        while (nextTime === 0) {\n            if (actor === this.player) {\n                nextTime = await this.playerTurn(actor);\n            }\n            else if ('act' in actor) {\n                nextTime = await actor.act(this);\n            }\n            else if ('tick' in actor) {\n                nextTime = await actor.tick(); // dt === 100 -- TODO\n            }\n            this.draw();\n        }\n        if (nextTime >= 0) {\n            this.scheduler.push(actor, nextTime);\n        }\n    }\n    async animate() {\n        if (!this.io._tweens.length)\n            return;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            this.io.enqueue(tick);\n        }, 16);\n        while (this.io._tweens.length) {\n            const ev = await this.io.nextTick();\n            if (ev && ev.dt) {\n                this.io._tweens.forEach((a) => a && a.tick(ev.dt));\n                this.io._tweens = this.io._tweens.filter((a) => a && a.isRunning());\n            }\n            this.draw();\n        }\n        clearInterval(timer);\n    }\n    async playerTurn(player) {\n        let done = 0;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            // console.log('-tick', Date.now());\n            this.io.enqueue(tick);\n        }, 16);\n        let elapsed = 0;\n        while (!done && this.running) {\n            const ev = await this.io.nextEvent(-1);\n            if (ev) {\n                if (ev.type === GWU.io.KEYPRESS) {\n                    this.map.clearPath();\n                    if (this.player.hasGoal()) {\n                        this.player.clearGoal();\n                    }\n                    else {\n                        const handler = GWU.io.handlerFor(ev, this.keymap);\n                        if (handler) {\n                            if (typeof handler === 'string') {\n                                const action = Command.getCommand(handler);\n                                if (action) {\n                                    done = await action.call(this, player, ev);\n                                }\n                            }\n                            else if (typeof handler === 'function') {\n                                done = await handler.call(this, player, ev);\n                            }\n                        }\n                    }\n                }\n                else if (ev.type === GWU.io.TICK) {\n                    this.layer.tick(ev); // timeouts\n                    elapsed += ev.dt || 16;\n                    if (this.viewport.tick(ev.dt)) {\n                        this.draw();\n                    }\n                    // console.log('-- event', elapsed);\n                }\n                else if (this.mouse && ev.type === GWU.io.MOUSEMOVE) {\n                    if (this.viewport.mousemove(ev)) {\n                        const x = this.viewport.toInnerX(ev.x);\n                        const y = this.viewport.toInnerY(ev.y);\n                        if (this.flavor) {\n                            const text = this.flavor.getFlavorText(this.map, x, y, this.map.fov);\n                            this.flavor.showText(text);\n                        }\n                        if (this.sidebar) {\n                            this.sidebar.highlightAt(x, y);\n                        }\n                        this.draw();\n                    }\n                    else if (this.sidebar && this.sidebar.mousemove(ev)) {\n                        this.draw();\n                    }\n                }\n                else if (this.mouse && ev.type === GWU.io.CLICK) {\n                    // console.log('click', ev.x, ev.y);\n                    if (this.viewport.contains(ev)) {\n                        this.viewport.click(ev);\n                    }\n                    else if (this.messages && this.messages.contains(ev)) {\n                        await this.messages.showArchive(this);\n                    }\n                    else if (this.sidebar && this.sidebar.contains(ev)) {\n                        await this.sidebar.click(ev);\n                    }\n                }\n            }\n            if (elapsed < 50) {\n                continue;\n            }\n            elapsed -= 50;\n            if (this.player.hasGoal()) {\n                const step = this.player.nextGoalStep();\n                if (!step) {\n                    this.player.clearGoal();\n                }\n                else {\n                    const action = Actor.getAction('moveDir');\n                    if (!action)\n                        throw new Error('Failed to find moveDir action.');\n                    done = await action(this, this.player, { dir: step });\n                    if (done && this.player.hasGoal()) {\n                        const goalMap = this.player.goalMap;\n                        this.viewport.showPath(goalMap.x, goalMap.y);\n                    }\n                }\n            }\n        }\n        clearInterval(timer);\n        return done;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Tile from './tile';\nimport '../effect/handlers';\nimport '../effect/types';\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([30, 30, 30]).rand(20, 0, 0, 0),\n    bg: GWU.color.from([2, 2, 10]).rand(0, 2, 2, 0),\n    priority: 10,\n    article: 'the',\n    flavor: 'the stone floor',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: 'TILE:DOOR_OPEN',\n        open: 'TILE:DOOR_OPEN_ALWAYS',\n    },\n    flavor: 'a closed door',\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            effects: 'TILE:DOOR~!',\n        },\n        enter: null,\n        open: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: 'EMIT:UP_STAIRS',\n    },\n    flavor: 'stairs leading upwards',\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: 'EMIT:DOWN_STAIRS',\n    },\n    flavor: 'downward leading stairs',\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'a very hard wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: GWU.color.from([25, 28, 60]).dance(20, 0, 4, 15),\n    bg: GWU.color.from([10, 15, 41]).dance(20, 5, 5, 5),\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n    flavor: 'some deep water',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([5, 8, 10]).dance(10, 0, 4, 15),\n    bg: GWU.color.from([10, 30, 30]).dance(6, 0, 10, 10),\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    flags: 'T_SHALLOW_WATER',\n    // depth: 'LIQUID', // 'SURFACE'?\n    flavor: 'some shallow water',\n});\nTile.install('BRIDGE', {\n    ch: '\\u2630',\n    fg: [80, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n    flavor: 'a bridge',\n});\n"],"names":["Depth","Fl","GWU","flag","fl","Entity","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_WALL_FLAGS","Actor","Item","Tile","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","T_IS_DEEP_LIQUID","T_SHALLOW_WATER","TileMech","Cell","NEEDS_REDRAW","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_SAFE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","Map","Effect","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","Horde","KeyInfo","[object Object]","x","y","disposable","this","lastId","kind","_map","key","machineHome","changed","depth","light","flags","entity","next","id","map","Flags.Entity","L_ALWAYS_PLURAL","setEntityFlag","L_ON_MAP","addToMap","clearEntityFlag","removeFromMap","sprite","isDestroyed","hasEntityFlag","L_DESTROYED","other","constructor","copy","Object","assign","canBeSeen","tag","tags","includes","matches","cell","forbidsCell","avoidsCell","opts","getName","getDescription","getFlavor","verb","getVerb","buffer","bounds","drawSidebar","dest","_observer","drawSprite","default","sidebarFg","EntityKind","config","requireTileFlags","forbidTileFlags","avoidTileFlags","requireTileTags","forbidTileTags","avoidTileTags","name","flavor","description","make","split","t","trim","slice","from","Flags.Tile","color","init","_entity","hasAllTileFlags","hasTileFlag","T_BRIDGE","length","hasAllTileTags","hasAnyTileTag","_opts","mixer","Mixer","getAppearanceAt","wrapText","width","makeOpts","installedActions","installAction","fn","toLowerCase","getAction","Status","_set","_time","_count","_done","_value","clearTime","clearCount","setOff","_update","done","count","Math","max","_addDone","value","range","current","delta","status","cleared","noticed","removeTime","rec","was","doneFn","Stats","_max","_rate","round","get","set","v","amount","allowOver","min","raiseValue","gain","lowerValue","drain","turns","r","elapsed","undefined","type","c","Error","Entity.Entity","super","ai","leader","items","visionDistance","data","_costMap","_goalMap","_mapToMe","actor","Flags.Depth","ACTOR","stats","grid","free","hasActorFlag","Flags.Actor","IS_PLAYER","action","actions","bump","IS_VISIBLE","WAS_VISIBLE","canSee","isAbleToSee","isPlayer","fov","isDirectlyVisible","xy","distanceBetween","forLineBetween","i","j","blocksVision","canSeeOrSense","isAbleToSense","isAnyKindOfVisible","game","startedVisible","player","setActorFlag","console","log","clearActorFlag","becameVisible","interrupt","endTurn","moveSpeed","pct","L_NO_SIDEBAR","L_IN_SIDEBAR","setMapFlag","Flags.Map","MAP_SIDEBAR_CHANGED","floor","_other","_item","item","pickupItem","dropItem","mapChanged","STABLE_COST_MAP","staleMap","alloc","height","update","_v","cellCost","goalMap","path","calculateDistances","costMap","handlers","installHandler","handler","effectTypes","installType","startsWith","endPos","indexOf","tile","substring","effects","Array","isArray","effect","entries","forEach","JSON","stringify","typeName","shift","makeFn","e","push","parts","installedEffects","trigger","bind","install","obj","clone","_a","_b","_c","_d","index","dissipate","priority","groundTile","article","tileMech","hasEffect","T_IS_FLAMMABLE","arraysIntersect","every","blocksMove","T_PATHING_BLOCKER","arg","result","fg","toString","options","_e","_f","base","extends","tiles","text","replace","search","Number","parseInt","makeEffect","message","Flags.TileMech","ch","bg","opacity","all","args","NULL","BasicEffect","chance","seen","Flags.Effect","endsWith","parseFloat","loc","ctx","force","rng","random","didSomething","eff","nextAlways","E_NEXT_ALWAYS","makeBasicEffect","makeSpreadEffect","SpreadEffect","grow","decrement","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","spawnMap","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","E_NEXT_EVERYWHERE","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","forRect","lakeX","lakeY","isStairs","first","floodFill","cellIsOk","isStart","hasXY","hasCellFlag","Flags.Cell","EVENT_PROTECTED","blocksEffects","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","ok","eachNeighbor","E_NO_TOUCH_WALLS","hasTile","dir","x2","y2","madeChange","startProb","probDec","fill","DIRS","clearAll","clear","clearDepth","GAS","LIQUID","SURFACE","GROUND","blockingMap","eachActor","a","matchingLocNear","removeActor","addActor","eachItem","removeItem","addItem","makeEmitHandler","emitEffect","events","emit","makeMessageHandler","src","info","msg","messageEffect","aware","addAt","makeActivateMachine","activateMachine","machine","machineId","makeTileHandler","superpriority","blockedByActors","blockedByItems","tileEffect","setTile","makeClearHandler","layers","reduce","out","ALL_LAYERS","clearEffect","_ctx","makeFeatureHandler","featureEffect","feat","Effect.installedEffects","makeNourishEffect","nourishEffect","actorAt","adjust","n","pukeMsg","makeStatEffect","stat","statEffect","values","NEVER_SEEN","TILE.NULL","chokeCount","memory","TILE.tiles","snapshot","makeMixer","TILE.get","hasStableSnapshot","STABLE_SNAPSHOT","hasStableMemory","setCellFlag","hasItem","hasActor","clearCellFlag","needsRedraw","getSnapshot","checkEntities","some","entityFlags","tileFlags","tileMechFlags","hasTag","hasAllTags","hasAnyTag","withEntities","CHANGED","TILE.Tile","highestPriorityTile","cb","find","blocksPathing","TILE.flags","T_BLOCKS_OTHER_LAYERS","hasAllEntityFlags","T_IS_DOOR","L_BLOCKS_EVERYTHING","L_SECRETLY_PASSABLE","T_ANY_LIQUID","blocksLayer","blockedByOtherLayers","highestPriority","currentGround","depthTile","wantGround","glowLightChanged","T_LIST_IN_SIDEBAR","MAP_SIDEBAR_TILES_CHANGED","CAUGHT_FIRE_THIS_TURN","blackOut","tileFlag","tileMechFlag","hasTileMechFlag","event","ev","_activate","itemAt","hasItems","foundIndex","_actor","actors","HAS_FX","fx","fxAt","_fx","quantity","ITEM","isPlural","messageYou","view","field","messageThe","target","messageA","L_FORMAL_NAME","char","firstChar","exec","messageVerb","_name","plural","toPluralVerb","toSingularVerb","addHelper","PainMessages","msgs","_msgs","m","add","singular","clamp","_format","painMessages","ais","AICtx","distanceMap","async","typical","isDead","willAttack","damagePct","getPct","morale","chargeChance","retreatChance","lastSawPlayer","clearGoal","start","canAttack","attack","tooFarFrom","canMoveToward","moveToward","tooCloseTo","canMoveAwayFrom","moveAwayFrom","hasGoal","setGoal","moveTowardGoal","scent","nextDir","moveDir","wanderOpt","object","firstOpt","matchingLoc","NO_PATH","step","nextStep","canPass","wander","idle","standStill","center","_game","_target","distanceFromTo","safetyMap","costGrid","FORBIDDEN","eachCell","AVOIDED","rescan","ActorKind","Entity.EntityKind","DEFAULT","DEFAULT_ACTOR","vision","normal","health","AI.make","waterOnly","lavaOnly","swim","fly","list","remove","OBSTRUCTION","OK","makeOptions","makeKind","kinds","randomKind","match","forbidTags","filter","k","bumpActions","getBumpActions","selfName","selfAction","ctx2","flashSprite","duration","animator","Entity.make","addFx","tween","visible","to","repeat","repeatDelay","onUpdate","removeFx","io","loop","addAnimation","hit","fadeInOut","yoyo","onFinish","moveSprite","source","ceil","maxAxisFromTo","speed","isLoc","vals","stepFn","stopBeforeWalls","moveFx","stop","isInShape","shape","cx","cy","allowCenter","sx","abs","sy","dirFromTo","fade","stopAtWalls","line","forLineFromTo","promises","lastIndex","Promise","radius","checkExplosionOpts","FOV","isBlocked","calculate","x1","y1","minX","minY","maxX","maxY","_obj","success","newX","newY","currentCell","newCell","try","FX.hit","canRemoveActor","canAddActor","moveActor","rate","dirIndex","number","pickup","quiet","avoidsItem","itemAction","canAddItem","pain","made","ItemKind","Flags.Item","isDoor","MapLayer","properties","_x","_y","_tile","_dt","TileLayer","GasLayer","volume","startingVolume","spread","d","clearTile","total","highestVolume","startingTile","highestTile","updateCellVolume","ObjectFlags","TileFlags","TileMechFlags","CellFlags","FireLayer","exposeToFire","alwaysIgnite","ignitionChance","bestExtinguishingPriority","explosiveNeighborCount","fireIgnited","explosivePromotion","eachTile","T_EXTINGUISHES_FIRE","Effect.from","fire","TM_EXPLOSIVE_PROMOTE","x0","y0","fireEvent","highlightColor","BasicDrawer","Buffer","offsetX","offsetY","clearMapFlag","MAP_DANCES","drawCell","needSnapshot","getAppearance","putSnapshot","COLORS_DANCE","applyLight","separate","L_VISUALLY_DISTINCT","IS_CURSOR","inverse","IS_HIGHLIGHTED","mix","s","colors","red","ground","surface","liquid","gas","drawInto","cosmetic","hasFx","dances","bake","isVisible","isRevealed","getLight","multiply","isCursor","invert","scale","locations","_animations","EventEmitter","seed","machineCount","drawer","cells","LightSystem","alwaysVisible","callback","onFovChange","FovSystem","initLayers","setPlayer","addLayer","Layer.TileLayer","Layer.FireLayer","Layer.GasLayer","layer","isAt","fireEffects","_addItem","_fireAddItemEffects","_removeItem","_fireRemoveItemEffects","arrayDelete","isKey","hasPlayer","_addActor","_fireAddActorEffects","_removeActor","_fireRemoveActorEffects","_addFx","updated","_removeFx","fmt","dump","hasMapFlag","MAP_NEEDS_REDRAW","markCursor","clearPath","clearCursor","l","boundary","isBoundaryXY","clearTiles","dt","tick","isRunning","fireAll","willFire","EVENT_FIRED_THIS_TURN","promoteChance","w","originX","originY","eachGlowLight","_cb","FovFlags","PLAYER","isDark","storeMemory","clearMemory","makeVisible","updateChokepoints","updateCounts","passMap","passableArcCount","oldX","CLOCK_DIRS","oldY","cellCount","floodFillCount","i2","j2","results","startX","startY","getCount","todo","pop","updateLoopiness","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","tryAgain","fillInnerLoopGrid","up","left","designationSurvives","Snapshot","version","isHallway","arcCount","isPassable","h","updateChokeCounts","layerVersion","lightVersion","cellVersion","snap","srcCell","snapLayer","destCell","destLayer","srcLayer","prefab","charToTile","isStringArray","len","members","horde","frequency","Flags","canSpawn","TRUE","_spawnLeader","_spawnMembers","leaderKind","Actor.get","Actor.make","_pickLeaderLoc","_addLeader","member","kindId","countRange","_spawnMember","_pickMemberLoc","_addMember","Map.isHallway","hordes","forbidFlags","oodChance","HORDE_NEVER_OOD","weights","weighted","installCommand","getCommand","Actor.actions.moveDir","_ev","playerAction","Attributes","baseValues","_base","_bonus","_sustain","attributes","keys","raiseMax","old","_calcValue","loss","lowerMax","bonus","_addBonus","_clearBonus","arr","findIndex","o","splice","allAdjustments","adj","_applyAdjustment","sustain","fixed","restore","Skill","has","_bool","level","_int","disadvantage","advantage","b","_parent","succeed","fail","_has","_level","_fixed","Skills","_skills","lastIndexOf","Scent","_player","_data","highest","v1","hasLiquid","highestLoc","Player","mapToPlayer","mapToMe","getClosestValidLocation","getPath","PlayerKind","Actor.ActorKind","Attributes.Attributes","skills","Skills.Skills","attr","defaults","Actor.kinds","Viewport","_subject","Bounds","lockX","lock","lockY","contains","subject","halfWidth","halfHeight","right","top","bottom","edgeX","edgeY","thirdW","thirdH","blackOutRect","updateOffset","mapX","mapY","draw","showPath","toInnerX","toInnerY","pathTo","highlightPath","Messages","needsDraw","cache","MessageCache","archive","showArchive","confirmAll","isOnTop","fillRect","confirmed","drawText","then","MessageArchive","widget","Widget","tabStop","mode","_timeout","totalCount","shown","setTimeout","_forward","finish","click","clearTimeout","_reverse","fadePercent","dbuf","endY","dy","_used","_confirmed","fgColor","WidgetLayer","ui","run","Flavor","promptFg","overflow","isPrompt","buf","isRemembered","isMapped","isMagicMapped","intro","theItem","standsInTile","T_STAND_IN_TILE","needObjectArticle","Tile.NULL","surfaceTile","liquidTile","apply","EntryBase","dist","sidebarY","_buffer","_bounds","ActorEntry","ItemEntry","CellEntry","Sidebar","cellCache","lastX","lastY","lastMap","highlight","entry","_highlightRow","clearHighlight","last","showCursor","_getPriority","_makeActorEntry","_makeItemEntry","_makeCellEntry","_addActorEntry","_addItemEntry","_addCellEntry","sort","updateFor","updateAt","_updateCellCache","_updateEntryCache","drawBounds","currentEntry","usedLines","_isDim","mouse","running","keymap","UI","makeMap","makePlayer","_makeMap","_makePlayer","_startMap","startMap","NOOP","messages","size","viewport","_initMenu","sidebar","_initSidebar","_initMessages","_initFlavor","_initViewport","sideOpts","viewInit","Sidebar.Sidebar","messOpts","Message.Messages","flavOpts","viewOpts","Flavor.Flavor","Viewport.Viewport","Layer","scheduler","Scheduler","call","startNewMap","animate","runTurn","_location","addActorNear","render","nextTime","playerTurn","act","_tweens","timer","setInterval","makeTickEvent","enqueue","nextTick","clearInterval","nextEvent","KEYPRESS","handlerFor","Command.getCommand","TICK","MOUSEMOVE","mousemove","getFlavorText","showText","highlightAt","CLICK","nextGoalStep","Actor.getAction","rand","enter","open","close","dance"],"mappings":"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"}