{"version":3,"file":"gw-map.min.js","sources":["../js/flags/depth.js","../js/flags/entity.js","../js/flags/actor.js","../js/flags/item.js","../js/flags/tile.js","../js/flags/tileMech.js","../js/flags/cell.js","../js/flags/map.js","../js/flags/effect.js","../js/flags/horde.js","../js/entity/key.js","../js/entity/entity.js","../js/entity/kind.js","../js/actor/action.js","../js/actor/status.js","../js/actor/stat.js","../js/actor/actor.js","../js/effect/effect.js","../js/tile/tile.js","../js/tile/index.js","../js/effect/types/basic.js","../js/effect/types/spread.js","../js/effect/handlers/emit.js","../js/effect/handlers/message.js","../js/effect/handlers/activateMachine.js","../js/effect/handlers/tile.js","../js/effect/handlers/clear.js","../js/effect/handlers/feature.js","../js/effect/handlers/nourish.js","../js/effect/handlers/stat.js","../js/map/cell.js","../js/item/item.js","../js/entity/message.js","../js/actor/pain.js","../js/ai/ai.js","../js/ai/typical.js","../js/ai/wander.js","../js/ai/utils.js","../js/actor/kind.js","../js/actor/make.js","../js/actor/actions/bump.js","../js/actor/actions/standStill.js","../js/fx/fx.js","../js/actor/actions/moveDir.js","../js/actor/actions/idle.js","../js/actor/actions/pickup.js","../js/item/kind.js","../js/item/make.js","../js/layer/mapLayer.js","../js/layer/tileLayer.js","../js/layer/gasLayer.js","../js/layer/fireLayer.js","../js/draw/basic.js","../js/map/map.js","../js/map/analyze.js","../js/map/snapshot.js","../js/map/utils.js","../js/map/make.js","../js/horde/horde.js","../js/horde/make.js","../js/command/command.js","../js/command/moveDir.js","../js/command/pickup.js","../js/memory/index.js","../js/player/attribute.js","../js/player/skill.js","../js/player/scent.js","../js/player/player.js","../js/player/kind.js","../js/player/make.js","../js/game/viewport.js","../js/game/message.js","../js/game/flavor.js","../js/game/sidebar.js","../js/game/game.js","../js/tile/tiles.js"],"sourcesContent":["export var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Entity;\n(function (Entity) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    Entity[Entity[\"L_DESTROYED\"] = Fl(1)] = \"L_DESTROYED\";\n    Entity[Entity[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    Entity[Entity[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    Entity[Entity[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    Entity[Entity[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    Entity[Entity[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    Entity[Entity[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    Entity[Entity[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    Entity[Entity[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    Entity[Entity[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    Entity[Entity[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    Entity[Entity[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    Entity[Entity[\"L_NO_SIDEBAR\"] = Fl(13)] = \"L_NO_SIDEBAR\";\n    Entity[Entity[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    Entity[Entity[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    Entity[Entity[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    Entity[Entity[\"L_ON_MAP\"] = Fl(17)] = \"L_ON_MAP\";\n    Entity[Entity[\"L_IN_SIDEBAR\"] = Fl(18)] = \"L_IN_SIDEBAR\";\n    Entity[Entity[\"L_FORMAL_NAME\"] = Fl(20)] = \"L_FORMAL_NAME\";\n    Entity[Entity[\"L_ALWAYS_PLURAL\"] = Fl(21)] = \"L_ALWAYS_PLURAL\";\n    Entity[Entity[\"DEFAULT_ACTOR\"] = 0] = \"DEFAULT_ACTOR\";\n    Entity[Entity[\"DEFAULT_ITEM\"] = 0] = \"DEFAULT_ITEM\";\n    Entity[Entity[\"L_BLOCKED_BY_STAIRS\"] = Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_SURFACE |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    Entity[Entity[\"L_BLOCKS_SCENT\"] = Entity.L_BLOCKS_MOVE | Entity.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    Entity[Entity[\"L_DIVIDES_LEVEL\"] = Entity.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    Entity[Entity[\"L_WAYPOINT_BLOCKER\"] = Entity.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    Entity[Entity[\"L_WALL_FLAGS\"] = Entity.L_BLOCKS_MOVE |\n        Entity.L_BLOCKS_VISION |\n        Entity.L_BLOCKS_LIQUID |\n        Entity.L_BLOCKS_GAS |\n        Entity.L_BLOCKS_EFFECTS |\n        Entity.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    Entity[Entity[\"L_BLOCKS_EVERYTHING\"] = Entity.L_WALL_FLAGS |\n        Entity.L_BLOCKS_ITEMS |\n        Entity.L_BLOCKS_ACTORS |\n        Entity.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(Entity || (Entity = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n    Actor[Actor[\"HAS_MEMORY\"] = Fl(1)] = \"HAS_MEMORY\";\n    Actor[Actor[\"USES_FOV\"] = Fl(2)] = \"USES_FOV\";\n    Actor[Actor[\"STABLE_COST_MAP\"] = Fl(3)] = \"STABLE_COST_MAP\";\n    Actor[Actor[\"IS_VISIBLE\"] = Fl(4)] = \"IS_VISIBLE\";\n    Actor[Actor[\"WAS_VISIBLE\"] = Fl(5)] = \"WAS_VISIBLE\";\n    Actor[Actor[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Actor || (Actor = {}));\n","export var Item;\n(function (Item) {\n    Item[Item[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(Item || (Item = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_SHALLOW_WATER\"] = Fl(4)] = \"T_SHALLOW_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_LIST_IN_SIDEBAR\"] = Fl(22)] = \"T_LIST_IN_SIDEBAR\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n    Tile[Tile[\"T_ANY_LIQUID\"] = Tile.T_IS_DEEP_LIQUID | Tile.T_SHALLOW_WATER] = \"T_ANY_LIQUID\";\n})(Tile || (Tile = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(0)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(1)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"KNOWN_TO_BE_SAFE\"] = Fl(2)] = \"KNOWN_TO_BE_SAFE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(11)] = \"IMPREGNABLE\";\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(13)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(14)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"STABLE_SNAPSHOT\"] = Fl(15)] = \"STABLE_SNAPSHOT\";\n    // These are to speed checks\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(16)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(17)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(18)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(19)] = \"HAS_ITEM\";\n    Cell[Cell[\"HAS_FX\"] = Fl(20)] = \"HAS_FX\";\n    Cell[Cell[\"HAS_TICK_EFFECT\"] = Fl(22)] = \"HAS_TICK_EFFECT\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(23)] = \"IS_CURSOR\";\n    Cell[Cell[\"IS_HIGHLIGHTED\"] = Fl(24)] = \"IS_HIGHLIGHTED\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(28)] = \"IS_POWERED\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"CHANGED\"] = Cell.NEEDS_REDRAW] = \"CHANGED\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_SAFE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_NEEDS_REDRAW\"] = Fl(1)] = \"MAP_NEEDS_REDRAW\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_SIDEBAR_TILES_CHANGED\"] = Fl(10)] = \"MAP_SIDEBAR_TILES_CHANGED\";\n    Map[Map[\"MAP_SIDEBAR_CHANGED\"] = Fl(11)] = \"MAP_SIDEBAR_CHANGED\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_IGNORE_FOV\"] = Fl(12)] = \"E_IGNORE_FOV\";\n    // E_SPREAD_CIRCLE = Fl(13), // Spread in a circle around the spot (using FOV), radius calculated using spread+decrement\n    // E_SPREAD_LINE = Fl(14), // Spread in a line in one random direction\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n","import * as GWU from 'gw-utils';\nconst Fl = GWU.flag.fl;\nexport var Horde;\n(function (Horde) {\n    Horde[Horde[\"HORDE_DIES_ON_LEADER_DEATH\"] = Fl(0)] = \"HORDE_DIES_ON_LEADER_DEATH\";\n    Horde[Horde[\"HORDE_IS_SUMMONED\"] = Fl(1)] = \"HORDE_IS_SUMMONED\";\n    Horde[Horde[\"HORDE_SUMMONED_AT_DISTANCE\"] = Fl(2)] = \"HORDE_SUMMONED_AT_DISTANCE\";\n    Horde[Horde[\"HORDE_NO_PERIODIC_SPAWN\"] = Fl(4)] = \"HORDE_NO_PERIODIC_SPAWN\";\n    Horde[Horde[\"HORDE_ALLIED_WITH_PLAYER\"] = Fl(5)] = \"HORDE_ALLIED_WITH_PLAYER\";\n    Horde[Horde[\"HORDE_NEVER_OOD\"] = Fl(15)] = \"HORDE_NEVER_OOD\";\n    // Move all these to tags?\n    // HORDE_LEADER_CAPTIVE = Fl(3), // the leader is in chains and the followers are guards\n    // HORDE_MACHINE_BOSS = Fl(6), // used in machines for a boss challenge\n    // HORDE_MACHINE_WATER_MONSTER = Fl(7), // used in machines where the room floods with shallow water\n    // HORDE_MACHINE_CAPTIVE = Fl(8), // powerful captive monsters without any captors\n    // HORDE_MACHINE_STATUE = Fl(9), // the kinds of monsters that make sense in a statue\n    // HORDE_MACHINE_TURRET = Fl(10), // turrets, for hiding in walls\n    // HORDE_MACHINE_MUD = Fl(11), // bog monsters, for hiding in mud\n    // HORDE_MACHINE_KENNEL = Fl(12), // monsters that can appear in cages in kennels\n    // HORDE_VAMPIRE_FODDER = Fl(13), // monsters that are prone to capture and farming by vampires\n    // HORDE_MACHINE_LEGENDARY_ALLY = Fl(14), // legendary allies\n    // HORDE_MACHINE_THIEF = Fl(16), // monsters that can be generated in the key thief area machines\n    // HORDE_MACHINE_GOBLIN_WARREN = Fl(17), // can spawn in goblin warrens\n    // HORDE_SACRIFICE_TARGET = Fl(18), // can be the target of an assassination challenge; leader will get scary light.\n    // HORDE_MACHINE_ONLY = HORDE_MACHINE_BOSS |\n    //     HORDE_MACHINE_WATER_MONSTER |\n    //     HORDE_MACHINE_CAPTIVE |\n    //     HORDE_MACHINE_STATUE |\n    //     HORDE_MACHINE_TURRET |\n    //     HORDE_MACHINE_MUD |\n    //     HORDE_MACHINE_KENNEL |\n    //     HORDE_VAMPIRE_FODDER |\n    //     HORDE_MACHINE_LEGENDARY_ALLY |\n    //     HORDE_MACHINE_THIEF |\n    //     HORDE_MACHINE_GOBLIN_WARREN |\n    //     HORDE_SACRIFICE_TARGET,\n})(Horde || (Horde = {}));\n","// TODO - Do we need the machine?\nexport class KeyInfo {\n    constructor(x, y, disposable) {\n        this.x = x;\n        this.y = y;\n        this.disposable = disposable;\n    }\n    matches(x, y) {\n        return this.x === x && this.y === y;\n    }\n}\nexport function makeKeyInfo(x, y, disposable) {\n    return new KeyInfo(x, y, disposable);\n}\n","import * as Flags from '../flags/entity';\nlet lastId = 0;\nexport class Entity {\n    // lastSeen: GWU.xy.Loc = [-1, -1];\n    constructor(kind) {\n        this._map = null;\n        this.key = null;\n        this.machineHome = 0;\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { entity: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n        this.kind = kind;\n        this.id = '' + ++lastId;\n    }\n    get map() {\n        return this._map;\n    }\n    isPlural() {\n        return !!(this.flags.entity & Flags.Entity.L_ALWAYS_PLURAL);\n    }\n    addToMap(map, x, y) {\n        this.x = x;\n        this.y = y;\n        this.setEntityFlag(Flags.Entity.L_ON_MAP);\n        if (this._map === map) {\n            return false;\n        }\n        this._map = map;\n        this.kind.addToMap(this, map);\n        return true;\n    }\n    removeFromMap() {\n        this.clearEntityFlag(Flags.Entity.L_ON_MAP);\n        this.kind.removeFromMap(this);\n    }\n    get sprite() {\n        return this.kind.sprite;\n    }\n    get isDestroyed() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    isAt(x, y) {\n        return this.x === x && this.y === y;\n    }\n    clone() {\n        const other = new this.constructor(this.kind);\n        other.copy(this);\n        return other;\n    }\n    copy(other) {\n        this.depth = other.depth;\n        this.light = other.light;\n        Object.assign(this.flags, other.flags);\n        this.next = other.next;\n        this.x = other.x;\n        this.y = other.y;\n        this.kind = other.kind;\n        this.id = other.id;\n    }\n    canBeSeen() {\n        return this.kind.canBeSeen(this);\n    }\n    destroy() {\n        this.flags.entity |= Flags.Entity.L_DESTROYED;\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasAllEntityFlags(flags) {\n        return (this.flags.entity & flags) === flags;\n    }\n    setEntityFlag(flag) {\n        this.flags.entity |= flag;\n    }\n    clearEntityFlag(flag) {\n        this.flags.entity &= ~flag;\n    }\n    hasTag(tag) {\n        return this.kind.tags.includes(tag);\n    }\n    blocksMove() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    isKey(x, y) {\n        return this.key && this.key.matches(x, y);\n    }\n    forbidsCell(cell) {\n        return this.kind.forbidsCell(cell, this);\n    }\n    avoidsCell(cell) {\n        return this.kind.avoidsCell(cell, this);\n    }\n    getName(opts) {\n        return this.kind.getName(this, opts);\n    }\n    getDescription(opts) {\n        return this.kind.getDescription(this, opts);\n    }\n    getFlavor(opts) {\n        return this.kind.getFlavor(this, opts);\n    }\n    getVerb(verb) {\n        return this.kind.getVerb(this, verb);\n    }\n    drawSidebar(buffer, bounds) {\n        return this.kind.drawSidebar(this, buffer, bounds);\n    }\n    drawInto(dest, _observer) {\n        dest.drawSprite(this.sprite);\n    }\n    toString() {\n        return `${this.kind.id}-${this.id} @ ${this.x},${this.y}`;\n    }\n}\nEntity.default = {\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport { Entity } from './entity';\nimport * as Flags from '../flags';\nexport class EntityKind {\n    constructor(config) {\n        this.tags = [];\n        this.requireTileFlags = 0;\n        this.forbidTileFlags = 0;\n        this.avoidTileFlags = 0;\n        this.requireTileTags = [];\n        this.forbidTileTags = [];\n        this.avoidTileTags = [];\n        this.id = config.id || config.name;\n        this.name = config.name;\n        this.flavor = config.flavor || this.name;\n        this.description = config.description || this.flavor;\n        this.sprite = GWU.sprite.make(config.sprite ? config.sprite : config);\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        if (config.requireTileFlags) {\n            this.requireTileFlags = GWU.flag.from(Flags.Tile, config.requireTileFlags);\n        }\n        if (config.avoidTileFlags) {\n            this.avoidTileFlags = GWU.flag.from(Flags.Tile, config.avoidTileFlags);\n        }\n        if (config.forbidTileFlags) {\n            this.forbidTileFlags = GWU.flag.from(Flags.Tile, config.forbidTileFlags);\n        }\n        if (config.requireTileTags) {\n            if (typeof config.requireTileTags === 'string') {\n                config.requireTileTags = config.requireTileTags.split(/[,|]/g);\n            }\n            this.requireTileTags = config.requireTileTags.map((t) => t.trim());\n        }\n        if (config.avoidTileTags) {\n            if (typeof config.avoidTileTags === 'string') {\n                config.avoidTileTags = config.avoidTileTags.split(/[,|]/g);\n            }\n            this.avoidTileTags = config.avoidTileTags.map((t) => t.trim());\n        }\n        if (config.forbidTileTags) {\n            if (typeof config.forbidTileTags === 'string') {\n                config.forbidTileTags = config.forbidTileTags.split(/[,|]/g);\n            }\n            this.forbidTileTags = config.forbidTileTags.map((t) => t.trim());\n        }\n        if (config.drawSidebar) {\n            this.drawSidebar = config.drawSidebar;\n        }\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Entity.default.sidebarFg);\n    }\n    make(opts) {\n        const entity = new Entity(this);\n        this.init(entity, opts);\n        return entity;\n    }\n    init(entity, opts = {}) {\n        if (opts.machineHome) {\n            entity.machineHome = opts.machineHome;\n        }\n    }\n    addToMap(_entity, _map) { }\n    removeFromMap(_entity) { }\n    canBeSeen(_entity) {\n        return true;\n    }\n    forbidsCell(cell, _entity) {\n        if (this.requireTileFlags &&\n            !cell.hasAllTileFlags(this.requireTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileFlags &&\n            cell.hasTileFlag(this.forbidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.requireTileTags.length &&\n            !cell.hasAllTileTags(this.requireTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.forbidTileTags.length &&\n            cell.hasAnyTileTag(this.forbidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    avoidsCell(cell, entity) {\n        if (this.forbidsCell(cell, entity))\n            return true;\n        if (this.avoidTileFlags &&\n            cell.hasTileFlag(this.avoidTileFlags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        if (this.avoidTileTags.length &&\n            cell.hasAnyTileTag(this.avoidTileTags) &&\n            !cell.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return true;\n        }\n        return false;\n    }\n    getName(_entity, _opts) {\n        return this.name;\n    }\n    getDescription(_entity, _opts) {\n        return this.description;\n    }\n    getFlavor(_entity, _opts) {\n        return this.flavor;\n    }\n    getVerb(_entity, verb) {\n        return verb;\n    }\n    drawSidebar(entity, buffer, bounds) {\n        if (!entity.map)\n            return 0;\n        if (entity.isDestroyed)\n            return 0;\n        const mixer = new GWU.sprite.Mixer();\n        entity.map.getAppearanceAt(entity.x, entity.y, mixer);\n        buffer.drawSprite(bounds.x + 1, bounds.y, mixer);\n        buffer.wrapText(bounds.x + 3, bounds.y, bounds.width - 3, entity.getName(), this.sidebarFg);\n        return 1;\n    }\n}\nexport function make(opts, makeOpts = {}) {\n    const kind = new EntityKind(opts);\n    return kind.make(makeOpts);\n}\n","export const installedActions = {};\nexport function installAction(name, fn) {\n    installedActions[name.toLowerCase()] = fn;\n}\nexport function getAction(name) {\n    return installedActions[name.toLowerCase()] || null;\n}\n","import * as GWU from 'gw-utils';\nexport class Status {\n    constructor() {\n        this._set = {};\n        this._time = {};\n        this._count = {};\n        this._done = {};\n        this._value = {};\n        this.changed = null;\n    }\n    clear(name) {\n        this.clearTime(name);\n        this.clearCount(name);\n        this.setOff(name);\n        return this._update(name);\n    }\n    get(name) {\n        return this._value[name] || false;\n    }\n    has(name) {\n        return this._value[name] || false;\n    }\n    _addDone(name, done) {\n        if (done) {\n            if (!this._done[name]) {\n                this._done[name] = done;\n            }\n        }\n    }\n    /**\n     * Sets the count for a status variable.\n     * If setting the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} count The count to set.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not setting the count turned the status on.\n     */\n    setCount(name, count, done) {\n        const status = this;\n        status._count[name] = Math.max(count, status._count[name] || 0);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Increments the count for the status by the given amount (1=default)\n     * If incrementing the count turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {number} [count=1] The count to incrmeent.\n     * @param {function} [done] The function to call whenever the count goes to 0.\n     * @returns {boolean} Whether or not incrementing the count turned the status on.\n     */\n    increment(name, count = 1, done) {\n        if (typeof count == 'function') {\n            done = count;\n            count = 1;\n        }\n        const status = this;\n        status._count[name] = (status._count[name] || 0) + count;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Decrements the count for the status by the given amount (1=default)\n     * If decrementing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @param {number} [count=1] The count to decrement.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    decrement(name, count = 1) {\n        const status = this;\n        status._count[name] = Math.max(0, (status._count[name] || 0) - count);\n        return this._update(name);\n    }\n    /**\n     * Clears all counts from the given status.\n     * If clearing the count turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * Also, if the status is turned off, and a done function was set, then it\n     * is called.\n     * @param {string} name The name of the status to adjust.\n     * @returns {boolean} Whether or not decrementing the count turned the status off.\n     */\n    clearCount(name) {\n        const status = this;\n        status._count[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Turns on the given status.\n     * @param {string} name The status to adjust.\n     * @param {function} [done] The function to call when the status is turned off.\n     * @returns {boolean} True if this turns on the status. (It could be on because of a time or count).\n     */\n    setOn(name, done) {\n        const status = this;\n        status._set[name] = true;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Turns off the given status.\n     *\n     * @param {string} name The status to adjust.\n     * @returns {boolean} True if this turns off the status. (It could be on because of a time or count).\n     */\n    setOff(name) {\n        const status = this;\n        status._set[name] = false;\n        return this._update(name);\n    }\n    /**\n     * Sets the time for a status variable.\n     * If setting the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to set.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not setting the time turned the status on.\n     */\n    setTime(name, value, done) {\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        const current = status._time[name] || 0;\n        status._time[name] = Math.max(value, current);\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Adds to the time for a status variable.\n     * If adding to the time turns on the status (it was off),\n     * then this function returns true.  Otherwise, false.\n     * The done variable is only set if there is no other done function\n     * already for this status.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to add.\n     * @param {function} [done] The function to call whenever the status goes false.\n     * @returns {boolean} Whether or not adding the time turned the status on.\n     */\n    addTime(name, value = 1, done) {\n        if (typeof value == 'function') {\n            done = value;\n            value = 1;\n        }\n        const status = this;\n        // if (value === true) {\n        //   return RUT.Status.setOn(source, name, done);\n        // }\n        value = GWU.range.make(value).value();\n        status._time[name] = (status._time[name] || 0) + value;\n        this._addDone(name, done);\n        return this._update(name);\n    }\n    /**\n     * Removes time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @param {GWU.range.RangeBase} time The time value to remove.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    removeTime(name, value = 1) {\n        const status = this;\n        value = GWU.range.make(value).value();\n        status._time[name] = Math.max(0, (status._time[name] || 0) - value);\n        return this._update(name);\n    }\n    /**\n     * Removes all time for a status variable.\n     * If removing to the time turns off the status (it was on),\n     * then this function returns true.  Otherwise, false.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean} Whether or not removing the time turned the status off.\n     */\n    clearTime(name) {\n        const status = this;\n        status._time[name] = 0;\n        return this._update(name);\n    }\n    /**\n     * Removes time for all status variables that have time.\n     * If removing the time turns off any status (it was on),\n     * then this function returns an object with all of those statuses as keys and false as the values.  Otherwise, false.\n     * @param {Status|object} source The object to set the status on.  If object.status is set then that is where the values are updated.\n     * @param {string} name The name of the status to set.\n     * @returns {boolean|object} false or an object with the names of the statuses that were cleared as keys and false as the values.\n     */\n    decayAllTimes(delta = 1) {\n        const status = this;\n        const cleared = {};\n        let noticed = false;\n        for (let name in status._time) {\n            if (this.removeTime(name, delta)) {\n                noticed = true;\n                cleared[name] = false;\n            }\n        }\n        return noticed ? cleared : false;\n    }\n    /**\n     * Updates the value of the status and returns whether or not this change\n     * turned the status on or off (true = change, false = no change)\n     * @param {string} name The name of the status to update\n     * @returns {boolean} True if the value was turned on or off, False otherwise.\n     */\n    _update(name) {\n        const status = this;\n        const rec = this._value;\n        let was = rec[name];\n        let value = (rec[name] =\n            status._set[name] ||\n                status._time[name] > 0 ||\n                status._count[name] > 0 ||\n                false);\n        const doneFn = this._done[name];\n        if (!value && doneFn) {\n            doneFn(this, name);\n            status._done[name] = null;\n        }\n        if (was && !value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: false');\n            return true;\n        }\n        else if (!was && value) {\n            if (this.changed)\n                this.changed(this, name);\n            // console.log('called changed: true');\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Stats {\n    constructor(opts = {}) {\n        this._max = {};\n        this._rate = {};\n        this._value = {};\n        this.init(opts);\n    }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    getPct(name) {\n        const max = this.max(name);\n        return max ? Math.round((100 * this.get(name)) / max) : 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    regen(name) {\n        return this._rate[name] || null;\n    }\n    init(opts) {\n        for (let name in opts) {\n            this.set(name, opts[name]);\n        }\n    }\n    set(name, v, max) {\n        if (typeof v !== 'number') {\n            const r = GWU.range.make(v);\n            v = r.value();\n        }\n        this._value[name] = v;\n        this._max[name] = max || v;\n    }\n    gain(name, amount, allowOver = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        let v = this._value[name] + amount;\n        if (!allowOver) {\n            v = Math.min(v, this._max[name]);\n        }\n        this._value[name] = v;\n    }\n    drain(name, amount) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._value[name] = Math.max(0, this._value[name] - amount);\n    }\n    raiseMax(name, amount, raiseValue = true) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] += amount;\n        if (raiseValue) {\n            this.gain(name, amount);\n        }\n    }\n    reduceMax(name, amount, lowerValue = false) {\n        if (typeof amount !== 'number') {\n            amount = GWU.range.value(amount);\n        }\n        this._max[name] = Math.max(0, this._max[name] - amount);\n        if (lowerValue) {\n            this.drain(name, amount);\n        }\n    }\n    setRegen(name, turns, count = 1) {\n        const r = (this._rate[name] = this._rate[name] || { elapsed: 0 });\n        r.turns = turns;\n        r.count = count;\n    }\n    regenAll() {\n        for (let name in this._max) {\n            const r = this._rate[name];\n            r.elapsed += 1;\n            if (r.elapsed >= r.turns) {\n                this.gain(name, r.count);\n                r.elapsed -= r.turns;\n            }\n        }\n    }\n    restore(name, value) {\n        if (value === undefined)\n            value = this._max[name];\n        this._value[name] = value;\n    }\n    adjust(name, type, amount) {\n        amount = GWU.range.from(amount);\n        const v = amount.value();\n        const c = this.get(name);\n        if (type === 'inc') {\n            this.gain(name, amount);\n        }\n        else if (type === 'dec') {\n            this.drain(name, amount);\n        }\n        else if (type === 'set') {\n            this.set(name, amount);\n        }\n        else if (type === 'min') {\n            const v = amount.value();\n            if (this.get(name) < v) {\n                this.set(name, v);\n            }\n        }\n        else if (type === 'max') {\n            if (this.get(name) > v) {\n                this.set(name, v);\n            }\n        }\n        else {\n            throw new Error('Invalid stat adjust type: ' + type);\n        }\n        return c !== this.get(name);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity/entity';\nimport * as Flags from '../flags';\nimport { getAction } from './action';\nimport { Status } from './status';\nimport { Stats } from './stat';\nexport class Actor extends Entity.Entity {\n    constructor(kind) {\n        super(kind);\n        this.ai = {};\n        this.leader = null;\n        this.items = null; // inventory\n        this.visionDistance = 99;\n        this.data = {};\n        this._costMap = null;\n        this._goalMap = null;\n        this._mapToMe = null;\n        this.next = null; // TODO - can we get rid of this?\n        // @ts-ignore - initialized in Entity\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n        this.kind = kind;\n        this.stats = new Stats();\n        this.status = new Status();\n    }\n    copy(other) {\n        super.copy(other);\n        this.leader = other.leader;\n        this.items = other.items;\n        this.visionDistance = other.visionDistance;\n    }\n    destroy() {\n        this.setEntityFlag(Flags.Entity.L_DESTROYED);\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    setActorFlag(flag) {\n        this.flags.actor |= flag;\n    }\n    clearActorFlag(flag) {\n        this.flags.actor &= ~flag;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isDead() {\n        return this.hasEntityFlag(Flags.Entity.L_DESTROYED);\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        if (action === undefined || action === true) {\n            const main = getAction(name); // default is to do any action\n            return main || false;\n        }\n        else if (action === false) {\n            return false;\n        }\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n    /////////////// VISIBILITY\n    becameVisible() {\n        return (this.hasActorFlag(Flags.Actor.IS_VISIBLE) &&\n            !this.hasActorFlag(Flags.Actor.WAS_VISIBLE));\n    }\n    canSee(x, y) {\n        if (x instanceof Entity.Entity) {\n            return this.canSee(x.x, x.y) && this.kind.isAbleToSee(this, x);\n        }\n        else if (this.map) {\n            if (this.isPlayer()) {\n                return this.map.fov.isDirectlyVisible(x, y);\n            }\n            if (GWU.xy.distanceBetween(this.x, this.y, x, y) >\n                this.visionDistance) {\n                return false;\n            }\n            return GWU.xy.forLineBetween(this.x, this.y, x, y, (i, j) => {\n                if (this.map.cell(i, j).blocksVision())\n                    return false;\n            });\n        }\n        else {\n            return false; // need a map or an fov\n        }\n    }\n    canSeeOrSense(x, y) {\n        if (x instanceof Entity.Entity) {\n            return (this.canSeeOrSense(x.x, x.y) &&\n                (this.kind.isAbleToSee(this, x) ||\n                    this.kind.isAbleToSense(this, x)));\n        }\n        if (this.map && this.isPlayer()) {\n            return this.map.fov.isAnyKindOfVisible(x, y);\n        }\n        return this.canSee(x, y);\n    }\n    isAbleToSee(entity) {\n        return this.kind.isAbleToSee(this, entity);\n    }\n    isAbleToSense(entity) {\n        return this.kind.isAbleToSense(this, entity);\n    }\n    ////////////////// ACTOR\n    async act(game) {\n        let startedVisible = false;\n        if (game.player.canSee(this)) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            startedVisible = true;\n        }\n        else {\n            if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n                console.log('not visible');\n            }\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        if (this.becameVisible()) {\n            console.log('became visible');\n            game.player.interrupt(this);\n        }\n        let r = 0;\n        if (this.ai && this.ai.fn) {\n            r = await this.ai.fn(game, this);\n        }\n        if (r == 0 && this.kind.ai.fn) {\n            r = await this.kind.ai.fn(game, this);\n        }\n        if (r) {\n            // did something\n            if (startedVisible || game.player.canSee(this)) {\n            }\n            return r;\n        }\n        // idle - always\n        return this.endTurn();\n    }\n    moveSpeed() {\n        return this.kind.moveSpeed;\n    }\n    startTurn() {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.hasActorFlag(Flags.Actor.IS_VISIBLE)) {\n            this.setActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.WAS_VISIBLE);\n        }\n        const map = this.map;\n        const isVisible = map && map.fov.isAnyKindOfVisible(this.x, this.y);\n        if (isVisible) {\n            this.setActorFlag(Flags.Actor.IS_VISIBLE);\n            if (!this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                !this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        else {\n            this.clearActorFlag(Flags.Actor.IS_VISIBLE);\n            if (map &&\n                !this.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR) &&\n                this.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n                map.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n            }\n        }\n        return Math.floor((pct * this.moveSpeed()) / 100);\n    }\n    ///////\n    willAttack(_other) {\n        return true;\n    }\n    canPass(_other) {\n        return false;\n    }\n    ////////////////// INVENTORY\n    avoidsItem(_item) {\n        return false;\n    }\n    canAddItem(_item) {\n        return false;\n    }\n    addItem(_item) { }\n    pickupItem(item, opts) {\n        return this.kind.pickupItem(this, item, opts);\n    }\n    dropItem(item, opts) {\n        return this.kind.dropItem(this, item, opts);\n    }\n    // PATHFINDING\n    addToMap(map, x, y) {\n        const mapChanged = super.addToMap(map, x, y);\n        if (mapChanged) {\n            this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n        }\n        return mapChanged;\n    }\n    removeFromMap() {\n        super.removeFromMap();\n        if (this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n        if (this._mapToMe) {\n            GWU.grid.free(this._mapToMe);\n            this._mapToMe = null;\n        }\n    }\n    /*\n    Calculates and returns the actor's move cost map.\n    Used in pathfinding.\n    */\n    costMap() {\n        if (!this.map) {\n            throw new Error('Actor must have map to calculate costMap.');\n        }\n        const staleMap = !this.hasActorFlag(Flags.Actor.STABLE_COST_MAP);\n        if (staleMap && this._costMap) {\n            GWU.grid.free(this._costMap);\n            this._costMap = null;\n        }\n        if (!this._costMap) {\n            this._costMap = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        else if (!staleMap) {\n            return this._costMap;\n        }\n        const kind = this.kind;\n        const map = this.map;\n        this._costMap.update((_v, x, y) => {\n            const cell = map.cell(x, y);\n            return kind.cellCost(cell, this);\n        });\n        this.setActorFlag(Flags.Actor.STABLE_COST_MAP);\n        /*\n\n            if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n            && (!cellHasTMFlag(i, j, TM_IS_SECRET) || (discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)))\n            {\n                playerCostMap[i][j] = monsterCostMap[i][j] = cellHasTerrainFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? PDS_OBSTRUCTION : PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_SACRED)) {\n                    playerCostMap[i][j] = 1;\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n            } else if (cellHasTerrainFlag(i, j, T_LAVA_INSTA_DEATH)) {\n        monsterCostMap[i][j] = PDS_FORBIDDEN;\n        if (player.status[STATUS_LEVITATING] || !player.status[STATUS_IMMUNE_TO_FIRE]) {\n            playerCostMap[i][j] = 1;\n        } else {\n            playerCostMap[i][j] = PDS_FORBIDDEN;\n        }\n            } else {\n                if (pmap[i][j].flags & HAS_MONSTER) {\n                    monst = monsterAtLoc(i, j);\n                    if ((monst.creatureState == MONSTER_SLEEPING\n                         || monst.turnsSpentStationary > 2\n             || (monst.info.flags & MONST_GETS_TURN_ON_ACTIVATION)\n                         || monst.creatureState == MONSTER_ALLY)\n                        && monst.creatureState != MONSTER_FLEEING)\n                    {\n                        playerCostMap[i][j] = 1;\n                        monsterCostMap[i][j] = PDS_FORBIDDEN;\n                        continue;\n                    }\n                }\n\n                if (cellHasTerrainFlag(i, j, (T_AUTO_DESCENT | T_IS_DF_TRAP))) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, T_IS_FIRE)) {\n                    monsterCostMap[i][j] = PDS_FORBIDDEN;\n          if (player.status[STATUS_IMMUNE_TO_FIRE]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = PDS_FORBIDDEN;\n          }\n                } else if (cellHasTerrainFlag(i, j, (T_IS_DEEP_WATER | T_SPONTANEOUSLY_IGNITES))) {\n          if (player.status[STATUS_LEVITATING]) {\n              playerCostMap[i][j] = 1;\n          } else {\n              playerCostMap[i][j] = 5;\n          }\n                    monsterCostMap[i][j] = 5;\n        } else if (cellHasTerrainFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n                   && cellHasTMFlag(i, j, TM_IS_SECRET) && !(discoveredTerrainFlagsAtLoc(i, j) & T_OBSTRUCTS_PASSABILITY)\n                   && !(pmap[i][j].flags & IN_FIELD_OF_VIEW))\n             {\n            // Secret door that the player can't currently see\n            playerCostMap[i][j] = 100;\n            monsterCostMap[i][j] = 1;\n                } else {\n                    playerCostMap[i][j] = monsterCostMap[i][j] = 1;\n                }\n            }\n        }\n    }\n        */\n        return this._costMap;\n    }\n    get goalMap() {\n        return this._goalMap;\n    }\n    hasGoal() {\n        return !!this._goalMap;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    clearGoal() {\n        if (this._goalMap) {\n            GWU.grid.free(this._goalMap);\n            this._goalMap = null;\n        }\n    }\n    mapToMe() {\n        if (!this.map)\n            throw new Error('No map!');\n        if (!this._mapToMe) {\n            this._mapToMe = GWU.grid.alloc(this.map.width, this.map.height);\n        }\n        if (this._mapToMe.x !== this.x || this._mapToMe.y !== this.y) {\n            GWU.path.calculateDistances(this._mapToMe, this.x, this.y, this.costMap());\n        }\n        return this._mapToMe;\n    }\n}\nActor.default = {\n    sidebarFg: 'purple',\n};\n","export const handlers = {};\nexport function installHandler(id, handler) {\n    handlers[id.toLowerCase()] = handler;\n}\nexport const effectTypes = {};\nexport function installType(id, type) {\n    effectTypes[id] = type;\n}\n// export class Effect {\n//     id = '';\n//     chance = 100 * 100; // 100%\n//     type: string; // self | bolt | beam | ball | burst | adjacent | spread\n//     aim: string; // actor | item | cell\n//     bolt: string | GWU.sprite.SpriteData | null = null;\n//     beam = false;\n//     range = 0;\n//     ball: string | GWU.sprite.SpriteData | null = null;\n//     radius = 0;\n//     center = false;\n//     effects: EffectFn[];\n//     good = false;\n//     seen = false;\n//     next: Effect | null = null;\n//     constructor(config: EffectConfig) {\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         this.aim = config.aim || 'actor';\n//         if (typeof config.chance === 'string') {\n//             // '20%' becomes 2000\n//             config.chance = Math.floor(Number.parseFloat(config.chance) * 100);\n//         }\n//         this.chance = config.chance || 100 * 100;\n//         const type = config.type || 'basic';\n//         const parts = type.split(':');\n//         if (type.startsWith('bolt') || type.startsWith('beam')) {\n//             // bolt:range:sprite\n//             this.type = parts[0];\n//             this.range = parts[1] ? Number.parseInt(parts[1]) : 99;\n//             this.bolt = parts[1] || 'missile';\n//             this.beam = type.startsWith('beam');\n//         } else if (\n//             type.startsWith('ball') ||\n//             type.startsWith('burst') ||\n//             type.startsWith('aura')\n//         ) {\n//             this.type = parts[0];\n//             this.radius = parts[1] ? Number.parseInt(parts[1]) : 2;\n//             this.range = parts[2] ? Number.parseInt(parts[2]) : 99;\n//             this.ball = parts[3] || 'explosion';\n//             this.center = !type.startsWith('aura');\n//         } else {\n//             this.type = 'basic';\n//         }\n//         if (typeof config.effects === 'string') {\n//             config.effects = [config.effects];\n//         } else if (typeof config.effects === 'function') {\n//             config.effects = [config.effects];\n//         }\n//         if (Array.isArray(config.effects)) {\n//             this.effects = config.effects.map((e) => {\n//                 if (typeof e === 'function') return e;\n//                 return effectFnFromString(e);\n//             });\n//         } else {\n//             this.effects = [];\n//             Object.entries(config.effects).forEach(([key, value]) => {\n//                 const handler = handlers[key.toLowerCase()];\n//                 if (handler) {\n//                     this.effects.push(handler(value));\n//                 } else if (typeof value === 'function') {\n//                     this.effects.push(value);\n//                 } else {\n//                     throw new Error('Unknown effect: ' + key);\n//                 }\n//             });\n//         }\n//         if (this.effects.length === 0) throw new Error('No effects!');\n//     }\n//     clone(): this {\n//         const other = new (this.constructor as new (\n//             config: EffectConfig\n//         ) => this)(this as EffectConfig);\n//         return other;\n//     }\n//     fire(map: Map.MapType, x: number, y: number, ctx: EffectCtx = {}): boolean {\n//         let didSomething = false;\n//         ctx.good = this.good;\n//         ctx.seen = this.seen;\n//         if (!this.chance || map.rng.chance(this.chance, 10000)) {\n//             // fire\n//             for (let effect of this.effects) {\n//                 if (GWU.data.gameHasEnded) break;\n//                 if (effect(map, x, y, ctx)) {\n//                     didSomething = true;\n//                 } else {\n//                     break;\n//                 }\n//             }\n//         }\n//         if (ctx.aware && didSomething) {\n//             this.seen = true;\n//         }\n//         this.good = ctx.good;\n//         return didSomething;\n//     }\n//     reset() {\n//         this.seen = false;\n//     }\n// }\n// export function effectFnFromString(e: string): EffectFn {\n//     const parts = e.split(':');\n//     if (parts.length === 0) throw new Error('Invalid effect string.');\n//     // @ts-ignore\n//     const name = parts.shift().toLowerCase();\n//     const handler = handlers[name] || null;\n//     if (!handler) {\n//         throw new Error('Failed to find effect handler: ' + name);\n//     }\n//     return handler(parts);\n// }\nexport function make(opts) {\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    let config = {};\n    if (typeof opts === 'string') {\n        // Special case\n        if (opts.toLowerCase().startsWith('spread:')) {\n            const endPos = opts.indexOf(':', 8);\n            const tile = opts.substring(8, endPos);\n            config = {\n                type: 'spread:' + opts.substring(endPos),\n                effects: ['tile:' + tile],\n            };\n        }\n        else {\n            config = { type: 'basic', effects: [opts] };\n        }\n    }\n    else if (typeof opts === 'function') {\n        config = { type: 'basic', effects: [opts] };\n    }\n    else if (Array.isArray(opts)) {\n        config = { type: 'basic', effects: opts };\n    }\n    else {\n        // @ts-ignore\n        if (opts.effect) {\n            // @ts-ignore\n            opts.effects = [opts.effect];\n            delete opts.effect;\n        }\n        // object only\n        if (opts.effects) {\n            Object.assign(config, opts);\n            if (typeof config.effects === 'string') {\n                config.effects = [opts.effects];\n            }\n            else if (typeof config.effects === 'function') {\n                config.effects = [opts.effects];\n            }\n        }\n        else {\n            config.effects = {};\n            Object.entries(opts).forEach(([key, value]) => {\n                const handler = handlers[key.toLowerCase()];\n                if (handler !== undefined) {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else if (typeof value === 'function') {\n                    // @ts-ignore\n                    config.effects[key] = value;\n                }\n                else {\n                    // @ts-ignore\n                    config[key] = value;\n                }\n            });\n        }\n    }\n    config.type = config.type || 'basic';\n    if (typeof config.type !== 'string')\n        throw new Error('Invalid effect type: ' + JSON.stringify(config.type));\n    const typeParts = config.type.split(':').map((t) => t.trim());\n    const typeName = typeParts.shift();\n    const makeFn = effectTypes[typeName.toLowerCase()];\n    if (!makeFn)\n        throw new Error('Invalid effect type: ' + typeName);\n    const effect = makeFn(config);\n    if (Array.isArray(config.effects)) {\n        config.effects.forEach((e) => {\n            if (typeof e === 'function') {\n                effect.effects.push(e);\n            }\n            else {\n                const parts = e.split(':').map((t) => t.trim());\n                if (parts.length === 1) {\n                    const effect = installedEffects[parts[0]];\n                    if (!effect)\n                        throw new Error('Failed to find effect with id: ' + parts[0]);\n                    effect.effects.push(effect.trigger.bind(effect));\n                }\n                else {\n                    const handler = handlers[parts[0].toLowerCase()];\n                    if (!handler)\n                        throw new Error('Unknown effect: ' + parts[0]);\n                    parts.shift();\n                    effect.effects.push(handler(parts));\n                }\n            }\n        });\n    }\n    else {\n        Object.entries(config.effects).forEach(([key, value]) => {\n            const handler = handlers[key.toLowerCase()];\n            if (!handler)\n                throw new Error('Failed to find handler type: ' + key);\n            effect.effects.push(handler(value));\n        });\n    }\n    if (config.next) {\n        effect.next = make(config.next);\n    }\n    return effect;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'object' && 'trigger' in opts) {\n        return opts;\n    }\n    if (typeof opts === 'string') {\n        const effect = installedEffects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\nfunction isEffect(obj) {\n    return typeof obj === 'object' && 'trigger' in obj;\n}\n//////////////////////////////\n// INSTALL\nexport const installedEffects = {};\nexport function install(id, config) {\n    const effect = isEffect(config) ? config.clone() : make(config);\n    installedEffects[id] = effect;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(installedEffects).forEach((e) => (e.seen = false));\n}\n","import * as GWU from 'gw-utils';\nimport { make as makeEffect } from '../effect/effect';\nimport * as Flags from '../flags';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.tags = [];\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = GWU.sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { entity: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n        if (this.hasEffect('fire')) {\n            this.flags.tile |= Flags.Tile.T_IS_FLAMMABLE;\n        }\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                config.tags\n                    .split(/[,|]/)\n                    .map((t) => t.trim())\n                    .forEach((t) => {\n                    this.tags.push(t);\n                });\n            }\n            else {\n                this.tags = config.tags.slice().map((t) => t.trim());\n            }\n        }\n    }\n    hasTag(tag) {\n        return this.tags.includes(tag);\n    }\n    hasAnyTag(tags) {\n        return GWU.arraysIntersect(this.tags, tags);\n    }\n    hasAllTags(tags) {\n        return tags.every((t) => this.tags.includes(t));\n    }\n    hasEntityFlag(flag) {\n        return !!(this.flags.entity & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllEntityFlags(flag) {\n        return (this.flags.entity & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.entity & Flags.Entity.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (typeof arg === 'boolean') {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = GWU.color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription(opts) {\n        return this.description || this.getName(opts);\n    }\n    getFlavor(opts) {\n        return this.flavor || this.getName(opts);\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f;\n    let base = { effects: {}, flags: {}, sprite: {}, priority: 50 };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    let priority = base.priority;\n    if (typeof options.priority === 'string') {\n        let text = options.priority.replace(/ /g, '');\n        let index = text.search(/[+-]/);\n        if (index == 0) {\n            priority = base.priority + Number.parseInt(text);\n        }\n        else if (index == -1) {\n            if (text.search(/[a-zA-Z]/) == 0) {\n                const tile = tiles[text];\n                if (!tile)\n                    throw new Error('Failed to find tile for priority - ' + text + '.');\n                priority = tile.priority;\n            }\n            else {\n                priority = Number.parseInt(text);\n            }\n        }\n        else {\n            const id = text.substring(0, index);\n            const delta = Number.parseInt(text.substring(index));\n            const tile = tiles[id];\n            if (!tile)\n                throw new Error('Failed to find tile for priority - ' + id + '.');\n            priority = tile.priority + delta;\n        }\n    }\n    else if (options.priority !== undefined) {\n        priority = options.priority;\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string' && !value.includes(':')) {\n                effects[key] = value;\n                return;\n            }\n            try {\n                effects[key] = makeEffect(value);\n            }\n            catch (e) {\n                throw new Error(`Failed to add effect to tile => ${key} : ${JSON.stringify(value)} : ` + e.message);\n            }\n        });\n    }\n    const flags = {\n        entity: GWU.flag.from(Flags.Entity, base.flags.entity, options.flags),\n        tile: GWU.flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: GWU.flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Flags.Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = GWU.light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_b = options.ch) !== null && _b !== void 0 ? _b : base.sprite.ch,\n        fg: (_c = options.fg) !== null && _c !== void 0 ? _c : base.sprite.fg,\n        bg: (_d = options.bg) !== null && _d !== void 0 ? _d : base.sprite.bg,\n        opacity: (_e = options.opacity) !== null && _e !== void 0 ? _e : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_f = options.article) !== null && _f !== void 0 ? _f : base.article,\n        tags: options.tags || null,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string')\n        return tiles[id] || null;\n    return all[id] || null;\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n// These are the minimal set of tiles to make the diggers work\nexport const NULL = install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\n","import { Tile, TileMech } from '../flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\n// import './tiles';\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nimport * as Flags from '../../flags';\nexport class BasicEffect {\n    constructor(config) {\n        this.effects = [];\n        this.chance = 100 * 100; // 100%\n        this.seen = false;\n        this.flags = 0;\n        this.next = null;\n        if (typeof config === 'object' && !Array.isArray(config)) {\n            this.flags = GWU.flag.from(Flags.Effect, config.flags);\n            if (typeof config.chance === 'string' &&\n                config.chance.endsWith('%')) {\n                this.chance = Number.parseFloat(config.chance) * 100;\n            }\n            else {\n                this.chance = Number.parseInt(config.chance || '10000');\n            }\n        }\n    }\n    clone() {\n        const other = new this.constructor();\n        other.effects = this.effects.slice();\n        other.chance = this.chance;\n        other.seen = false;\n        other.flags = this.flags;\n        other.next = this.next;\n        return other;\n    }\n    trigger(loc, ctx = {}) {\n        if (!ctx.force && this.chance) {\n            const rng = ctx.rng || loc.map.rng || GWU.random;\n            if (!rng.chance(this.chance, 10000))\n                return false;\n        }\n        let didSomething = false;\n        for (let eff of this.effects) {\n            if (eff(loc, ctx)) {\n                didSomething = true;\n            }\n        }\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                return this.next.trigger(loc, ctx);\n            }\n        }\n        return didSomething;\n    }\n}\nexport function makeBasicEffect(config) {\n    if (typeof config !== 'object') {\n        return new BasicEffect();\n    }\n    return new BasicEffect(config);\n}\nEffect.installType('basic', makeBasicEffect);\n","import * as GWU from 'gw-utils';\nimport { BasicEffect } from './basic';\nimport { installType } from '../effect';\nimport * as Flags from '../../flags';\nexport function makeSpreadEffect(config) {\n    return new SpreadEffect(config);\n}\ninstallType('spread', makeSpreadEffect);\nexport class SpreadEffect extends BasicEffect {\n    constructor(config) {\n        super(config);\n        this.grow = 0;\n        this.decrement = 0;\n        this.matchTile = '';\n        if (!config) {\n            config = { grow: 0, decrement: 0, flags: 0 };\n        }\n        if (typeof config === 'string') {\n            config = config.split(':').map((t) => t.trim());\n        }\n        if (Array.isArray(config)) {\n            if (config[0].toLowerCase() === 'spread') {\n                config.shift();\n            }\n            config = {\n                grow: config[0] || '0',\n                decrement: config[1] || '100',\n                flags: config[2] || '0',\n            };\n        }\n        else if (typeof config.type === 'string' &&\n            config.type.includes(':')) {\n            const parts = config.type.split(':').map((t) => t.trim());\n            if (parts[0].toLowerCase() === 'spread') {\n                parts.shift();\n            }\n            config.grow = parts[0] || '0';\n            config.decrement = parts[1] || '100';\n            config.flags = config.flags + '|' + parts[2];\n        }\n        this.grow = Number.parseInt(config.grow || 0);\n        this.decrement = Number.parseInt(config.decrement || 100);\n        this.flags = GWU.flag.from(Flags.Effect, config.flags || 0);\n        this.matchTile = config.matchTile || '';\n    }\n    clone() {\n        const other = super.clone();\n        other.grow = this.grow;\n        other.decrement = this.decrement;\n        other.matchTile = this.matchTile;\n        return other;\n    }\n    trigger(xy, ctx = {}) {\n        const abortIfBlocking = !!(this.flags & Flags.Effect.E_ABORT_IF_BLOCKS_MAP);\n        let didSomething = false;\n        const map = xy.map;\n        const spawnMap = GWU.grid.alloc(map.width, map.height);\n        didSomething = computeSpawnMap(this, xy, spawnMap);\n        if (!didSomething) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (abortIfBlocking && mapDisruptedBy(map, spawnMap)) {\n            GWU.grid.free(spawnMap);\n            return false;\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, spawnMap)) {\n                didSomething = true;\n            }\n        }\n        if (this.flags & Flags.Effect.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, spawnMap, this.flags)) {\n                didSomething = true;\n            }\n        }\n        spawnMap.forEach((v, x, y) => {\n            if (!v)\n                return;\n            spawnMap[x][y] = 1; // convert from generations to off/on/success\n            for (let eff of this.effects) {\n                if (eff({ map, x, y }, ctx)) {\n                    didSomething = true;\n                    spawnMap[x][y] = 2;\n                }\n            }\n        });\n        if (this.next) {\n            const nextAlways = !!(this.flags & Flags.Effect.E_NEXT_ALWAYS);\n            if (didSomething || nextAlways) {\n                if (this.flags & Flags.Effect.E_NEXT_EVERYWHERE) {\n                    spawnMap.forEach((v, x, y) => {\n                        if (!v)\n                            return;\n                        if (v == 2 || nextAlways) {\n                            this.next.trigger({ map, x, y }, ctx);\n                        }\n                    });\n                }\n                else {\n                    this.next.trigger({ map, x: xy.x, y: xy.y }, ctx);\n                }\n            }\n        }\n        GWU.grid.free(spawnMap);\n        return didSomething;\n    }\n}\nexport function mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(map.width, map.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(map.width, map.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (map.cell(i, j).isStairs()) {\n                disrupts = true;\n            }\n        }\n        else if (!map.cell(i, j).blocksMove()) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGWU.grid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Flags.Effect.E_BUILD_IN_WALLS) {\n        if (!map.cell(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Flags.Effect.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cell(x, y).isWall())\n            return false; // or on wall\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.cell(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.matchTile && !isStart && !cell.hasTile(effect.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, loc, spawnMap) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const map = loc.map;\n    let startProb = effect.grow || 0;\n    let probDec = effect.decrement || 0;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, loc.x, loc.y, true)) {\n        return false;\n    }\n    spawnMap[loc.x][loc.y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + GWU.xy.DIRS[dir][0];\n                            y2 = j + GWU.xy.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                map.rng.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Flags.Effect.E_CLEAR_CELL) === Flags.Effect.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Flags.Effect.E_CLEAR_GAS) {\n                cell.clearDepth(Flags.Depth.GAS);\n            }\n            if (flags & Flags.Effect.E_CLEAR_LIQUID) {\n                cell.clearDepth(Flags.Depth.LIQUID);\n            }\n            if (flags & Flags.Effect.E_CLEAR_SURFACE) {\n                cell.clearDepth(Flags.Depth.SURFACE);\n            }\n            if (flags & Flags.Effect.E_CLEAR_GROUND) {\n                cell.clearDepth(Flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let didSomething = false;\n    map.eachActor((a) => {\n        if (!blockingMap[a.x][a.y])\n            return;\n        const loc = map.rng.matchingLocNear(a.x, a.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const c = map.cell(x, y);\n            return !a.forbidsCell(c);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeActor(a);\n            map.addActor(loc[0], loc[1], a);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    map.eachItem((i) => {\n        if (!blockingMap[i.x][i.y])\n            return;\n        const loc = map.rng.matchingLocNear(i.x, i.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            const dest = map.cell(x, y);\n            return !i.forbidsCell(dest);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            map.removeItem(i);\n            map.addItem(loc[0], loc[1], i);\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// EMIT\nexport function makeEmitHandler(config) {\n    if (Array.isArray(config))\n        config = config[0];\n    if (typeof config !== 'string')\n        throw new Error('Invalid EMIT handler config - ' + config);\n    return emitEffect.bind(undefined, config);\n}\nexport function emitEffect(id, loc, ctx) {\n    return loc.map.events.emit(id, loc, ctx);\n}\ninstallHandler('emit', makeEmitHandler);\n","import * as GWU from 'gw-utils';\nimport { installHandler } from '../effect';\n//////////////////////////////////////////////\n// MESSAGE\nexport function makeMessageHandler(src) {\n    if (Array.isArray(src))\n        src = src[0];\n    if (typeof src !== 'string') {\n        throw new Error('Need message for message effect.');\n    }\n    const info = {\n        msg: src,\n    };\n    return messageEffect.bind(undefined, info);\n}\nexport function messageEffect(info, loc, ctx) {\n    const seen = ctx.seen;\n    const msg = info.msg;\n    if (msg &&\n        msg.length &&\n        ctx.aware &&\n        !seen\n    // && map.isVisible(x, y)\n    ) {\n        GWU.message.addAt(loc.x, loc.y, msg, ctx);\n        return true;\n    }\n    return false;\n}\ninstallHandler('msg', makeMessageHandler);\n","import { installHandler } from '../effect';\n//////////////////////////////////////////////\n// ActivateMachine\nexport function makeActivateMachine() {\n    return activateMachine.bind(undefined);\n}\nexport function activateMachine(loc, ctx) {\n    const cell = loc.map.cell(loc.x, loc.y);\n    const machine = cell.machineId;\n    if (!machine)\n        return false;\n    return loc.map.activateMachine(machine, loc.x, loc.y, ctx);\n}\ninstallHandler('activateMachine', makeActivateMachine);\n","import { installHandler } from '../effect';\nexport function makeTileHandler(src) {\n    if (!src)\n        throw new Error('Tile effect needs configuration.');\n    if (typeof src === 'string') {\n        src = { id: src };\n    }\n    else if (Array.isArray(src)) {\n        src = { id: src[0] };\n    }\n    else if (!src.id) {\n        throw new Error('Tile effect needs configuration with id.');\n    }\n    const opts = src;\n    if (opts.id.includes('!')) {\n        opts.superpriority = true;\n    }\n    if (opts.id.includes('~')) {\n        opts.blockedByActors = true;\n        opts.blockedByItems = true;\n    }\n    opts.id = opts.id.replace(/[!~]*/g, '');\n    return tileEffect.bind(opts);\n}\nexport function tileEffect(loc, ctx) {\n    this.machine = ctx.machine || 0;\n    const didSomething = loc.map.setTile(loc.x, loc.y, this.id, this);\n    return didSomething;\n}\ninstallHandler('tile', makeTileHandler);\n","import * as Flags from '../../flags';\nimport { installHandler } from '../effect';\nexport function makeClearHandler(config) {\n    let layers = 0;\n    if (!config) {\n        layers = Flags.Depth.ALL_LAYERS;\n    }\n    else if (typeof config === 'number') {\n        layers = config;\n    }\n    else if (typeof config === 'string') {\n        const parts = config.split(/[,|]/g);\n        layers = parts.reduce((out, v) => {\n            if (typeof v === 'number')\n                return out | v;\n            const depth = Flags.Depth[v] || 0;\n            return out | depth;\n        }, 0);\n    }\n    else {\n        throw new Error('Invalid config for clear effect: ' + JSON.stringify(config));\n    }\n    return clearEffect.bind(undefined, layers);\n}\nexport function clearEffect(layers, loc, _ctx) {\n    if (!layers)\n        return false;\n    const cell = loc.map.cell(loc.x, loc.y);\n    return cell.clearDepth(layers);\n}\ninstallHandler('clear', makeClearHandler);\n","import * as Effect from '../effect';\nexport function makeFeatureHandler(id) {\n    if (Array.isArray(id))\n        id = id[0];\n    if (id && typeof id !== 'string') {\n        id = id.id;\n    }\n    if (!id || !id.length)\n        throw new Error('Feature effect needs ID');\n    return featureEffect.bind(undefined, id);\n}\nexport function featureEffect(id, loc, ctx) {\n    const feat = Effect.installedEffects[id];\n    if (!feat) {\n        throw new Error('Failed to find feature: ' + id);\n    }\n    return feat.trigger(loc, ctx);\n}\nEffect.installHandler('feature', makeFeatureHandler);\nEffect.installHandler('effect', makeFeatureHandler);\nEffect.installHandler('id', makeFeatureHandler);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeNourishEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Nourish config.');\n    let info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.type = opts[0] || 'inc';\n        info.amount = GWU.range.make(opts[1] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(opts.amount || 1);\n    }\n    else {\n        throw new Error('Invalid Nourish config: ' + JSON.stringify(opts));\n    }\n    return nourishEffect.bind(undefined, info);\n}\nexport function nourishEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    const stats = actor.stats;\n    const c = stats.get('food');\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    const n = stats.get('food');\n    if (n < c && n / stats.max('food') < 0.1) {\n        GWU.message.addAt(actor.x, actor.y, nourishEffect.default.pukeMsg, {\n            actor,\n        });\n    }\n    return true;\n}\nnourishEffect.default = {\n    pukeMsg: '%you vomit.',\n};\nEffect.installHandler('nourish', makeNourishEffect);\n","import * as GWU from 'gw-utils';\nimport * as Effect from '../effect';\nexport function makeStatEffect(opts) {\n    if (!opts)\n        throw new Error('Invalid Stat config.');\n    const info = {};\n    if (typeof opts === 'string') {\n        opts = opts.split(':').map((t) => t.trim());\n    }\n    if (Array.isArray(opts)) {\n        info.stat = opts[0];\n        info.type = opts[1] || 'inc';\n        info.amount = GWU.range.make(opts[2] || 1);\n    }\n    else if (opts.type || opts.amount) {\n        info.stat = opts.stat;\n        info.type = opts.type || 'inc';\n        info.amount = GWU.range.make(info.amount || 1);\n    }\n    else {\n        throw new Error('Invalid stat effect configuration: ' + JSON.stringify(opts));\n    }\n    return statEffect.bind(undefined, info);\n}\nexport function statEffect(config, loc, _ctx) {\n    if (!config.amount)\n        return false;\n    // who am I nourishing?\n    const actor = loc.map.actorAt(loc.x, loc.y);\n    if (!actor) {\n        return false;\n    }\n    // sustain?\n    const stats = actor.stats;\n    if (!stats.adjust('food', config.type, config.amount))\n        return false;\n    return true;\n}\nEffect.installHandler('stat', makeStatEffect);\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nGWU.color.install('cellStatusName', 'light_blue');\nexport const NEVER_SEEN = {\n    tiles: [TILE.NULL],\n    item: null,\n    actor: null,\n    flags: {\n        cell: 0,\n        entity: TILE.NULL.flags.entity,\n        tile: TILE.NULL.flags.tile,\n        tileMech: TILE.NULL.flags.tileMech,\n    },\n};\nexport class Cell {\n    constructor(map, x, y, groundTile) {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.x = -1;\n        this.y = -1;\n        // toFire: Partial<Effect.EffectCtx>[] = [];\n        this.memory = null;\n        // this._entities = new CellEntities(this);\n        this.flags = { cell: Flags.Cell.NEEDS_REDRAW };\n        this.tiles = [TILE.tiles.NULL];\n        this.map = map;\n        this.x = x;\n        this.y = y;\n        this.snapshot = GWU.sprite.makeMixer();\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n        this.memory = NEVER_SEEN;\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    get hasStableSnapshot() {\n        return this.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    }\n    get hasStableMemory() {\n        return this.hasCellFlag(Flags.Cell.STABLE_MEMORY);\n    }\n    storeMemory() {\n        var _a;\n        this.setCellFlag(Flags.Cell.STABLE_MEMORY);\n        // store memory\n        this.memory = {\n            flags: {\n                cell: this.flags.cell,\n                entity: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.entity) || 0), 0),\n                tile: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tile) || 0), 0),\n                tileMech: this.tiles.reduce((out, tile) => out | ((tile === null || tile === void 0 ? void 0 : tile.flags.tileMech) || 0), 0),\n            },\n            tiles: this.tiles.slice(),\n            item: ((_a = this.item) === null || _a === void 0 ? void 0 : _a.clone()) || null,\n            actor: null,\n        };\n        if (this.hasItem()) {\n            const item = this.item;\n            if (item) {\n                this.memory.flags.entity |= item.flags.entity;\n            }\n        }\n        if (this.hasActor()) {\n            const actor = this.actor;\n            if (actor) {\n                this.memory.flags.entity |= actor.flags.entity;\n            }\n            this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n    }\n    clearMemory() {\n        this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT | Flags.Cell.STABLE_MEMORY);\n        this.memory = null;\n        this.needsRedraw = true;\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles.length = other.tiles.length;\n        for (let i = 0; i < this.tiles.length; ++i) {\n            this.tiles[i] = other.tiles[i];\n        }\n        this.machineId = other.machineId;\n        // this._actor = other.actor;\n        // this._item = other.item;\n        this.memory = other.memory;\n        this.map = other.map;\n        this.x = other.x;\n        this.y = other.y;\n        other.getSnapshot(this.snapshot);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasEntityFlag(flag, checkEntities = false) {\n        var _a, _b;\n        if (this.tiles.some((t) => t && t.flags.entity & flag))\n            return true;\n        if (!checkEntities)\n            return false;\n        if (this.hasItem()) {\n            if ((_a = this.item) === null || _a === void 0 ? void 0 : _a.hasEntityFlag(flag))\n                return true;\n        }\n        if (this.hasActor()) {\n            if ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.hasEntityFlag(flag))\n                return true;\n        }\n        return false;\n    }\n    hasAllEntityFlags(flags, checkEntities = false) {\n        return (this.entityFlags(checkEntities) & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    hasTileTag(tag) {\n        return this.tiles.some((tile) => tile && tile.hasTag(tag));\n    }\n    hasAllTileTags(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAllTags(tags);\n        });\n    }\n    hasAnyTileTag(tags) {\n        return this.tiles.some((tile) => {\n            return tile && tile.hasAnyTag(tags);\n        });\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    entityFlags(withEntities = false) {\n        var _a, _b;\n        let flag = this.tiles.reduce((out, t) => out | (t ? t.flags.entity : 0), 0);\n        if (withEntities) {\n            if (this.hasItem()) {\n                flag |= ((_a = this.item) === null || _a === void 0 ? void 0 : _a.flags.entity) || 0;\n            }\n            if (this.hasActor()) {\n                flag |= ((_b = this.actor) === null || _b === void 0 ? void 0 : _b.flags.entity) || 0;\n            }\n        }\n        return flag;\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.Cell.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            if (!this.memory) {\n                this.flags.cell |= Flags.Cell.NEEDS_REDRAW;\n                this.flags.cell &= ~Flags.Cell.STABLE_SNAPSHOT;\n                this.map.needsRedraw = true;\n            }\n        }\n        else {\n            this.flags.cell &= ~Flags.Cell.NEEDS_REDRAW;\n        }\n    }\n    get changed() {\n        return !!(this.flags.cell & Flags.Cell.CHANGED);\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.entity & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return this.tiles.some((t) => t && t.blocksVision());\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) &&\n            !this.tiles.some((t) => t && t.hasTileFlag(Flags.Tile.T_BRIDGE)));\n    }\n    blocksMove() {\n        return this.tiles.some((t) => t && t.blocksMove());\n    }\n    blocksEffects() {\n        return this.tiles.some((t) => t && t.blocksEffects());\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isNull() {\n        return this.tiles.every((t) => !t || t === TILE.tiles.NULL);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllEntityFlags(Flags.Entity.L_WALL_FLAGS);\n    }\n    isDoor() {\n        return this.hasTileFlag(Flags.Tile.T_IS_DOOR);\n    }\n    isStairs() {\n        return this.hasTileFlag(Flags.Tile.T_HAS_STAIRS);\n    }\n    isFloor() {\n        // Floor tiles do not block anything...\n        return (!this.hasEntityFlag(Flags.Entity.L_BLOCKS_EVERYTHING) &&\n            !this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    isGateSite() {\n        return this.hasCellFlag(Flags.Cell.IS_GATE_SITE);\n    }\n    isSecretlyPassable() {\n        return this.hasEntityFlag(Flags.Entity.L_SECRETLY_PASSABLE);\n    }\n    // hasKey(): boolean {\n    //     return this._entities.some(\n    //         (e) => !!e.key && e.key.matches(this.x, this.y)\n    //     );\n    // }\n    hasLiquid() {\n        return this.hasTileFlag(Flags.Tile.T_ANY_LIQUID);\n    }\n    // @returns - whether or not the change results in a change to the cell tiles.\n    //          - If there is a change to cell lighting, the cell will have the\n    //          - LIGHT_CHANGED flag set.\n    setTile(tile, opts = {}) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        if (current === tile)\n            return false;\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (this.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && this.hasItem())\n            return false;\n        if (opts.blockedByActors && this.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && this.highestPriority() > tile.priority)\n            return false;\n        // TODO - Are we blocked by other layer (L_BLOCKS_SURFACE on an already present tile)?\n        if (tile.depth > Flags.Depth.GROUND && tile.groundTile) {\n            const currentGround = this.depthTile(Flags.Depth.GROUND);\n            const wantGround = TILE.get(tile.groundTile);\n            if (currentGround !== wantGround) {\n                if (!this.setTile(wantGround, opts)) {\n                    return false;\n                }\n            }\n        }\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        if (tile.hasEntityFlag(Flags.Entity.L_BLOCKS_SURFACE)) {\n            this.clearDepth(Flags.Depth.SURFACE);\n        }\n        if (opts.machine) {\n            this.machineId = opts.machine;\n        }\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (current.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR) !==\n            tile.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.map.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            this.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clearTiles(tile) {\n        this.tiles[0] = TILE.tiles.NULL;\n        for (let i = 1; i < this.tiles.length; ++i) {\n            this.tiles[i] = null;\n        }\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.needsRedraw = true;\n    }\n    clear(tile) {\n        this.tiles = [TILE.tiles.NULL];\n        this.flags.cell = 0;\n        this.needsRedraw = true;\n        this.chokeCount = 0;\n        this.machineId = 0;\n        if (tile) {\n            this.setTile(tile);\n        }\n        this.snapshot.blackOut();\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    tileWithEffect(name) {\n        return this.tiles.find((t) => t === null || t === void 0 ? void 0 : t.hasEffect(name)) || null;\n    }\n    fireEvent(event, ctx = {}) {\n        // ctx.cell = this;\n        let didSomething = false;\n        // console.log('fire event - %s', event);\n        for (const tile of this.tiles) {\n            if (!tile || !tile.effects)\n                continue;\n            const ev = tile.effects[event];\n            if (ev) {\n                const r = this._activate(ev, ctx);\n                if (r) {\n                    didSomething = true;\n                }\n            }\n        }\n        return didSomething;\n    }\n    _activate(effect, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.installedEffects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = effect.trigger(this, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.Cell.HAS_ITEM);\n    }\n    get item() {\n        return this.map.itemAt(this.x, this.y);\n    }\n    canAddItem(_item) {\n        return true;\n    }\n    canRemoveItem(_item) {\n        return true;\n    }\n    _addItem(_item) {\n        this.setCellFlag(Flags.Cell.HAS_ITEM);\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeItem(item) {\n        let hasItems = false;\n        let foundIndex = -1;\n        this.map.items.forEach((obj, index) => {\n            if (obj === item) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasItems = true;\n            }\n        });\n        if (!hasItems) {\n            this.clearCellFlag(Flags.Cell.HAS_ITEM);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.Cell.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.Cell.HAS_PLAYER);\n    }\n    get actor() {\n        return this.map.actorAt(this.x, this.y);\n    }\n    canAddActor(_actor) {\n        return true;\n    }\n    canRemoveActor(_actor) {\n        return true;\n    }\n    _addActor(actor) {\n        this.setCellFlag(Flags.Cell.HAS_ACTOR);\n        if (actor.isPlayer()) {\n            this.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    _removeActor(actor) {\n        let hasActor = false;\n        let foundIndex = -1;\n        this.map.actors.forEach((obj, index) => {\n            if (obj === actor) {\n                foundIndex = index;\n            }\n            else if (obj.x === this.x && obj.y === this.y) {\n                hasActor = true;\n            }\n        });\n        if (!hasActor) {\n            this.clearCellFlag(Flags.Cell.HAS_ACTOR | Flags.Cell.HAS_PLAYER);\n        }\n        if (foundIndex < 0)\n            return false;\n        this.needsRedraw = true;\n        // this.clearCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        return true;\n    }\n    hasFx() {\n        return !!(this.flags.cell & Flags.Cell.HAS_FX);\n    }\n    get fx() {\n        return this.map.fxAt(this.x, this.y);\n    }\n    _addFx(_fx) {\n        this.setCellFlag(Flags.Cell.HAS_FX);\n        this.needsRedraw = true;\n    }\n    _removeFx(_fx) {\n        if (!this.fx) {\n            this.clearCellFlag(Flags.Cell.HAS_FX);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        if (this.hasActor()) {\n            const actor = this.map.actorAt(this.x, this.y);\n            if (actor && actor.sprite.ch)\n                return actor.sprite.ch;\n        }\n        if (this.hasItem()) {\n            const item = this.map.itemAt(this.x, this.y);\n            if (item && item.sprite.ch)\n                return item.sprite.ch;\n        }\n        if (this.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n            return '=';\n        }\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n    drawSidebar(buffer, bounds) {\n        const lines = buffer.wrapText(bounds.x + 1, bounds.y, bounds.width - 1, this.getName(), 'cellStatusName');\n        return lines;\n    }\n    toString() {\n        return `Cell @ ${this.x},${this.y}`;\n    }\n}\n","import { Entity } from '../entity/entity';\nimport { Depth } from '../flags';\nexport class Item extends Entity {\n    constructor(kind) {\n        super(kind);\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore - initialized in constructor\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n        this.kind = kind;\n    }\n    isPlural() {\n        if (this.quantity > 1)\n            return true;\n        return super.isPlural();\n    }\n    copy(other) {\n        super.copy(other);\n        this.quantity = other.quantity;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    getAction(name) {\n        const action = this.kind.actions[name];\n        return action;\n    }\n    getBumpActions() {\n        return this.kind.bump;\n    }\n}\nItem.default = {\n    sidebarFg: 'gold',\n};\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor/actor';\nimport { Cell } from '../map/cell';\nimport { Item } from '../item/item';\nimport * as Flags from '../flags';\nexport function messageYou(name, view, args) {\n    const field = args[0] || 'actor';\n    const actor = this.get(view, field);\n    if (actor && actor instanceof Actor) {\n        if (actor.isPlayer()) {\n            return 'you';\n        }\n        else {\n            return 'the ' + actor.getName();\n        }\n    }\n    return actor || name;\n}\nGWU.text.addHelper('you', messageYou);\nexport function messageThe(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else {\n                return 'the ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'the ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('the', messageThe);\nexport function messageA(name, view, args) {\n    const value = args[0]\n        ? this.get(view, args[0])\n        : view.item || view.cell || view.target || view.actor;\n    if (value) {\n        if (value instanceof Cell) {\n            return value.getFlavor();\n        }\n        else if (value instanceof Actor) {\n            if (value.isPlayer()) {\n                return 'you';\n            }\n            else if (value.hasEntityFlag(Flags.Entity.L_FORMAL_NAME)) {\n                return value.getName();\n            }\n            else {\n                return 'a ' + value.getName();\n            }\n        }\n        else if (value instanceof Item) {\n            return 'a ' + value.getName();\n        }\n    }\n    return name;\n}\nGWU.text.addHelper('a', messageA);\nGWU.text.addHelper('an', messageA);\nexport function messageVerb(_name, view, args) {\n    const verb = args[0] || 'verb';\n    const value = args[1]\n        ? this.get(view, args[1])\n        : view.actor || view.target || view.item || view.cell;\n    let plural = false;\n    if (value) {\n        if (value instanceof Cell) {\n            plural = false;\n        }\n        else if (value instanceof Actor) {\n            plural = value.isPlural();\n        }\n        else if (value instanceof Item) {\n            plural = value.isPlural();\n        }\n    }\n    return plural ? GWU.text.toPluralVerb(verb) : GWU.text.toSingularVerb(verb);\n}\nGWU.text.addHelper('verb', messageVerb);\n","import * as GWU from 'gw-utils';\nexport class PainMessages {\n    constructor(msgs = []) {\n        this._msgs = [];\n        msgs.forEach((m) => this.add(m));\n    }\n    add(msg) {\n        this._msgs.push(msg);\n        return this;\n    }\n    get(pct, singular = true) {\n        const index = GWU.clamp(Math.floor(pct * this._msgs.length), 0, this._msgs.length - 1);\n        const msg = this._msgs[index];\n        return this._format(msg, singular);\n    }\n    _format(msg, singular = true) {\n        return msg.replace(/\\[(\\w+)\\|?(\\w*)\\]/g, singular ? '$1' : '$2');\n    }\n}\nexport const painMessages = {};\nexport function installPain(id, pain) {\n    if (Array.isArray(pain)) {\n        pain = new PainMessages(pain);\n    }\n    painMessages[id] = pain;\n}\nexport function getPain(id) {\n    const m = painMessages[id];\n    if (!m)\n        throw new Error('No such pain message index: ' + id);\n    return m;\n}\n","export const ais = {};\nexport function install(name, fn) {\n    ais[name] = fn;\n}\nexport function make(opts) {\n    if (typeof opts === 'string') {\n        opts = { fn: opts };\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    if (typeof opts.fn === 'string') {\n        opts.fn = ais[opts.fn];\n    }\n    if (!opts.fn) {\n        opts.fn = ais.default;\n    }\n    return opts;\n}\n","import * as GWU from 'gw-utils';\nimport { getAction } from '../actor/action';\nimport * as AI from './ai';\nimport { wander } from './wander';\nexport class AICtx {\n    constructor(game, actor, target) {\n        this.item = null;\n        this.count = 0;\n        this.game = game;\n        this.actor = actor;\n        this.target = target || null;\n        this.distanceMap = GWU.grid.alloc(game.map.width, game.map.height);\n        if (target) {\n            const costMap = actor.costMap();\n            GWU.path.calculateDistances(this.distanceMap, target.x, target.y, costMap);\n        }\n    }\n    start() {\n        ++this.count;\n        return this;\n    }\n    done(result) {\n        --this.count;\n        if (this.count == 0) {\n            GWU.grid.free(this.distanceMap);\n        }\n        return result;\n    }\n}\n/*\nhttp://roguebasin.com/index.php/Roguelike_Intelligence_-_Stateless_AIs\n-- Typical AI\n*/\nexport async function typical(game, actor) {\n    if (actor.isDead())\n        return -1;\n    const map = actor.map;\n    if (!map)\n        return -1; // actor not on map ?!?!\n    const target = game.player;\n    const tryAttack = actor.canSee(target) && actor.willAttack(target);\n    if (tryAttack) {\n        const damagePct = 100 - actor.stats.getPct('health');\n        const morale = actor.stats.get('morale');\n        const chargeChance = 100;\n        const retreatChance = 0;\n        actor.ai.lastSawPlayer = [target.x, target.y];\n        actor.clearGoal();\n        console.log('SAW YOU!', actor.id, target.x, target.y);\n        const ctx = new AICtx(game, actor, target).start();\n        let result = 0;\n        if (damagePct > morale) {\n            if (canRunAwayFrom(game, actor, target, ctx)) {\n                result = await runAwayFrom(game, actor, target, ctx);\n            }\n            else if (canAttack(game, actor, target, ctx)) {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            if (GWU.random.chance(chargeChance)) {\n                result = await moveToward(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canAttack(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            if (GWU.random.chance(retreatChance)) {\n                result = await moveAwayFrom(game, actor, target, ctx);\n            }\n            else {\n                result = await attack(game, actor, target, ctx);\n            }\n            return ctx.done(result);\n        }\n        if (canAttack(game, actor, target, ctx)) {\n            result = await attack(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooFarFrom(game, actor, target, ctx) &&\n            canMoveToward(game, actor, target, ctx)) {\n            result = await moveToward(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n        if (tooCloseTo(game, actor, target, ctx) &&\n            canMoveAwayFrom(game, actor, target, ctx)) {\n            result = await moveAwayFrom(game, actor, target, ctx);\n            return ctx.done(result);\n        }\n    }\n    // TODO - Use scent, menory, other teammates info, ...\n    else if (actor.ai.lastSawPlayer) {\n        if (!actor.hasGoal()) {\n            const loc = actor.ai.lastSawPlayer;\n            actor.setGoal(loc[0], loc[1]);\n        }\n        console.log('CHASING YOU!', actor.id, actor.goalMap.x, actor.goalMap.y);\n        const result = await moveTowardGoal(game, actor);\n        if (result) {\n            return result;\n        }\n        actor.ai.lastSawPlayer = null; // no longer\n        actor.clearGoal();\n    }\n    // check if they noticed the player scent\n    if (target.scent) {\n        const dir = target.scent.nextDir(actor.x, actor.y);\n        if (dir) {\n            console.log('tracking scent', actor.id, dir);\n            const moveDir = getAction('moveDir');\n            if (!moveDir)\n                throw new Error('No moveDir action found for Actors!');\n            const result = await moveDir(game, actor, { dir });\n            if (result)\n                return result;\n        }\n    }\n    const wanderOpt = GWU.object.firstOpt('wander', actor.ai, actor.kind.ai, false);\n    if (wanderOpt) {\n        if (actor.goalMap || // we have a current goal\n            typeof wanderOpt !== 'number' || // wander: true\n            GWU.random.chance(wanderOpt) // chance\n        ) {\n            const result = wander(game, actor);\n            if (result)\n                return result;\n        }\n        else {\n            const idle = getAction('idle');\n            if (idle) {\n                return idle(game, actor);\n            }\n        }\n    }\n    const standStill = getAction('standStill');\n    if (!standStill)\n        throw new Error('No standStill action found for actors!');\n    return standStill(game, actor);\n}\nAI.install('typical', typical);\nAI.install('default', typical);\nexport function canMoveToward(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        if (distanceMap[x][y] < center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveToward(game, actor, target, ctx) {\n    // pathfinding?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    // distanceMap.dump();\n    const map = game.map;\n    const step = GWU.path.nextStep(ctx.distanceMap, actor.x, actor.y, (x, y) => {\n        const cell = map.cell(x, y);\n        if (!cell)\n            return true;\n        if (cell.hasActor() && cell.actor !== target)\n            return true;\n        if (cell.blocksMove())\n            return true;\n        return false;\n    });\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        const standStill = getAction('standStill');\n        if (!standStill)\n            throw new Error('No standStill action found for actors!');\n        result = await standStill(game, actor);\n        return ctx.done(result);\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return ctx.done(result);\n}\nexport function canMoveAwayFrom(game, actor, target, ctx) {\n    // can move?\n    ctx = (ctx || new AICtx(game, actor, target)).start();\n    const distanceMap = ctx.distanceMap;\n    const canMoveDiagonal = false;\n    // look for distance > current around me\n    let center = distanceMap[actor.x][actor.y];\n    let count = 0;\n    GWU.xy.eachNeighbor(actor.x, actor.y, (x, y) => {\n        const d = distanceMap[x][y];\n        if (d >= GWU.path.NO_PATH)\n            return;\n        if (distanceMap[x][y] > center) {\n            ++count;\n        }\n    }, canMoveDiagonal);\n    return ctx.done(count > 0);\n}\nexport async function moveAwayFrom(_game, actor, _target, _ctx) {\n    // safety/strategy?\n    // always move using safety map?\n    return actor.endTurn();\n}\nexport function canRunAwayFrom(_game, _actor, _target, _ctx) {\n    // can move?\n    return false;\n}\nexport async function runAwayFrom(_game, actor, _target, _ctx) {\n    // move toward loop if away from player\n    return actor.endTurn();\n}\nexport function canAttack(_game, actor, target, _ctx) {\n    // has attack?\n    // attack affects player?\n    // cooldown?\n    return GWU.xy.distanceFromTo(actor, target) <= 1;\n}\nexport async function attack(game, actor, target, _ctx) {\n    console.log('attack!', actor.id, target.id);\n    let attack = actor.getAction('attack');\n    if (!attack)\n        return 0;\n    return attack(game, actor, { actor: target });\n}\nexport function tooFarFrom(_game, actor, target, _ctx) {\n    // diagonal?\n    return GWU.xy.distanceFromTo(actor, target) > 1;\n}\nexport function tooCloseTo(_game, actor, target, _ctx) {\n    return GWU.xy.distanceFromTo(actor, target) < 1;\n}\n// TODO - make an action\nexport async function moveTowardGoal(game, actor) {\n    if (!actor.hasGoal())\n        return 0;\n    const nextStep = GWU.path.nextStep(actor.goalMap, actor.x, actor.y, (x, y) => {\n        return actor.map.hasActor(x, y);\n    });\n    if (!nextStep) {\n        actor.clearGoal();\n        return 0;\n    }\n    const moveDir = actor.getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action for actor!');\n    return await moveDir(game, actor, { dir: nextStep });\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { getAction } from '../actor/action';\nexport async function wander(game, actor) {\n    // Do we have a wander target?\n    let goalMap = actor.goalMap;\n    if (!goalMap) {\n        //      pick new wander target\n        const costMap = actor.costMap();\n        const loc = GWU.random.matchingLoc(costMap.width, costMap.height, (x, y) => {\n            return costMap[x][y] > 0 && costMap[x][y] !== GWU.path.NO_PATH;\n        });\n        if (!loc || loc[0] < 0 || loc[1] < 0) {\n            console.log('No wander location found!');\n            return 0;\n        }\n        //      build distance map to target\n        goalMap = actor.setGoal(loc[0], loc[1]);\n    }\n    // take the next step to the target\n    const step = GWU.path.nextStep(goalMap, actor.x, actor.y, (x, y) => {\n        if (!game.map.hasActor(x, y))\n            return false;\n        const other = game.map.actorAt(x, y);\n        if (!other) {\n            console.log(`Cell @ ${x},${y} has actor flag, but no actor.`);\n            game.map.cell(x, y).clearCellFlag(Flags.Cell.HAS_ACTOR);\n            return false;\n        }\n        return !actor.canPass(other);\n    });\n    if (!step) {\n        actor.clearGoal();\n        return 0;\n    }\n    let result = 0;\n    if (!step || (step[0] == 0 && step[1] == 0)) {\n        return 0; // did nothing\n    }\n    const moveDir = getAction('moveDir');\n    if (!moveDir)\n        throw new Error('No moveDir action found for Actors!');\n    result = await moveDir(game, actor, { dir: step });\n    return result;\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nexport function fillSafetyMap(safetyMap, actor, target) {\n    const costGrid = GWU.grid.alloc(actor.costMap());\n    GWU.path.calculateDistances(safetyMap, target.x, target.y, costGrid, true);\n    safetyMap.update((v) => v * -1); // Can set factor to be < -1 e.g. -1.2\n    actor.map.actors.forEach((a) => {\n        if (a.willAttack(actor)) {\n            costGrid[a.x][a.y] = GWU.path.FORBIDDEN; // This is why we allocate a copy\n        }\n    });\n    actor.map.eachCell((c, x, y) => {\n        if (c.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n            safetyMap[x][y] -= GWU.path.AVOIDED; // loop cells are extra good\n        }\n    });\n    GWU.path.rescan(safetyMap, costGrid, true);\n    safetyMap.update((v) => (v <= -30000 ? 30000 : v));\n    GWU.grid.free(costGrid);\n}\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Actor } from './actor';\nimport * as AI from '../ai';\nexport class ActorKind extends Entity.EntityKind {\n    constructor(opts) {\n        super(opts);\n        this.flags = {\n            actor: Flags.Actor.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.vision = {};\n        this.actions = {};\n        this.bump = ['attack'];\n        this.moveSpeed = 100;\n        if (opts.flags) {\n            this.flags.actor = GWU.flag.from(Flags.Actor, this.flags.actor, opts.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, opts.flags);\n        }\n        if (opts.vision) {\n            this.vision.normal = opts.vision;\n        }\n        this.stats = Object.assign({ health: 1, morale: 100 }, opts.stats);\n        if (opts.actions) {\n            Object.assign(this.actions, opts.actions);\n        }\n        if (opts.moveSpeed) {\n            this.moveSpeed = opts.moveSpeed;\n        }\n        this.ai = AI.make(opts.ai || 'default');\n        if (opts.bump) {\n            if (typeof opts.bump === 'string') {\n                opts.bump = opts.bump.split(/[|,]/g).map((t) => t.trim());\n            }\n            if (typeof opts.bump === 'function') {\n                opts.bump = [opts.bump];\n            }\n            if (Array.isArray(opts.bump)) {\n                this.bump = opts.bump.slice();\n            }\n        }\n        if (opts.waterOnly) {\n            this.forbidTileFlags =\n                this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.avoidTileFlags =\n                this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            this.requireTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n        }\n        else if (opts.lavaOnly) {\n            this.forbidTileFlags = this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n            this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n            this.requireTileFlags |= Flags.Tile.T_LAVA;\n        }\n        else {\n            if (opts.swim) {\n                this.avoidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            else {\n                this.forbidTileFlags |= Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n            if (opts.fly) {\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_LAVA;\n                this.avoidTileFlags = this.avoidTileFlags & ~Flags.Tile.T_LAVA;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_LAVA;\n                this.forbidTileFlags =\n                    this.forbidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.avoidTileFlags =\n                    this.avoidTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n                this.requireTileFlags =\n                    this.requireTileFlags & ~Flags.Tile.T_IS_DEEP_LIQUID;\n            }\n        }\n        this.sidebarFg = GWU.color.from(opts.sidebarFg || Actor.default.sidebarFg);\n    }\n    make(options) {\n        const actor = new Actor(this);\n        this.init(actor, options);\n        return actor;\n    }\n    init(actor, options = {}) {\n        super.init(actor, options);\n        Object.assign(actor.flags, this.flags);\n        // if (options.fov) {\n        //     actor.fov = options.fov;\n        // }\n        // if (options.memory) {\n        //     actor.memory = options.memory;\n        // }\n        if (this.vision.normal) {\n            actor.visionDistance = this.vision.normal;\n        }\n        actor.stats.init(this.stats);\n    }\n    addToMap(actor, map) {\n        super.addToMap(actor, map);\n        // if (this.hasActorFlag(Flags.Actor.HAS_MEMORY)) {\n        //     actor.memory = Memory.get(actor, map);\n        // }\n        // if (this.hasActorFlag(Flags.Actor.USES_FOV)) {\n        //     actor.fov = new GWU.fov.FovSystem(map);\n        //     actor.fov.follow = actor;\n        //     if (actor.memory) {\n        //         actor.fov.callback = actor.memory;\n        //     }\n        // }\n    }\n    removeFromMap(actor) {\n        super.removeFromMap(actor);\n        // if (actor._map && actor.memory) {\n        //     Memory.store(actor, actor._map, actor.memory);\n        // }\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    canSeeEntity(_actor, _entity) {\n        return true;\n    }\n    isAbleToSee(_actor, _entity) {\n        return true;\n    }\n    isAbleToSense(_actor, _entity) {\n        return true;\n    }\n    forbidsCell(cell, actor) {\n        if (super.forbidsCell(cell, actor)) {\n            return true;\n        }\n        if (cell.blocksMove())\n            return true;\n        return false;\n    }\n    avoidsCell(cell, actor) {\n        if (super.avoidsCell(cell, actor))\n            return true;\n        if (cell.blocksPathing())\n            return true;\n        return false;\n    }\n    getFlavor(actor, opts) {\n        const flavor = actor.isPlayer() ? 'yourself' : this.flavor;\n        if (opts && opts.action) {\n            return flavor + ' standing';\n        }\n        return flavor;\n    }\n    pickupItem(actor, item, _opts) {\n        if (!GWU.list.push(actor, 'items', item))\n            return false;\n        // TODO - Pickup effects\n        return true;\n    }\n    dropItem(actor, item, _opts) {\n        if (!GWU.list.remove(actor, 'items', item))\n            return false;\n        // TODO - Drop effects\n        return true;\n    }\n    cellCost(cell, actor) {\n        if (this.forbidsCell(cell, actor)) {\n            return cell.hasEntityFlag(Flags.Entity.L_BLOCKS_DIAGONAL)\n                ? GWU.path.OBSTRUCTION\n                : GWU.path.FORBIDDEN;\n        }\n        else if (this.avoidsCell(cell, actor)) {\n            return GWU.path.AVOIDED;\n        }\n        return GWU.path.OK;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ActorKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ActorKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ActorKind) {\n        kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ActorKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ActorKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","import { installAction } from '../action';\n// BUMP\n//\n// prefixes:\n// @ = only for player\n// + = only for ally\n// - = only for opposed\n// = = only for same kind\n// $ = use my action (if used with one of the above, this comes last)\n//\nexport async function bump(game, actor, ctx = {}) {\n    const other = ctx.actor;\n    if (other) {\n        const bumpActions = other.getBumpActions();\n        for (let action of bumpActions) {\n            if (typeof action === 'string') {\n                if (action.startsWith('$')) {\n                    const selfName = action.substring(1);\n                    let selfAction = other.getAction(selfName);\n                    if (selfAction === false) {\n                        throw new Error('Cannot have bump action for self action that actor cannot do: ' +\n                            action);\n                    }\n                    const ctx2 = Object.assign({}, ctx, { actor });\n                    const result = await selfAction(game, other, ctx2);\n                    if (result)\n                        return result;\n                }\n                else {\n                    const config = actor.getAction(action);\n                    if (config === false) {\n                        throw new Error('Cannot configure actor with bump action they cannot do: ' +\n                            action);\n                    }\n                    else {\n                        action = config;\n                    }\n                    const result = await action(game, actor, ctx);\n                    if (result)\n                        return result;\n                }\n            }\n            else {\n                const result = await action(game, actor, ctx);\n                if (result)\n                    return result;\n            }\n        }\n    }\n    const item = ctx.item;\n    if (item) {\n        // TODO - Item Actions\n    }\n    return 0;\n}\ninstallAction('bump', bump);\n","import { installAction } from '../action';\nexport async function standStill(_game, actor, _ctx) {\n    return actor.endTurn();\n}\ninstallAction('standStill', standStill);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\n// export class SpriteFX extends FX {\n//     sprite: GWU.sprite.SpriteConfig;\n//     stepCount: number;\n//     x: number;\n//     y: number;\n//     constructor(\n//         map: Map,\n//         sprite: string | GWU.sprite.SpriteConfig,\n//         x: number,\n//         y: number,\n//         opts: SpriteFxOptions = {}\n//     ) {\n//         const count = opts.blink || 1;\n//         const duration = opts.duration || 1000;\n//         opts.speed = opts.speed || duration / (2 * count - 1);\n//         super(map, opts);\n//         if (typeof sprite === 'string') {\n//             const name = sprite;\n//             sprite = GWU.sprite.sprites[sprite];\n//             if (!sprite) throw new Error('Cannot find sprite! ' + name);\n//         }\n//         this.sprite = sprite;\n//         this.x = x || 0;\n//         this.y = y || 0;\n//         this.stepCount = 2 * count - 1;\n//     }\n//     start() {\n//         this.map.addFx(this.x, this.y, this.sprite);\n//         return super.start();\n//     }\n//     step() {\n//         --this.stepCount;\n//         if (this.stepCount <= 0) return this.stop();\n//         if (this.stepCount % 2 == 0) {\n//             this.map.removeFx(this);\n//         } else {\n//             this.map.addFx(this.x, this.y, this);\n//         }\n//     }\n//     stop(result?: any) {\n//         this.map.removeFx(this);\n//         return super.stop(result);\n//     }\n//     moveDir(dx: number, dy: number) {\n//         return this.moveTo(this.x + dx, this.y + dy);\n//     }\n//     moveTo(x: number, y: number) {\n//         this.map.moveFx(x, y, this);\n//         return true;\n//     }\n// }\nexport async function flashSprite(map, x, y, sprite, duration = 100, count = 1, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ visible: true })\n        .to({ visible: false })\n        .repeat(count)\n        .repeatDelay(duration)\n        .duration(duration)\n        .onUpdate((obj) => {\n        if (obj.visible) {\n            map.addFx(x, y, entity);\n        }\n        else {\n            map.removeFx(entity);\n        }\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nGWU.sprite.install('bump', 'white', 50);\nexport async function hit(map, target, sprite, duration, animator) {\n    sprite = sprite || 'hit';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('hit', 'red', 50);\nexport async function miss(map, target, sprite, duration, animator) {\n    sprite = sprite || 'miss';\n    duration = duration || 200;\n    await flashSprite(map, target.x, target.y, sprite, duration, 1, animator);\n}\nGWU.sprite.install('miss', 'green', 50);\nexport async function fadeInOut(map, x, y, sprite, duration = 100, animator) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite).clone();\n    }\n    else {\n        sprite = GWU.sprite.make(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    map.addFx(x, y, entity);\n    const tween = GWU.tween\n        .make({ opacity: 0 })\n        .to({ opacity: 100 })\n        .repeat(2)\n        .yoyo(true)\n        .duration(Math.floor(duration / 2))\n        .onUpdate((obj) => {\n        entity.sprite.opacity = obj.opacity;\n        map.cell(x, y).needsRedraw = true; // we changed the sprite so redraw\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n    });\n    // realTime\n    animator = animator || GWU.io.loop;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport async function moveSprite(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const entity = Entity.make({ name: 'FX', sprite });\n    const from = { x: GWU.xy.x(source), y: GWU.xy.y(source) };\n    map.addFx(from.x, from.y, entity);\n    let duration = opts.duration ||\n        Math.ceil(16 * (GWU.xy.maxAxisFromTo(source, target) / (opts.speed || 8)));\n    if (GWU.xy.isLoc(target)) {\n        target = { x: target[0], y: target[1] };\n    }\n    const tween = GWU.tween\n        .make(from)\n        .to(target)\n        .duration(duration)\n        .onUpdate((vals) => {\n        // tweens dont update every step, so...\n        // draw line from current pos to vals pos\n        // check each step for blocking...\n        // end at either vals or last blocking spot\n        const dest = { x: entity.x, y: entity.y };\n        const ok = GWU.xy.forLineBetween(dest.x, dest.y, vals.x, vals.y, (x, y) => {\n            if (opts.stepFn) {\n                if (opts.stepFn(x, y)) {\n                    if (!opts.stopBeforeWalls) {\n                        dest.x = x;\n                        dest.y = y;\n                    }\n                    return false;\n                }\n            }\n            else if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (!opts.stopBeforeWalls) {\n                    dest.x = x;\n                    dest.y = y;\n                }\n                return false;\n            }\n            dest.x = x;\n            dest.y = y;\n        });\n        map.moveFx(entity, dest.x, dest.y);\n        if (!ok) {\n            tween.stop();\n        }\n    })\n        .onFinish(() => {\n        map.removeFx(entity);\n        return entity;\n    });\n    const animator = opts.animator || map;\n    animator.addAnimation(tween);\n    return tween.start();\n}\nexport function bolt(map, source, target, sprite, opts = {}) {\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport async function projectile(map, source, target, sprite, opts = {}) {\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    if (sprite.ch && sprite.ch.length == 4) {\n        const dir = GWU.xy.dirFromTo(source, target);\n        let index = 0;\n        if (dir[0] && dir[1]) {\n            index = 2;\n            if (dir[0] != dir[1]) {\n                // remember up is -y\n                index = 3;\n            }\n        }\n        else if (dir[0]) {\n            index = 1;\n        }\n        const ch = sprite.ch[index];\n        sprite = GWU.sprite.make(ch, sprite.fg, sprite.bg);\n    }\n    else if (sprite.ch && sprite.ch.length !== 1) {\n        throw new Error('projectile requires 4 chars - vert,horiz,diag-left,diag-right (e.g: \"|-\\\\/\")');\n    }\n    return moveSprite(map, source, target, sprite, opts);\n}\nexport function beam(map, from, to, sprite, opts = {}) {\n    opts.fade = opts.fade || 100;\n    if (opts.stopAtWalls === undefined)\n        opts.stopAtWalls = true;\n    const line = [];\n    GWU.xy.forLineFromTo(from, to, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (opts.stepFn && opts.stepFn(x, y))\n            return false;\n        if (opts.stopAtWalls || opts.stopBeforeWalls) {\n            if (map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE)) {\n                if (opts.stopBeforeWalls)\n                    return false;\n                line.push([x, y]);\n                return false;\n            }\n        }\n        line.push([x, y]);\n        return true;\n    });\n    const duration = opts.duration || Math.ceil(16 * (line.length / (opts.speed || 8)));\n    const animator = opts.animator || map;\n    const promises = [];\n    let lastIndex = -1;\n    const tween = GWU.tween\n        .make({ index: 0 })\n        .to({ index: line.length - 1 })\n        .duration(duration)\n        .onUpdate((vals) => {\n        while (lastIndex < vals.index) {\n            ++lastIndex;\n            const loc = line[lastIndex] || [-1, -1];\n            promises.push(fadeInOut(map, loc[0], loc[1], sprite, opts.fade, animator));\n        }\n    })\n        .onFinish(async () => {\n        await Promise.all(promises);\n        const loc = line[line.length - 1];\n        return { x: loc[0], y: loc[1] };\n    });\n    animator.addAnimation(tween);\n    return tween.start();\n}\nfunction isInShape(shape, cx, cy, allowCenter, x, y) {\n    const sx = Math.abs(x - cx);\n    const sy = Math.abs(y - cy);\n    if (sx == 0 && sy == 0 && !allowCenter)\n        return false;\n    switch (shape) {\n        case '+':\n            return sx == 0 || sy == 0;\n        case 'x':\n        case 'X':\n            return sx == sy;\n        case '*':\n            return sx == 0 || sy == 0 || sx == sy;\n        default:\n            return true;\n    }\n}\nfunction checkExplosionOpts(opts) {\n    opts.speed = opts.speed || 2;\n    opts.fade = opts.fade || 100;\n    opts.shape = opts.shape || 'o';\n    if (opts.center === undefined) {\n        opts.center = true;\n    }\n}\nexport function explosion(map, x, y, radius, sprite, opts = {}) {\n    checkExplosionOpts(opts);\n    opts.animator = opts.animator || map;\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    if (typeof sprite === 'string') {\n        sprite = GWU.sprite.from(sprite);\n    }\n    const grid = GWU.grid.alloc(map.width, map.height);\n    const fov = new GWU.fov.FOV({\n        isBlocked(x, y) {\n            return map.hasEntityFlag(x, y, Flags.Entity.L_BLOCKS_MOVE);\n        },\n        hasXY(x, y) {\n            return map.hasXY(x, y);\n        },\n    });\n    fov.calculate(x, y, radius, (x1, y1) => {\n        grid[x1][y1] = 1;\n    });\n    const duration = opts.duration || 32 * (radius / opts.speed);\n    const promises = [];\n    const tween = GWU.tween\n        .make({ r: 0 })\n        .to({ r: radius })\n        .duration(duration)\n        .onUpdate((vals) => {\n        const minX = Math.max(0, x - vals.r);\n        const minY = Math.max(0, y - vals.r);\n        const maxX = Math.min(map.width - 1, x + vals.r);\n        const maxY = Math.min(map.height - 1, y + vals.r);\n        for (let x1 = minX; x1 <= maxX; ++x1) {\n            for (let y1 = minY; y1 <= maxY; ++y1) {\n                if (grid[x1][y1] &&\n                    GWU.xy.distanceBetween(x, y, x1, y1) <= vals.r) {\n                    grid[x1][y1] = 0;\n                    if (isInShape(opts.shape, x, y, opts.center, x1, y1)) {\n                        promises.push(fadeInOut(map, x1, y1, sprite, opts.fade, opts.animator));\n                    }\n                }\n            }\n        }\n    })\n        .onFinish(async (_obj, success) => {\n        GWU.grid.free(grid);\n        await Promise.all(promises);\n        return success;\n    });\n    opts.animator.addAnimation(tween);\n    return tween.start();\n}\n/*\nexport function explosionFor(\n    map: Map,\n    grid: GWU.grid.NumGrid,\n    x: number,\n    y: number,\n    radius: number,\n    sprite: string | GWU.sprite.SpriteConfig,\n    opts: ExplosionOptions = {}\n) {\n    checkExplosionOpts(opts);\n    // opts.stepFn = opts.stepFn || ((x, y) => !map.isObstruction(x, y));\n    const animation = new ExplosionFX(\n        map,\n        grid,\n        x,\n        y,\n        radius,\n        sprite,\n        opts.speed,\n        opts.fade,\n        opts.shape,\n        opts.center,\n        opts.stepFn\n    );\n    return opts.playFn!(animation);\n}\n*/\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { bump } from './bump';\nimport { standStill } from './standStill';\nimport * as FX from '../../fx';\nimport * as Flags from '../../flags';\nexport async function moveDir(game, actor, ctx = {}) {\n    //\n    const step = ctx.dir;\n    if (!step)\n        throw new Error('moveDir called with no direction!');\n    const newX = actor.x + step[0];\n    const newY = actor.y + step[1];\n    const map = game.map;\n    const currentCell = map.cell(actor.x, actor.y);\n    const newCell = map.cell(newX, newY);\n    let result = 0;\n    if (actor.forbidsCell(newCell)) {\n        if (ctx.try)\n            return 0;\n        if (actor.isPlayer()) {\n            FX.hit(map, newCell, 'hit', 100);\n            GWU.message.addAt(newCell.x, newCell.y, '{{you}} {{verb bump~}} into {{a cell}}.', { actor, cell: newCell });\n        }\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    if (newCell.blocksMove()) {\n        if (ctx.try)\n            return 0;\n        FX.hit(map, newCell, 'hit', 100);\n        actor.clearGoal();\n        return actor.endTurn();\n    }\n    // can we leave?\n    if (!currentCell.canRemoveActor(actor)) {\n        if (ctx.try)\n            return 0;\n        // canActorLeave must add appropriate message\n        return actor.endTurn();\n    }\n    // is there an actor there?\n    if (newCell.hasActor() || newCell.hasItem()) {\n        if (ctx.try)\n            return 0;\n        const ctx2 = { actor: newCell.actor, item: newCell.item };\n        result = await bump(game, actor, ctx2);\n        if (result)\n            return result;\n    }\n    // can we enter?\n    if (!newCell.canAddActor(actor)) {\n        if (ctx.try)\n            return 0;\n        return actor.endTurn();\n    }\n    if (!map.moveActor(actor, newX, newY)) {\n        result = await standStill(game, actor, ctx);\n        return result;\n    }\n    let rate = 100;\n    if (newCell.hasTileFlag(Flags.Tile.T_DEEP_WATER)) {\n        rate = 150;\n    }\n    result = actor.endTurn(rate);\n    return result;\n}\ninstallAction('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nimport { moveDir } from './moveDir';\nexport async function idle(game, actor, _ctx) {\n    if (GWU.random.chance(50)) {\n        // do nothing\n        return actor.endTurn();\n    }\n    // try to step in a random direction\n    const dirIndex = GWU.random.number(4);\n    const dir = GWU.xy.DIRS[dirIndex];\n    const result = await moveDir(game, actor, { dir, try: true });\n    if (result)\n        return result;\n    // stand still\n    return actor.endTurn();\n}\ninstallAction('idle', idle);\n","import * as GWU from 'gw-utils';\nimport { installAction } from '../action';\nexport async function pickup(game, actor, ctx = {}) {\n    const map = actor.map;\n    if (!map)\n        throw new Error('Actor not on map!');\n    const item = actor.map.itemAt(actor.x, actor.y);\n    if (!item) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, 'Nothing to pickup.');\n        }\n        return 0;\n    }\n    if (actor.avoidsItem(item))\n        return 0;\n    const itemAction = item.getAction('pickup');\n    if (itemAction === false) {\n        if (!ctx.quiet) {\n            GWU.message.addAt(actor.x, actor.y, 'You cannot pickup %{the.item}.', {\n                item,\n            });\n        }\n        return 0;\n    }\n    else if (typeof itemAction === 'function') {\n        // You have to do everything\n        const result = await itemAction(game, actor, item);\n        if (result)\n            return result; // handled\n    }\n    // logs error messages\n    if (!actor.canAddItem(item)) {\n        return 0;\n    }\n    if (!actor.map.removeItem(item)) {\n        return 0;\n    }\n    actor.addItem(item);\n    if (!ctx.quiet) {\n        GWU.message.addAt(actor.x, actor.y, 'You pickup %{the:item}.', {\n            item,\n        });\n    }\n    return actor.endTurn();\n}\ninstallAction('pickup', pickup);\n","import * as GWU from 'gw-utils';\nimport * as Entity from '../entity';\nimport * as Flags from '../flags';\nimport { Item } from './item';\nexport class ItemKind extends Entity.EntityKind {\n    constructor(config) {\n        super(config);\n        this.flags = {\n            item: Flags.Item.DEFAULT,\n            entity: Flags.Entity.DEFAULT_ACTOR,\n        };\n        this.actions = {};\n        this.bump = [];\n        if (config.flags) {\n            this.flags.item = GWU.flag.from(Flags.Item, this.flags.item, config.flags);\n            this.flags.entity = GWU.flag.from(Flags.Entity, this.flags.entity, config.flags);\n        }\n        if (config.actions) {\n            Object.entries(config.actions).forEach(([key, value]) => {\n                this.actions[key] = value;\n            });\n        }\n        if (config.bump) {\n            if (typeof config.bump === 'string' ||\n                typeof config.bump === 'function') {\n                config.bump = [config.bump];\n            }\n            if (Array.isArray(config.bump)) {\n                this.bump = config.bump.slice();\n            }\n        }\n        this.avoidTileFlags |= Flags.Tile.T_DEEP_WATER;\n        this.forbidTileFlags |= Flags.Tile.T_LAVA | Flags.Tile.T_AUTO_DESCENT;\n        this.sidebarFg = GWU.color.from(config.sidebarFg || Item.default.sidebarFg);\n    }\n    make(options) {\n        const item = new Item(this);\n        this.init(item, options);\n        return item;\n    }\n    init(item, options = {}) {\n        super.init(item, options);\n        Object.assign(item.flags, this.flags);\n        item.quantity = options.quantity || 1;\n    }\n    avoidsCell(cell, item) {\n        if (cell.isDoor())\n            return true;\n        return super.avoidsCell(cell, item);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { ItemKind } from './kind';\nexport function make(info, makeOptions) {\n    let kind;\n    if (typeof info === 'string') {\n        // @ts-ignore\n        kind = get(info);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + info);\n    }\n    else if (info instanceof ItemKind) {\n        kind = info;\n    }\n    else {\n        kind = makeKind(info);\n    }\n    return kind.make(makeOptions);\n}\nexport function makeRandom(opts, makeOptions) {\n    const kind = randomKind(opts);\n    if (!kind)\n        throw new Error('Failed to find item kind matching - ' + JSON.stringify(opts));\n    return kind.make(makeOptions);\n}\nexport const kinds = {};\nexport function install(id, kind) {\n    if (kind instanceof ItemKind) {\n        kinds[id] = kind;\n        kind.id = id;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof ItemKind)\n        return id;\n    return kinds[id];\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new ItemKind(config);\n}\nexport function randomKind(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    const matches = Object.values(kinds).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        return true;\n    });\n    const rng = opts.rng || GWU.rng.random;\n    return rng.item(matches) || null;\n}\n","export class MapLayer {\n    constructor(map, name = 'layer') {\n        this.changed = false;\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    clear() { }\n    setTile(_x, _y, _tile, _opts) {\n        return false;\n    }\n    clearTile(_x, _y) {\n        return false;\n    }\n    addActor(_x, _y, _actor) {\n        return false;\n    }\n    forceActor(_x, _y, _actor) {\n        return false;\n    }\n    removeActor(_actor) {\n        return false;\n    }\n    addItem(_x, _y, _item) {\n        return false;\n    }\n    forceItem(_x, _y, _item) {\n        return false;\n    }\n    removeItem(_item) {\n        return false;\n    }\n    // Time based changes to the layer (e.g. dissipate gasses)\n    tick(_dt) {\n        return false;\n    }\n}\n","import { MapLayer } from './mapLayer';\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    setTile(x, y, tile, opts) {\n        const cell = this.map.cell(x, y);\n        return cell.setTile(tile, opts);\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // // Bookkeeping for fire, pressure plates and key-activated tiles.\n        // for (let x = 0; x < this.map.width; ++x) {\n        //     for (let y = 0; y < this.map.height; ++y) {\n        //         const cell = this.map.cell(x, y);\n        //         if (\n        //             !cell.hasCellFlag(\n        //                 Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM\n        //             ) &&\n        //             cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)\n        //         ) {\n        //             cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n        //         }\n        //     }\n        // }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nexport class GasLayer extends TileLayer {\n    constructor(map, name = 'gas') {\n        super(map, name);\n        this.volume = GWU.grid.alloc(map.width, map.height, 0);\n    }\n    clear() {\n        this.volume.fill(0);\n    }\n    setTile(x, y, tile, opts = {}) {\n        if (!opts.volume)\n            return false;\n        const cell = this.map.cell(x, y);\n        if (cell.depthTile(tile.depth) === tile) {\n            this.volume[x][y] += opts.volume;\n            return true;\n        }\n        if (!super.setTile(x, y, tile, opts)) {\n            return false;\n        }\n        this.volume[x][y] = opts.volume;\n        this.changed = true;\n        return true;\n    }\n    clearTile(x, y) {\n        const cell = this.map.cell(x, y);\n        if (cell.clearDepth(this.depth)) {\n            this.volume[x][y] = 0;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        this.volume.copy(other.volume);\n        this.changed = other.changed;\n    }\n    tick(_dt) {\n        if (!this.changed)\n            return false;\n        this.changed = false;\n        const startingVolume = this.volume;\n        this.volume = GWU.grid.alloc(this.map.width, this.map.height);\n        // dissipate the gas...\n        this.dissipate(startingVolume);\n        // spread the gas...\n        this.spread(startingVolume);\n        GWU.grid.free(startingVolume);\n        return true;\n    }\n    dissipate(volume) {\n        volume.update((v, x, y) => {\n            if (!v)\n                return 0;\n            const tile = this.map.cell(x, y).depthTile(this.depth);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (v) {\n                this.changed = true;\n            }\n            else {\n                this.clearTile(x, y);\n            }\n            return v;\n        });\n    }\n    calcOpacity(volume) {\n        return Math.floor(Math.min(volume, 10) * 10);\n    }\n    updateCellVolume(x, y, startingVolume) {\n        let total = 0;\n        let count = 0;\n        let highestVolume = 0;\n        const cell = this.map.cell(x, y);\n        let startingTile = cell.depthTile(this.depth);\n        let highestTile = startingTile;\n        if (cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n            this.volume[x][y] = 0;\n            if (startingVolume[x][y]) {\n                this.clearTile(x, y);\n            }\n            return;\n        }\n        for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n            for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n                const v = startingVolume[i][j];\n                if (!cell.hasEntityFlag(Flags.Entity.L_BLOCKS_GAS)) {\n                    ++count;\n                    if (v > highestVolume) {\n                        highestVolume = v;\n                        highestTile = this.map.cell(i, j).depthTile(this.depth);\n                    }\n                }\n                total += v;\n            }\n        }\n        const v = Math.floor((total * 10) / count) / 10;\n        this.volume[x][y] = v;\n        if (v > 0 && highestTile) {\n            if (!startingTile || startingTile !== highestTile) {\n                cell.setTile(highestTile);\n            }\n        }\n        if (v > 0) {\n            cell.needsRedraw = true;\n        }\n    }\n    spread(startingVolume) {\n        for (let x = 0; x < startingVolume.width; ++x) {\n            for (let y = 0; y < startingVolume.height; ++y) {\n                this.updateCellVolume(x, y, startingVolume);\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { TileLayer } from './tileLayer';\nimport * as Effect from '../effect';\nconst Depth = Flags.Depth;\nconst ObjectFlags = Flags.Entity;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport class FireLayer extends TileLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n            }\n        }\n        // now spread the fire...\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                    !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                    this.exposeToFire(x, y, false);\n                    for (let d = 0; d < 4; ++d) {\n                        const dir = GWU.xy.DIRS[d];\n                        this.exposeToFire(x + dir[0], y + dir[1]);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    exposeToFire(x, y, alwaysIgnite = false) {\n        let ignitionChance = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n        let fireIgnited = false, explosivePromotion = false;\n        const cell = this.map.cell(x, y);\n        if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n            return false;\n        }\n        // Pick the extinguishing layer with the best priority.\n        cell.eachTile((tile) => {\n            if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n                tile.priority > bestExtinguishingPriority) {\n                bestExtinguishingPriority = tile.priority;\n            }\n        });\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        cell.eachTile((tile) => {\n            if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n                (tile.depth === Depth.GAS ||\n                    tile.priority >= bestExtinguishingPriority)) {\n                const effect = Effect.from(tile.effects.fire);\n                if (effect && effect.chance > ignitionChance) {\n                    ignitionChance = effect.chance;\n                }\n            }\n        });\n        if (alwaysIgnite ||\n            (ignitionChance && this.map.rng.chance(ignitionChance, 10000))) {\n            // If it ignites...\n            fireIgnited = true;\n            // Count explosive neighbors.\n            if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                GWU.xy.eachNeighbor(x, y, (x0, y0) => {\n                    const n = this.map.cell(x0, y0);\n                    if (n.hasEntityFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                        n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                        n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                        ++explosiveNeighborCount;\n                    }\n                });\n                if (explosiveNeighborCount >= 8) {\n                    explosivePromotion = true;\n                }\n            }\n            let event = 'fire';\n            if (explosivePromotion && cell.hasEffect('explode')) {\n                event = 'explode';\n            }\n            // cell.eachTile( (tile) => {\n            //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n            //         if (tile.depth === Depth.GAS) {\n            //             cell.gasVolume = 0;\n            //         } else if (tile.depth === Depth.LIQUID) {\n            //             cell.liquidVolume = 0;\n            //         }\n            //     }\n            // });\n            cell.fireEvent(event, {\n                force: true,\n            });\n            cell.needsRedraw = true;\n        }\n        return fireIgnited;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nconst highlightColor = GWU.color.install('highlight', [100, 100, 0]);\nexport class BasicDrawer {\n    constructor() {\n        this.scent = false;\n    }\n    drawInto(dest, map, opts = {}) {\n        const buffer = dest instanceof GWU.buffer.Buffer ? dest : dest.buffer;\n        const offsetX = opts.offsetX || 0;\n        const offsetY = opts.offsetY || 0;\n        map.clearMapFlag(Flags.Map.MAP_DANCES);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                if (map.hasXY(x + offsetX, y + offsetY)) {\n                    const cell = map.cell(x + offsetX, y + offsetY);\n                    this.drawCell(mixer, map, cell, map.fov);\n                    buffer.drawSprite(x, y, mixer);\n                }\n            }\n        }\n    }\n    drawCell(dest, map, cell, fov) {\n        dest.blackOut();\n        // const isVisible = fov ? fov.isAnyKindOfVisible(cell.x, cell.y) : true;\n        const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        if (cell.needsRedraw || needSnapshot) {\n            this.getAppearance(dest, map, cell);\n            cell.putSnapshot(dest);\n            cell.needsRedraw = false;\n            cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n        }\n        else {\n            cell.getSnapshot(dest);\n            if (cell.hasCellFlag(Flags.Cell.COLORS_DANCE)) {\n                map.setMapFlag(Flags.Map.MAP_DANCES);\n            }\n        }\n        this.applyLight(dest, cell, fov);\n        let separate = false;\n        if (cell.memory) {\n            separate = !!((cell.memory.flags.entity & Flags.Entity.L_VISUALLY_DISTINCT)\n            // Flags.Entity.L_LIST_IN_SIDEBAR)\n            );\n        }\n        else {\n            separate = cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT, \n            // Flags.Entity.L_LIST_IN_SIDEBAR,\n            true);\n        }\n        if (cell.hasCellFlag(Flags.Cell.IS_CURSOR)) {\n            dest.bg = highlightColor;\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        else if (cell.hasCellFlag(Flags.Cell.IS_HIGHLIGHTED)) {\n            dest.bg = highlightColor.mix(dest.bg, 35);\n            dest.fg = dest.bg.inverse();\n            separate = true;\n        }\n        if (this.scent && map.player) {\n            const s = GWU.clamp(map.player.scent.get(cell.x, cell.y) * 5, 0, 50);\n            if (s) {\n                const c = GWU.color.colors.red;\n                dest.mix(c, 0, s);\n            }\n        }\n        if (separate) {\n            [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n        }\n        return true;\n    }\n    // getCellAppearance(cell: CellType, dest: GWU.sprite.Mixer) {\n    //     dest.blackOut();\n    //     const isVisible = true; // this.fov.isAnyKindOfVisible(x, y);\n    //     const isRevealed = true; // this.fov.isRevealed(x, y);\n    //     const needSnapshot = !cell.hasCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     if (needSnapshot || (cell.needsRedraw && isVisible)) {\n    //         this.layers.forEach((layer) => layer.putAppearance(dest, cell));\n    //         if (dest.dances) {\n    //             cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n    //         } else {\n    //             cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n    //         }\n    //         dest.bake();\n    //         cell.putSnapshot(dest);\n    //         cell.needsRedraw = false;\n    //         cell.setCellFlag(Flags.Cell.STABLE_SNAPSHOT);\n    //     } else {\n    //         cell.getSnapshot(dest);\n    //     }\n    //     if (isVisible) {\n    //         const light = this.light.getLight(cell.x, cell.y);\n    //         dest.multiply(light);\n    //     } else if (isRevealed) {\n    //         dest.scale(50);\n    //     } else {\n    //         dest.blackOut();\n    //     }\n    //     if (cell.hasEntityFlag(Flags.Entity.L_VISUALLY_DISTINCT)) {\n    //         [dest.fg, dest.bg] = GWU.color.separate(dest.fg, dest.bg);\n    //     }\n    // }\n    getAppearance(dest, map, cell) {\n        let tiles = cell.tiles;\n        let actor = null;\n        let item = null;\n        if (cell.memory) {\n            tiles = cell.memory.tiles;\n            item = cell.memory.item;\n        }\n        else {\n            actor = cell.hasActor() ? cell.actor : null;\n            item = cell.hasItem() ? cell.item : null;\n        }\n        const ground = tiles[Flags.Depth.GROUND];\n        const surface = tiles[Flags.Depth.SURFACE];\n        const liquid = tiles[Flags.Depth.LIQUID];\n        const gas = tiles[Flags.Depth.GAS]; // How to get volume!?!?!?!\n        dest.drawSprite(ground.sprite);\n        if (surface) {\n            dest.drawSprite(surface.sprite);\n        }\n        if (liquid) {\n            dest.drawSprite(liquid.sprite);\n        }\n        if (item) {\n            item.drawInto(dest);\n        }\n        if (actor) {\n            actor.drawInto(dest);\n        }\n        if (gas) {\n            const opacity = GWU.rng.cosmetic.number(50) + 25;\n            dest.drawSprite(gas.sprite, opacity);\n        }\n        if (cell.hasFx()) {\n            const fx = map.fxAt(cell.x, cell.y);\n            if (fx)\n                dest.drawSprite(fx.sprite);\n        }\n        if (dest.dances) {\n            cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            map.setMapFlag(Flags.Map.MAP_DANCES);\n        }\n        else {\n            cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n        }\n        dest.bake(true); // apply dancing\n    }\n    applyLight(dest, cell, fov) {\n        const isVisible = !fov || fov.isAnyKindOfVisible(cell.x, cell.y);\n        const isRevealed = !fov || fov.isRevealed(cell.x, cell.y);\n        const light = cell.map.light.getLight(cell.x, cell.y);\n        dest.multiply(light);\n        // TODO - is Clairy\n        // TODO - is Telepathy\n        if (fov && fov.isCursor(cell.x, cell.y)) {\n            dest.invert();\n        }\n        else if (!isVisible) {\n            if (isRevealed) {\n                dest.scale(70);\n            }\n            else {\n                dest.blackOut();\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport { Cell } from './cell';\nimport * as TILE from '../tile';\nimport * as Layer from '../layer';\nimport * as Effect from '../effect';\nimport { BasicDrawer } from '../draw/basic';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.locations = {};\n        // _memory: GWU.grid.Grid<CellMemory>;\n        // machineCount = 0;\n        // _seed = 0;\n        this.rng = GWU.rng.random;\n        this.id = 0;\n        this.actors = [];\n        this.items = [];\n        this.fx = [];\n        this.player = null;\n        this._animations = [];\n        this.events = new GWU.events.EventEmitter();\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.data = { seed: 0, machineCount: 0 };\n        if (opts.id) {\n            this.data.id = opts.id;\n        }\n        this.drawer = opts.drawer || new BasicDrawer();\n        this.cells = GWU.grid.make(width, height, (x, y) => new Cell(this, x, y));\n        // this._memory = GWU.grid.make(\n        //     width,\n        //     height,\n        //     (x, y) => new CellMemory(this, x, y)\n        // );\n        if (opts.seed) {\n            this.data.seed = opts.seed;\n            this.rng = GWU.rng.make(opts.seed);\n        }\n        this.light = new GWU.light.LightSystem(this, opts);\n        if (opts.fov === undefined) {\n            opts.alwaysVisible = true;\n        }\n        else if (opts.fov === false) {\n            opts.visible = true;\n        }\n        opts.callback = this.onFovChange.bind(this);\n        this.fov = new GWU.fov.FovSystem(this, opts);\n        this.initLayers();\n        if (opts.player) {\n            this.setPlayer(opts.player);\n        }\n    }\n    get seed() {\n        return this.data.seed;\n    }\n    set seed(v) {\n        this.data.seed = v;\n        this.rng = GWU.rng.make(v);\n    }\n    get width() {\n        return this.cells.width;\n    }\n    get height() {\n        return this.cells.height;\n    }\n    // memory(x: number, y: number): CellMemory {\n    //     return this._memory[x][y];\n    // }\n    // knowledge(x: number, y: number): CellInfoType {\n    //     if (this.fov.isAnyKindOfVisible(x, y)) return this.cell(x,y);\n    //     return this._memory[x][y];\n    // }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Flags.Depth.GROUND, new Layer.TileLayer(this, 'ground'));\n        this.addLayer(Flags.Depth.SURFACE, new Layer.FireLayer(this, 'surface'));\n        this.addLayer(Flags.Depth.GAS, new Layer.GasLayer(this, 'gas'));\n    }\n    addLayer(depth, layer) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Flags.Depth[depth];\n        }\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // items\n    hasItem(x, y) {\n        return this.cell(x, y).hasItem();\n    }\n    itemAt(x, y) {\n        return this.items.find((i) => i.isAt(x, y)) || null;\n    }\n    eachItem(cb) {\n        this.items.forEach(cb);\n    }\n    addItem(x, y, item, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        // if (!cell.canAddItem(item)) return false;\n        if (cell._addItem(item)) {\n            const index = this.items.indexOf(item);\n            if (index < 0) {\n                this.items.push(item);\n            }\n            item.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddItemEffects(item, cell);\n            }\n            if (index < 0) {\n                this.events.emit('item', this, item, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddItemEffects(item, cell) {\n        if (item.key &&\n            item.key.matches(cell.x, cell.y) &&\n            cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('add_item')) {\n            cell.fireEvent('add_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    addItemNear(x, y, item, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasItem())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (item.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addItem(loc[0], loc[1], item, fireEffects);\n    }\n    removeItem(item, fireEffects = false) {\n        const cell = this.cell(item.x, item.y);\n        // if (!cell.canRemoveItem(item)) return false;\n        if (cell._removeItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, cell);\n            }\n            GWU.arrayDelete(this.items, item);\n            item.removeFromMap();\n            this.events.emit('item', this, item, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveItemEffects(item, cell) {\n        if (item.isKey(cell.x, cell.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: item,\n                item,\n            });\n        }\n        else if (cell.hasEffect('remove_item')) {\n            cell.fireEvent('remove_item', {\n                key: item,\n                item,\n            });\n        }\n    }\n    moveItem(item, x, y, fireEffects = false) {\n        if (item.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(item.x, item.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveItem(item)) return false;\n        // if (!newCell.canAddItem(item)) return false;\n        currentCell._removeItem(item);\n        if (newCell._addItem(item)) {\n            if (fireEffects) {\n                this._fireRemoveItemEffects(item, currentCell);\n                this._fireAddItemEffects(item, newCell);\n            }\n            item.addToMap(this, x, y);\n        }\n        return true;\n    }\n    //  moveItem(item: Item, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = item.x;\n    //     const oldY = item.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[item.depth] as Layer.ItemLayer;\n    //     if (!( layer.removeItem(item))) return false;\n    //     if (!( this.addItem(x, y, item))) {\n    //         layer.forceItem(item.x, item.y, item);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (item.lastSeen) {\n    //     //         this._memory[item.lastSeen.x][item.lastSeen.y].removeItem(item);\n    //     //         this.clearCellFlag(\n    //     //             item.lastSeen.x,\n    //     //             item.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         item.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.item = item;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     item.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    setPlayer(player) {\n        this.player = player;\n    }\n    actorAt(x, y) {\n        return this.actors.find((a) => a.isAt(x, y)) || null;\n    }\n    eachActor(cb) {\n        this.actors.forEach(cb);\n    }\n    addActor(x, y, actor, fireEffects = false) {\n        if (!this.hasXY(x, y))\n            return false;\n        const cell = this.cell(x, y);\n        if (!cell.canAddActor(actor))\n            return false;\n        if (cell._addActor(actor)) {\n            const index = this.actors.indexOf(actor);\n            if (index < 0) {\n                this.actors.push(actor);\n            }\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireAddActorEffects(actor, cell);\n            }\n            if (index < 0) {\n                this.events.emit('actor', this, actor, true);\n            }\n            return true;\n        }\n        return false;\n    }\n    _fireAddActorEffects(actor, cell) {\n        if (actor.isKey(cell.x, cell.y) && cell.hasEffect('key')) {\n            cell.fireEvent('key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('add_player')) {\n            cell.fireEvent('add_player', {\n                player: actor,\n                actor,\n            });\n        }\n        else if (cell.hasEffect('add_actor')) {\n            cell.fireEvent('add_actor', {\n                actor,\n            });\n        }\n    }\n    addActorNear(x, y, actor, fireEffects = false) {\n        const loc = this.rng.matchingLocNear(x, y, (i, j) => {\n            if (!this.hasXY(i, j))\n                return false;\n            const cell = this.cell(i, j);\n            if (cell.hasActor())\n                return false;\n            if (cell.blocksMove())\n                return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            return true;\n        });\n        if (!loc || loc[0] < 0)\n            return false;\n        return this.addActor(loc[0], loc[1], actor, fireEffects);\n    }\n    removeActor(actor, fireEffects = false) {\n        const cell = this.cell(actor.x, actor.y);\n        if (!cell.canRemoveActor(actor))\n            return false;\n        if (cell._removeActor(actor)) {\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, cell);\n            }\n            actor.removeFromMap();\n            GWU.arrayDelete(this.actors, actor);\n            this.events.emit('actor', this, actor, false);\n            return true;\n        }\n        return false;\n    }\n    _fireRemoveActorEffects(actor, cell) {\n        if (actor.isKey(actor.x, actor.y) && cell.hasEffect('no_key')) {\n            cell.fireEvent('no_key', {\n                key: actor,\n                actor,\n            });\n        }\n        else if (actor.isPlayer() && cell.hasEffect('remove_player')) {\n            cell.fireEvent('remove_player', {\n                actor,\n                player: actor,\n            });\n        }\n        else if (cell.hasEffect('remove_actor')) {\n            cell.fireEvent('remove_actor', {\n                actor,\n            });\n        }\n    }\n    moveActor(actor, x, y, fireEffects = false) {\n        if (actor.map !== this)\n            throw new Error('Actor not on this map!');\n        const currentCell = this.cell(actor.x, actor.y);\n        const newCell = this.cell(x, y);\n        // if (!currentCell.canRemoveActor(actor)) return false;\n        // if (!newCell.canAddActor(actor)) return false;\n        currentCell._removeActor(actor);\n        if (newCell._addActor(actor)) {\n            actor.addToMap(this, x, y);\n            if (fireEffects) {\n                this._fireRemoveActorEffects(actor, currentCell);\n                this._fireAddActorEffects(actor, newCell);\n            }\n        }\n        return true;\n    }\n    //  moveActor(actor: Actor, dir: GWU.xy.Loc | number): boolean {\n    //     if (typeof dir === 'number') {\n    //         dir = GWU.xy.DIRS[dir];\n    //     }\n    //     const oldX = actor.x;\n    //     const oldY = actor.y;\n    //     const x = oldX + dir[0];\n    //     const y = oldY + dir[1];\n    //     if (!this.hasXY(x, y)) return false;\n    //     const layer = this.layers[actor.depth] as Layer.ActorLayer;\n    //     if (!( layer.removeActor(actor))) return false;\n    //     if (!( layer.addActor(x, y, actor))) {\n    //         layer.forceActor(actor.x, actor.y, actor);\n    //         return false;\n    //     }\n    //     // const wasVisible = this.fov.isAnyKindOfVisible(oldX, oldY);\n    //     // const isVisible = this.fov.isAnyKindOfVisible(x, y);\n    //     // if (isVisible && !wasVisible) {\n    //     //     if (actor.lastSeen) {\n    //     //         this._memory[actor.lastSeen.x][actor.lastSeen.y].removeActor(\n    //     //             actor\n    //     //         );\n    //     //         this.clearCellFlag(\n    //     //             actor.lastSeen.x,\n    //     //             actor.lastSeen.y,\n    //     //             Flags.Cell.STABLE_SNAPSHOT\n    //     //         );\n    //     //         actor.lastSeen = null;\n    //     //     }\n    //     // } else if (wasVisible && !isVisible) {\n    //     //     const mem = this._memory[x][y];\n    //     //     mem.actor = actor;\n    //     //     this.clearCellFlag(x, y, Flags.Cell.STABLE_SNAPSHOT);\n    //     //     actor.lastSeen = this.cell(x, y);\n    //     // }\n    //     return true;\n    // }\n    fxAt(x, y) {\n        return this.fx.find((i) => i.isAt(x, y)) || null;\n    }\n    eachFx(cb) {\n        this.fx.forEach(cb);\n    }\n    addFx(x, y, fx) {\n        const cell = this.get(x, y);\n        if (!cell)\n            return false;\n        fx.x = x;\n        fx.y = y;\n        cell._addFx(fx);\n        this.fx.push(fx);\n        this.events.emit('fx', this, fx, true);\n        return true;\n    }\n    moveFx(fx, x, y) {\n        const current = this.get(fx.x, fx.y);\n        const updated = this.get(x, y);\n        if (!updated)\n            return false;\n        current._removeFx(fx);\n        fx.x = x;\n        fx.y = y;\n        updated._addFx(fx);\n        return true;\n    }\n    removeFx(fx) {\n        const cell = this.get(fx.x, fx.y);\n        GWU.arrayDelete(this.fx, fx);\n        if (cell) {\n            cell._removeFx(fx);\n        }\n        this.events.emit('fx', this, fx, false);\n        return true;\n    }\n    // Information\n    // isVisible(x: number, y: number): boolean {\n    //     return this.fov.isAnyKindOfVisible(x, y);\n    // }\n    hasKey(x, y) {\n        const actor = this.actorAt(x, y);\n        if (actor && actor.isKey(x, y))\n            return true;\n        const item = this.itemAt(x, y);\n        if (item && item.isKey(x, y))\n            return true;\n        return false;\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        const getCh = (cell) => {\n            return cell.dump();\n        };\n        this.cells.dump(fmt || getCh, log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    get needsRedraw() {\n        return this.hasMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v)\n            this.setMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n        else\n            this.clearMapFlag(Flags.Map.MAP_NEEDS_REDRAW);\n    }\n    hasCellFlag(x, y, flag) {\n        return this.cell(x, y).hasCellFlag(flag);\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasEntityFlag(x, y, flag) {\n        return this.cell(x, y).hasEntityFlag(flag);\n    }\n    hasTileFlag(x, y, flag) {\n        return this.cell(x, y).hasTileFlag(flag);\n    }\n    highlightPath(path, markCursor = true) {\n        this.clearPath();\n        path.forEach((loc) => {\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_HIGHLIGHTED);\n        });\n        if (markCursor && path[0]) {\n            const loc = path[0];\n            this.setCellFlag(loc[0], loc[1], Flags.Cell.IS_CURSOR);\n        }\n        this.needsRedraw = true;\n    }\n    clearPath() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR | Flags.Cell.IS_HIGHLIGHTED));\n        this.needsRedraw = true;\n    }\n    showCursor(x, y) {\n        this.clearCursor();\n        this.cell(x, y).setCellFlag(Flags.Cell.IS_CURSOR);\n        this.needsRedraw = true;\n    }\n    clearCursor() {\n        this.cells.forEach((c) => c.clearCellFlag(Flags.Cell.IS_CURSOR));\n        this.needsRedraw = true;\n    }\n    clear() {\n        this.light.glowLightChanged = true;\n        // this.fov.needsUpdate = true;\n        this.layers.forEach((l) => l.clear());\n    }\n    clearCell(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clear(tile);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cells[i][j];\n                cell.clear(this.isBoundaryXY(i, j) ? boundary : tile);\n            }\n        }\n    }\n    hasTile(x, y, tile\n    // useMemory = false\n    ) {\n        return this.cell(x, y).hasTile(tile);\n        // if (!useMemory) return this.cell(x, y).hasTile(tile);\n        // return this.memory(x, y).hasTile(tile);\n    }\n    forceTile(x, y, tile) {\n        return this.setTile(x, y, tile, { superpriority: true });\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            const name = tile;\n            tile = TILE.get(name);\n            if (!tile)\n                throw new Error('Failed to find tile: ' + name);\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof Layer.TileLayer))\n            return false;\n        return layer.setTile(x, y, tile, opts);\n    }\n    clearTiles(x, y, tile) {\n        const cell = this.cell(x, y);\n        cell.clearTiles(tile);\n    }\n    tick(dt) {\n        let didSomething = false;\n        this._animations.forEach((a) => {\n            didSomething = a.tick(dt) || didSomething;\n        });\n        this._animations = this._animations.filter((a) => a.isRunning());\n        didSomething = this.fireAll('tick') || didSomething;\n        for (let layer of this.layers) {\n            if (layer && layer.tick(dt)) {\n                didSomething = true;\n            }\n        }\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cell(x, y));\n        });\n        this.layers.forEach((l, depth) => {\n            l.copy(src.layers[depth]);\n        });\n        this.actors = src.actors.slice();\n        this.items = src.items.slice();\n        this.flags.map = src.flags.map;\n        // this.fov.needsUpdate = true;\n        this.light.copy(src.light);\n        this.rng = src.rng;\n        this.data = Object.assign({}, src.data);\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    fire(event, x, y, ctx = {}) {\n        const cell = this.cell(x, y);\n        return cell.fireEvent(event, ctx);\n    }\n    fireAll(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = GWU.grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    GWU.xy.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasEntityFlag(Flags.Entity.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    this.rng.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= GWU.flag.fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        willFire.forEach((w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & GWU.flag.fl(depth)) {\n                    cell.fireEvent(event, {\n                        force: true,\n                    });\n                }\n            }\n        });\n        GWU.grid.free(willFire);\n        return didSomething;\n    }\n    activateMachine(machineId, originX, originY, ctx = {}) {\n        let didSomething = false;\n        ctx.originX = originX;\n        ctx.originY = originY;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const cell = this.cell(x, y);\n                if (cell.machineId !== machineId)\n                    continue;\n                if (cell.hasEffect('machine')) {\n                    didSomething =\n                        cell.fireEvent('machine', ctx) || didSomething;\n                }\n            }\n        }\n        return didSomething;\n    }\n    // DRAW\n    drawInto(dest, opts) {\n        this.drawer.drawInto(dest, this, opts);\n    }\n    getAppearanceAt(x, y, dest) {\n        const cell = this.cell(x, y);\n        return this.drawer.drawCell(dest, this, cell);\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n            // cell.clearCellFlag(Flags.Cell.LIGHT_CHANGED);\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(cb) {\n        // TODO - Clairy, Telepathy, Detect, etc...\n        if (this.player) {\n            cb(this.player.x, this.player.y, this.player.visionDistance, GWU.fov.FovFlags.PLAYER);\n        }\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    // redrawCell(x: number, y: number): void {\n    //     // if (clearMemory) {\n    //     //     this.clearMemory(x, y);\n    //     // }\n    //     this.cell(x, y).needsRedraw = true;\n    // }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        cell.storeMemory();\n        if (cell.hasActor() &&\n            cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    makeVisible(x, y) {\n        const cell = this.cell(x, y);\n        cell.clearMemory();\n        if (cell.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED |\n                Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasActor() &&\n            !cell.actor.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n        else if (cell.hasItem() &&\n            !cell.item.hasEntityFlag(Flags.Entity.L_IN_SIDEBAR)) {\n            this.setMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        }\n    }\n    onFovChange(x, y, isVisible) {\n        if (!isVisible) {\n            this.storeMemory(x, y);\n        }\n        else {\n            this.makeVisible(x, y);\n        }\n    }\n    // Animator\n    addAnimation(a) {\n        this._animations.push(a);\n    }\n    removeAnimation(a) {\n        GWU.arrayDelete(this._animations, a);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Entity as ObjectFlags } from '../flags/entity';\nimport * as Flags from '../flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = GWU.grid.alloc(map.width, map.height);\n    const grid = GWU.grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~Flags.Cell.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & Flags.Cell.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    const newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    Flags.Cell.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & Flags.Cell.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & Flags.Cell.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + GWU.xy.DIRS[dir][0];\n                        const newY = j + GWU.xy.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                Flags.Cell.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount =\n                                                cellCount;\n                                            map.cell(i2, j2).flags.cell &=\n                                                ~Flags.Cell.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= Flags.Cell.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GWU.grid.free(passMap);\n    GWU.grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    function getCount(x, y) {\n        let count = passMap[x][y] == 2 ? 5000 : 1;\n        if (map.cell(x, y).flags.cell & Flags.Cell.IS_IN_AREA_MACHINE) {\n            count = 10000;\n        }\n        return count;\n    }\n    let count = 0;\n    const todo = [[startX, startY]];\n    const free = [];\n    while (todo.length) {\n        const item = todo.pop();\n        free.push(item);\n        const x = item[0];\n        const y = item[1];\n        if (results[x][y])\n            continue;\n        results[x][y] = 1;\n        count += getCount(x, y);\n        for (let dir = 0; dir < 4; dir++) {\n            const newX = x + GWU.xy.DIRS[dir][0];\n            const newY = y + GWU.xy.DIRS[dir][1];\n            if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                passMap[newX][newY] &&\n                !results[newX][newY]) {\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    checkLoopiness(map);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasEntityFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= Flags.Cell.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    const todo = GWU.grid.alloc(map.width, map.height, 1);\n    let tryAgain = true;\n    while (tryAgain) {\n        tryAgain = false;\n        todo.forEach((v, x, y) => {\n            if (!v)\n                return;\n            const cell = map.cell(x, y);\n            todo[x][y] = 0;\n            if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                return;\n            }\n            // find an unloopy neighbor to start on\n            for (sdir = 0; sdir < 8; sdir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[sdir][0];\n                newY = y + GWU.xy.CLOCK_DIRS[sdir][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const cell = map.cell(newX, newY);\n                if (!cell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    break;\n                }\n            }\n            if (sdir == 8) {\n                // no unloopy neighbors\n                return; // leave cell loopy\n            }\n            // starting on this unloopy neighbor,\n            // work clockwise and count up:\n            // (a) the number of strings of loopy neighbors, and\n            // (b) the length of the longest such string.\n            numStrings = maxStringLength = currentStringLength = 0;\n            inString = false;\n            for (dir = sdir; dir < sdir + 8; dir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[dir % 8][0];\n                newY = y + GWU.xy.CLOCK_DIRS[dir % 8][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                const newCell = map.cell(newX, newY);\n                if (newCell.hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                    currentStringLength++;\n                    if (!inString) {\n                        numStrings++;\n                        inString = true;\n                        if (numStrings > 1) {\n                            break; // more than one string here; leave loopy\n                        }\n                    }\n                }\n                else if (inString) {\n                    if (currentStringLength > maxStringLength) {\n                        maxStringLength = currentStringLength;\n                    }\n                    currentStringLength = 0;\n                    inString = false;\n                }\n            }\n            if (inString && currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            if (numStrings == 1 && maxStringLength <= 4) {\n                cell.clearCellFlag(Flags.Cell.IS_IN_LOOP);\n                // console.log(x, y, numStrings, maxStringLength);\n                // map.dump((c) =>\n                //     c.hasCellFlag(Flags.Cell.IS_IN_LOOP) ? '*' : ' '\n                // );\n                for (dir = 0; dir < 8; dir++) {\n                    newX = x + GWU.xy.CLOCK_DIRS[dir][0];\n                    newY = y + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) &&\n                        map.cell(newX, newY).hasCellFlag(Flags.Cell.IS_IN_LOOP)) {\n                        todo[newX][newY] = 1;\n                        tryAgain = true;\n                    }\n                }\n            }\n        });\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & Flags.Cell.IS_IN_LOOP &&\n                    left.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = GWU.grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & Flags.Cell.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    let newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            Flags.Cell.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    GWU.grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n","import * as GWU from 'gw-utils';\nimport { Map } from './map';\nexport class Snapshot {\n    constructor(map) {\n        this.map = new Map(map.width, map.height);\n        this.version = 0;\n    }\n}\nexport class SnapshotManager {\n    constructor(map) {\n        this.version = 0;\n        this.layerVersion = [];\n        this.lightVersion = 0;\n        // fovVersion = 0;\n        this.free = [];\n        this.map = map;\n        this.cellVersion = GWU.grid.make(map.width, map.height);\n        this.layerVersion = map.layers.map(() => 1);\n    }\n    takeNew() {\n        ++this.version;\n        const snap = this.free.length\n            ? this.free.pop()\n            : new Snapshot(this.map);\n        snap.map.flags.map = this.map.flags.map;\n        this.cellVersion.update((v, x, y) => {\n            const srcCell = this.map.cell(x, y);\n            if (srcCell.changed) {\n                v = this.version;\n            }\n            if (v !== snap.version) {\n                const destCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n            }\n            return v;\n        });\n        // systems\n        if (this.map.light.changed) {\n            this.lightVersion = this.version;\n            this.map.light.changed = false;\n        }\n        if (snap.version !== this.lightVersion) {\n            snap.map.light.copy(this.map.light);\n        }\n        // if (this.map.fov.changed) {\n        //     this.fovVersion = this.version;\n        //     this.map.fov.changed = false;\n        // }\n        // if (snap.version !== this.fovVersion) {\n        //     snap.map.fov.copy(this.map.fov);\n        // }\n        // layers\n        this.map.layers.forEach((layer, index) => {\n            const snapLayer = snap.map.layers[index];\n            if (layer.changed) {\n                this.layerVersion[index] = this.version;\n            }\n            if (this.layerVersion[index] !== snap.version) {\n                snapLayer.copy(layer);\n            }\n        });\n        snap.version = this.version;\n        return snap;\n    }\n    revertMapTo(snap) {\n        this.cellVersion.update((v, x, y) => {\n            if (v < snap.version)\n                return v;\n            const destCell = this.map.cell(x, y);\n            if (v > snap.version || destCell.changed) {\n                const srcCell = snap.map.cell(x, y);\n                destCell.copy(srcCell);\n                return snap.version;\n            }\n            return v;\n        });\n        // systems\n        if (snap.version < this.lightVersion || this.map.light.changed) {\n            this.map.light.copy(snap.map.light);\n            this.lightVersion = snap.version;\n        }\n        // if (snap.version < this.fovVersion || this.map.fov.changed) {\n        //     this.map.fov.copy(snap.map.fov);\n        //     this.fovVersion = snap.version;\n        // }\n        // layers\n        this.layerVersion.forEach((v, index) => {\n            if (v < snap.version)\n                return;\n            const destLayer = this.map.layers[index];\n            if (v > snap.version || destLayer.changed) {\n                const srcLayer = snap.map.layers[index];\n                destLayer.copy(srcLayer);\n                this.layerVersion[index] = snap.version;\n            }\n        });\n        this.version = snap.version;\n    }\n    release(snap) {\n        this.free.push(snap);\n    }\n}\n","import * as GWU from 'gw-utils';\nexport function isHallway(map, x, y) {\n    return (GWU.xy.arcCount(x, y, (i, j) => {\n        return map.cell(i, j).isPassable();\n    }) > 1);\n}\n","import { Map } from './map';\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile === undefined) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === undefined) {\n        opts.boundary = 'WALL';\n    }\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n        map.light.update();\n    }\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    // // In case we reveal the map or make it all visible we need our memory set correctly\n    // map.cells.forEach((_c, x, y) => {\n    //     if (map.fov.isRevealed(x, y)) {\n    //         map.storeMemory(x, y, true); // with snapshot\n    //     }\n    // });\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n","import * as GWU from 'gw-utils';\nimport { Horde as Flags } from '../flags/horde';\nimport * as Map from '../map';\nimport * as Actor from '../actor';\nexport class Horde {\n    // requiredTile: string | null = null;\n    constructor(config) {\n        this.tags = [];\n        this.members = {};\n        // blueprintId: string | null = null;\n        this.flags = { horde: 0 };\n        if (config.tags) {\n            if (typeof config.tags === 'string') {\n                this.tags = config.tags.split(/[,|]/).map((t) => t.trim());\n            }\n            else {\n                this.tags = config.tags.slice();\n            }\n        }\n        this.leader = config.leader;\n        if (config.members) {\n            Object.entries(config.members).forEach(([id, range]) => {\n                this.members[id] = GWU.range.make(range);\n            });\n        }\n        this.frequency = GWU.frequency.make(config.frequency || 100);\n        // this.blueprintId = config.blueprintId || null;\n        this.flags.horde = GWU.flag.from(Flags, config.flags);\n        // if (config.requiredTile) this.requiredTile = config.requiredTile;\n    }\n    spawn(map, x = -1, y = -1, opts = {}) {\n        var _a;\n        opts.canSpawn = opts.canSpawn || GWU.TRUE;\n        opts.rng = opts.rng || map.rng;\n        opts.machine = (_a = opts.machine) !== null && _a !== void 0 ? _a : 0;\n        const leader = this._spawnLeader(map, x, y, opts);\n        if (!leader)\n            return null;\n        this._spawnMembers(leader, map, opts);\n        return leader;\n    }\n    _spawnLeader(map, x, y, opts) {\n        const leaderKind = Actor.get(this.leader);\n        if (!leaderKind) {\n            throw new Error('Failed to find leader kind = ' + this.leader);\n        }\n        if (x >= 0 && y >= 0) {\n            if (leaderKind.avoidsCell(map.cell(x, y)))\n                return null;\n        }\n        const leader = Actor.make(leaderKind, { machineHome: opts.machine });\n        if (!leader)\n            throw new Error('Failed to make horde leader - ' + this.leader);\n        if (x < 0 || y < 0) {\n            [x, y] = this._pickLeaderLoc(leader, map, opts) || [-1, -1];\n            if (x < 0 || y < 0) {\n                return null;\n            }\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addLeader(leader, map, x, y, opts)) {\n            return null;\n        }\n        return leader;\n    }\n    _addLeader(leader, map, x, y, _opts) {\n        return map.addActor(x, y, leader);\n    }\n    _addMember(member, map, x, y, leader, _opts) {\n        member.leader = leader;\n        return map.addActor(x, y, member);\n    }\n    _spawnMembers(leader, map, opts) {\n        const entries = Object.entries(this.members);\n        if (entries.length == 0)\n            return 0;\n        let count = 0;\n        entries.forEach(([kindId, countRange]) => {\n            const count = countRange.value(opts.rng);\n            for (let i = 0; i < count; ++i) {\n                this._spawnMember(kindId, map, leader, opts);\n            }\n        });\n        return count;\n    }\n    _spawnMember(kindId, map, leader, opts) {\n        const kind = Actor.get(kindId);\n        if (!kind) {\n            throw new Error('Failed to find member kind = ' + kindId);\n        }\n        const member = Actor.make(kind, { machineHome: opts.machine });\n        if (!member)\n            throw new Error('Failed to make horde member - ' + kindId);\n        const [x, y] = this._pickMemberLoc(member, map, leader, opts) || [\n            -1, -1,\n        ];\n        if (x < 0 || y < 0) {\n            return null;\n        }\n        // pre-placement stuff?  machine? effect?\n        if (!this._addMember(member, map, x, y, leader, opts)) {\n            return null;\n        }\n        return member;\n    }\n    _pickLeaderLoc(leader, map, opts) {\n        let loc = opts.rng.matchingLoc(map.width, map.height, (x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            if (!opts.canSpawn(x, y))\n                return false;\n            if (leader.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n    _pickMemberLoc(actor, map, leader, opts) {\n        let loc = opts.rng.matchingLocNear(leader.x, leader.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            const cell = map.cell(x, y);\n            if (cell.hasActor())\n                return false; // Brogue kills existing actors, but lets do this instead\n            // if (map.fov.isAnyKindOfVisible(x, y)) return false;\n            if (actor.avoidsCell(cell))\n                return false;\n            if (Map.isHallway(map, x, y)) {\n                return false;\n            }\n            return true;\n        });\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Horde } from './horde';\nimport { Horde as Flags } from '../flags/horde';\nexport const hordes = {};\nexport function install(id, horde) {\n    if (typeof horde === 'string') {\n        horde = { leader: horde };\n    }\n    if (!(horde instanceof Horde)) {\n        horde = new Horde(horde);\n    }\n    hordes[id] = horde;\n    return horde;\n}\nexport function installAll(hordes) {\n    Object.entries(hordes).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function from(id) {\n    if (id instanceof Horde) {\n        return id;\n    }\n    if (typeof id === 'string') {\n        return hordes[id];\n    }\n    return new Horde(id);\n}\nexport function random(opts = {}) {\n    const match = {\n        tags: [],\n        forbidTags: [],\n        flags: 0,\n        forbidFlags: 0,\n        depth: 0,\n    };\n    if (typeof opts === 'string') {\n        opts = {\n            tags: opts,\n        };\n    }\n    const rng = opts.rng || GWU.rng.random;\n    if (typeof opts.tags === 'string') {\n        opts.tags\n            .split(/[,|&]/)\n            .map((t) => t.trim())\n            .forEach((t) => {\n            if (t.startsWith('!')) {\n                match.forbidTags.push(t.substring(1).trim());\n            }\n            else {\n                match.tags.push(t);\n            }\n        });\n    }\n    else if (Array.isArray(opts.tags)) {\n        match.tags = opts.tags.slice();\n    }\n    if (typeof opts.forbidTags === 'string') {\n        match.forbidTags = opts.forbidTags.split(/[,|&]/).map((t) => t.trim());\n    }\n    else if (Array.isArray(opts.forbidTags)) {\n        match.forbidTags = opts.forbidTags.slice();\n    }\n    if (opts.flags) {\n        if (typeof opts.flags === 'string') {\n            opts.flags\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .forEach((flag) => {\n                if (flag.startsWith('!')) {\n                    const key = flag.substring(1);\n                    match.forbidFlags |= Flags[key];\n                }\n                else {\n                    match.flags |= Flags[flag];\n                }\n            });\n        }\n    }\n    if (opts.forbidFlags) {\n        match.forbidFlags = GWU.flag.from(Flags, opts.forbidFlags);\n    }\n    if (opts.depth) {\n        match.depth = opts.depth;\n    }\n    if (match.depth && opts.oodChance) {\n        while (rng.chance(opts.oodChance)) {\n            match.depth += 1;\n        }\n        match.forbidFlags |= Flags.HORDE_NEVER_OOD;\n    }\n    const matches = Object.values(hordes).filter((k) => {\n        if (match.tags.length && !GWU.arraysIntersect(match.tags, k.tags))\n            return false;\n        if (match.forbidTags && GWU.arraysIntersect(match.forbidTags, k.tags))\n            return false;\n        if (match.flags && !(k.flags.horde & match.flags)) {\n            return false;\n        }\n        if (match.forbidFlags && k.flags.horde & match.forbidFlags) {\n            return false;\n        }\n        return true;\n    });\n    if (match.depth) {\n        return rng.item(matches) || null;\n    }\n    const depth = match.depth;\n    const weights = matches.map((h) => h.frequency(depth));\n    const index = rng.weighted(weights);\n    if (index < 0)\n        return null;\n    return matches[index];\n}\n","export const actions = {};\nexport function installCommand(name, fn) {\n    actions[name] = fn;\n}\nexport function getCommand(name) {\n    return actions[name];\n}\n","import { installCommand } from './command';\nimport * as Actor from '../actor';\n// COMMANDS\n// this === GAME\nexport async function moveDir(actor, e) {\n    const dir = e.dir;\n    if (!actor.map || !dir)\n        return -1;\n    return Actor.actions.moveDir(this, actor, e);\n}\ninstallCommand('moveDir', moveDir);\n","import * as GWU from 'gw-utils';\nimport { installCommand } from './command';\nexport async function pickup(actor, _ev) {\n    if (!actor.map)\n        return -1;\n    const playerAction = actor.getAction('pickup');\n    if (!playerAction) {\n        GWU.message.addAt(actor.x, actor.y, 'You cannot pickup items.');\n        return actor.endTurn();\n    }\n    else {\n        // You have to do everything\n        const result = await playerAction(this, actor);\n        if (result)\n            return result; // handled\n    }\n    // Should never get here, but...\n    const standStill = actor.getAction('standStill');\n    if (!standStill)\n        throw new Error('Actor cannot stand still.');\n    return standStill(this, actor);\n}\ninstallCommand('pickup', pickup);\n","// export * from './memory';\n// export * from './system';\nexport const empty = {};\n","/*\n    Attributes\n    ========================\n\n    To configure attributes, set the defaults:\n\n    Attribute.install(')\n\n    const attr = new Attributes(10);\n\n    attr.set('str', 10);\n    attr.set('dex', 10);\n    ...\n    attr.set('chr', 10);\n\n    // to get the current value\n    attr.get('str');\n\n    // To raise an attribute permanently\n    attr.gain('chr', 1);\n\n    // To raise an attribute temporarily\n    attr.gain('chr', 1, false);\n\n    // To lower an attribute permanently\n    attr.drain('chr', 1, true);\n\n    // to lower an attribute temporarily\n    attr.drain('chr', 1);\n\n    // to restore (remove) all temporary changes\n    attr.restore();\n\n    // to add a temporary change that can be removed by itself\n    attr.addBonus('str', 1);\n\n    // to remove the bonus\n    attr.clearBonus('str', 1);\n\n    // adjustments (bonuses) are also possible via:\n    attr.adjust('str', { bonus: 1 });\n\n    // But adjustments can also set the\n    attr.adjust('str', { fixed: 14 });      // temporarily sets base\n    attr.adjust('str', { base: 21 });       // resets the base\n    attr.adjust('str', { restore: true });  // removes all bonuses/penalties\n    attr.adjust('str', { min: 10 });        // limits value\n    attr.adjust('str', { max: 30 });        // limits value\n    attr.adjust('str', { sustain: true });  // turns off lowering values\n*/\nexport class Attributes {\n    constructor(baseValues) {\n        this._base = {};\n        this._max = {};\n        this._bonus = {};\n        this._sustain = {};\n        this._value = {};\n        this.changed = null;\n        this.init(baseValues);\n    }\n    init(baseValues) {\n        for (let k in attributes) {\n            const v = typeof baseValues === 'number' ? baseValues : attributes[k];\n            this.set(k, v);\n        }\n        if (typeof baseValues !== 'number') {\n            for (let k in baseValues) {\n                this.set(k, baseValues[k]);\n            }\n        }\n    }\n    forEach(fn) {\n        Object.keys(attributes).forEach((k) => fn(this.get(k)));\n    }\n    // modifier(name: string) {\n    //     return Math.floor((this.get(name) - 10) / 2);\n    // }\n    get(name) {\n        return this._value[name] || 0;\n    }\n    set(name, value = 0) {\n        this._value[name] = value;\n        this._base[name] = value;\n        this._max[name] = value;\n        this._bonus[name] = [];\n        return value;\n    }\n    base(name) {\n        return this._base[name] || 0;\n    }\n    max(name) {\n        return this._max[name] || 0;\n    }\n    sustain(name) {\n        return this._sustain[name] || false;\n    }\n    gain(name, delta, raiseMax = true) {\n        if (delta < 0 && this._sustain[name])\n            return 0;\n        this._base[name] += delta;\n        if (raiseMax && this._base[name] > this._max[name]) {\n            this._max[name] = this._base[name];\n        }\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    drain(name, loss, lowerMax = false) {\n        if (loss < 0)\n            loss = -loss;\n        const changed = this.gain(name, -loss, false);\n        if (changed && lowerMax) {\n            this._max[name] = this._base[name];\n        }\n        return changed;\n    }\n    restore(name) {\n        this._base[name] = this._max[name];\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    addBonus(name, bonus) {\n        return this._addBonus(name, { bonus });\n    }\n    _addBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        if (this._value[name] === undefined) {\n            this.set(name, 0);\n        }\n        this._bonus[name].push(bonus);\n        let old = this.get(name);\n        return this._calcValue(name) - old;\n    }\n    clearBonus(name, bonus) {\n        return this._clearBonus(name, { bonus });\n    }\n    _clearBonus(name, bonus) {\n        if (typeof bonus === 'number')\n            bonus = { bonus };\n        let arr = this._bonus[name] || [];\n        let key = JSON.stringify(bonus);\n        let index = arr.findIndex((o) => {\n            return JSON.stringify(o) == key;\n        });\n        if (index > -1) {\n            arr.splice(index, 1);\n            let old = this.get(name);\n            return this._calcValue(name) - old;\n        }\n        return 0;\n    }\n    _calcValue(name) {\n        let allAdjustments = {};\n        this._bonus[name].forEach((adj) => this._applyAdjustment(allAdjustments, adj));\n        this._sustain[name] = allAdjustments.sustain || false;\n        let value = this._base[name] || 0;\n        if (allAdjustments.fixed !== undefined) {\n            value = allAdjustments.fixed;\n        }\n        else {\n            value += allAdjustments.bonus || 0;\n            if (allAdjustments.min !== undefined) {\n                value = Math.max(allAdjustments.min, value);\n            }\n            if (allAdjustments.max !== undefined) {\n                value = Math.min(allAdjustments.max, value);\n            }\n        }\n        return (this._value[name] = value);\n    }\n    adjust(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.gain(name, adj.base);\n        }\n        else if (adj.restore) {\n            delta = this.restore(name);\n            if (delta == 0)\n                delta = undefined;\n        }\n        else {\n            delta = this._addBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    clearAdjustment(name, adj) {\n        let delta = undefined;\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        if (adj.base) {\n            delta = this.drain(name, adj.base, true);\n        }\n        else if (adj.restore) {\n            // do nothing...\n        }\n        else {\n            delta = this._clearBonus(name, adj);\n        }\n        if (this.changed && delta !== undefined)\n            this.changed(this, name);\n        return delta;\n    }\n    _applyAdjustment(total, opts) {\n        if (opts.bonus) {\n            total.bonus = (total.bonus || 0) + opts.bonus;\n        }\n        if (opts.fixed !== undefined) {\n            total.fixed = Math.max(total.fixed || 0, opts.fixed);\n        }\n        if (opts.min !== undefined) {\n            total.min = Math.max(total.min || 0, opts.min);\n        }\n        if (opts.max !== undefined) {\n            total.max = Math.max(total.max || 0, opts.max);\n        }\n        if (opts.sustain !== undefined) {\n            total.sustain = opts.sustain;\n        }\n    }\n}\nexport const attributes = {};\nexport function installAttribute(attr) {\n    if (typeof attr === 'string') {\n        attributes[attr] = 0;\n        return;\n    }\n    // clear existing\n    Object.keys(attributes).forEach((k) => {\n        delete attributes[k];\n    });\n    Object.assign(attributes, attr);\n}\nexport function makeAttributes(defaults) {\n    return new Attributes(defaults);\n}\n/*\nfunction adjust(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = undefined;\n        if (a.base) {\n            delta = being.attributes.addBase(a.name, a.base);\n        } else if (a.restore) {\n            delta = being.attributes.restoreBase(a.name);\n            if (delta == 0) delta = undefined;\n        } else {\n            delta = being.attributes.addBonus(a.name, a);\n        }\n        if (delta !== undefined) {\n            out[a.name] = delta;\n        }\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n\n    return results;\n};\n\n function clearAdjustment(being, ...args) {\n    let adj;\n    if (args.length == 1 && typeof args[0] == 'number') {\n        adj = RUT.Attributes.map((key) => {\n            return { name: key, bonus: args[0] };\n        });\n    } else {\n        adj = normalize_adjustment(args);\n    }\n\n    let results = adj.reduce((out, a) => {\n        let delta = 0;\n        delta += being.attributes.clearBonus(a.name, a);\n\n        out[a.name] = delta;\n        return out;\n    }, {});\n    being.changed({ attributes: results });\n    return results;\n};\n\nRUT.Attribute.rollAttributes = function (opts = {}) {\n    let dice = [];\n    let total = 0;\n\n    if (RUT.Calc.isValue(opts)) opts = { value: opts };\n    Object.defaults(opts, RUT.Config.Attribute.rollAttributes);\n\n    let attributes = RUT.Config.Attributes;\n\n    let min_average = Math.max(opts.min_average - 5, 0);\n    let max_average = Math.min(opts.max_average - 5, RUT.Config.ATTRIBUTE_MAX);\n\n    let min_total = min_average * attributes.length;\n    let max_total = max_average * attributes.length;\n\n    do {\n        total = 0;\n        dice = [];\n        for (let i = 0; i < 18; ++i) {\n            dice.push(RUT.RNG.rollDie(3 + (i % 3)));\n            total += dice[i];\n        }\n    } while (total <= min_total || total > max_total);\n\n    let values = attributes.reduce((out, name, i) => {\n        let index = 3 * i;\n        let value = 5 + dice[index] + dice[index + 1] + dice[index + 2];\n        if (opts.value) {\n            value = RUT.Calc.calc(opts.value);\n        } else if (opts[name]) {\n            value = RUT.Calc.calc(opts[name]);\n        }\n        out[name] = value;\n        return out;\n    }, {});\n    return values;\n};\nRUT.Config.Attribute.rollAttributes = { min_average: 11, max_average: 14 };\n*/\n/*\nexport function normalize_adjustment(args: ) {\n    if (args.length == 3) {\n        let opts = args[2];\n        if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        let name = `${args[0]}.${args[1]}`;\n        return [Object.assign({ name }, opts)];\n    }\n    if (args.length == 2) {\n        let opts = args[1];\n        if (opts === true || opts === false) {\n            opts = { has: opts };\n        } else if (RUT.Calc.isValue(opts)) {\n            opts = { bonus: opts };\n        }\n        return [Object.assign({ name: args[0] }, opts)];\n    }\n\n    let opts = args[0];\n    if (opts.name) {\n        return [opts];\n    }\n    if (opts.attribute) {\n        opts.name = opts.attribute;\n        return [opts];\n    }\n    if (opts.restore) {\n        if (opts.restore == 'all') {\n            return RUT.Attributes.map((a) => {\n                return { name: a, restore: true };\n            });\n        }\n        return [{ name: opts.restore, restore: true }];\n    }\n    if (opts.skill) {\n        opts.name = opts.skill;\n        return [opts];\n    }\n    if (opts.stat) {\n        opts.name = opts.stat;\n        return [opts];\n    }\n    if (opts.save) {\n        opts.name = opts.save;\n        return [opts];\n    }\n    // if (opts.saves) {\n    //   opts.name = opts.saves;\n    //   return [opts];\n    // }\n    if (opts.ability) {\n        opts.name = opts.ability;\n        return [opts];\n    }\n\n    // now we assume that each key is for a separate skill...\n    return Object.keys(opts).reduce((out, key) => {\n        let opt = opts[key];\n        if (key == 'reset' || key == 'restore') {\n            if (typeof opt == 'string') opt = [opt];\n            opt.forEach((a) => {\n                out.push({ name: a, restore: true });\n            });\n        } else {\n            if (typeof opt == 'number' || Array.isArray(opt)) {\n                opt = { bonus: opt };\n            } else if (opt === true || opt === false) {\n                opt = { has: opt };\n            } else if (opt == 'reset' || opt == 'restore') {\n                opt = { restore: true };\n            } else if (opt == 'sustain') {\n                opt = { sustain: true };\n            }\n            out.push(Object.assign({ name: key }, opt));\n        }\n        return out;\n    }, []);\n}\n*/\n","/*\nSkills\n\nSkills generally fall into 2 categories - binary and progressive.\n\n\n// Create a skills object\nconst skills = new Skills();\n\n// set skills\nskills.set('diving', true); // = { has: true, level: 0 }\nskills.set('diving', 10); // = { has: true, level: 10 }\n\nskills.remove('diving'); // {}\n\n// adjustments\nskills.adjust('diving', { bonus: 1 });\nskills.adjust('diving', { disadvantage: true });\nskills.adjust('diving', { advantage: 3 });\nskills.adjust('diving', { fixed: 10 });\nskills.adjust('diving', { critical: 5 });\n\n\n\n\n\n*/\nclass Skill {\n    constructor(name) {\n        this.name = name;\n    }\n    get has() {\n        return this._bool('_has');\n    }\n    get level() {\n        return this._int('_level');\n    }\n    get disadvantage() {\n        return this._bool('_disadvantage');\n    }\n    get advantage() {\n        return this._bool('_advantage');\n    }\n    get fixed() {\n        return this._int('_fixed');\n    }\n    get bonus() {\n        const b = this._int('_bonus') || 0;\n        if (!this._parent)\n            return b;\n        return b + this._parent.bonus;\n    }\n    get succeed() {\n        return this._bool('_succeed');\n    }\n    get fail() {\n        return this._bool('_fail');\n    }\n    set(value) {\n        if (value === false) {\n            this._has = false;\n            this._level = 0;\n        }\n        else {\n            this._has = true;\n            this._level = value === true ? 0 : value;\n        }\n    }\n    _value(name) {\n        if (this[name] !== undefined) {\n            // @ts-ignore\n            return this[name];\n        }\n        if (this._parent) {\n            // @ts-ignore\n            return this._parent._value(name);\n        }\n        return undefined;\n    }\n    _bool(name) {\n        return !!this._value(name);\n    }\n    _int(name) {\n        return this._value(name);\n    }\n    adjust(adj) {\n        Object.entries(adj).forEach(([key, value]) => {\n            key = '_' + key;\n            if (value === undefined)\n                return;\n            if (key === '_fixed') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = Math.max(value, this._fixed || 0);\n            }\n            else if (key === '_bonus') {\n                if (typeof value !== 'number') {\n                    throw new Error('fixed skill adjustment must be a number.');\n                }\n                value = value + (this._bonus || 0);\n            }\n            // @ts-ignore\n            this[key] = value;\n        });\n    }\n    clear(adj) {\n        Object.keys(adj).forEach((key) => {\n            key = '_' + key;\n            // @ts-ignore\n            if (this[key] !== undefined) {\n                // @ts-ignore\n                this[key] = undefined;\n            }\n        });\n    }\n}\nexport class Skills {\n    constructor(vals = {}) {\n        this._skills = {};\n        Object.entries(vals).forEach(([key, value]) => {\n            this.set(key, value);\n        });\n    }\n    set(name, value) {\n        const s = this.get(name);\n        s.set(value);\n        return s;\n    }\n    get(name) {\n        let s = this._skills[name];\n        if (s)\n            return s;\n        s = this._skills[name] = new Skill(name);\n        const index = name.lastIndexOf('.');\n        if (index > 0) {\n            s._parent = this.get(name.substring(0, index));\n        }\n        else {\n            s.set(false);\n        }\n        return s;\n    }\n    adjust(name, adj) {\n        if (typeof adj === 'number') {\n            adj = { bonus: adj };\n        }\n        let s = this.get(name);\n        s.adjust(adj);\n        return s;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Scent {\n    constructor(player) {\n        this._player = player;\n    }\n    get(x, y) {\n        if (!this._data)\n            return 0;\n        return this._data[x][y];\n    }\n    clear() {\n        if (!this._player.map)\n            return;\n        if (this._data)\n            GWU.grid.free(this._data);\n        this._data = GWU.grid.alloc(this._player.map.width, this._player.map.height);\n    }\n    update() {\n        if (!this._player.map)\n            return;\n        const scent = this._player.data.scent || 10;\n        this._data[this._player.x][this._player.y] = scent;\n        const updated = GWU.grid.alloc(this._data.width, this._data.height);\n        const map = this._player.map;\n        this._data.forEach((v, x, y) => {\n            const cell = map.cell(x, y);\n            if (cell.blocksMove())\n                return;\n            let highest = v;\n            GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n                if (!this._data.hasXY(x1, y1))\n                    return;\n                const v1 = this._data[x1][y1];\n                if (v1 > highest) {\n                    highest = v1;\n                }\n            }, true);\n            const delta = cell.hasLiquid() ? 3 : 1;\n            updated[x][y] = Math.max(0, highest - delta);\n        });\n        GWU.grid.free(this._data);\n        this._data = updated;\n    }\n    nextDir(x, y) {\n        const v = this._data[x][y] || 0;\n        if (!v)\n            return null;\n        let highest = v;\n        let highestLoc = [];\n        GWU.xy.eachNeighbor(x, y, (x1, y1) => {\n            if (!this._data.hasXY(x1, y1))\n                return;\n            const v1 = this._data[x1][y1];\n            if (v1 == highest) {\n                highestLoc.push([x1, y1]);\n            }\n            else if (v1 > highest) {\n                highestLoc = [[x1, y1]];\n                highest = v1;\n            }\n        }, false);\n        if (!highestLoc.length)\n            return null;\n        const loc = GWU.random.item(highestLoc);\n        loc[0] = loc[0] - x;\n        loc[1] = loc[1] - y;\n        return loc;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Actor } from '../actor';\nimport { Scent } from './scent';\nimport * as Flags from '../flags';\nexport class Player extends Actor {\n    constructor(kind) {\n        super(kind);\n        this.scent = new Scent(this);\n    }\n    interrupt(other) {\n        if (this.hasGoal()) {\n            this.clearGoal();\n            GWU.message.addAt(this.x, this.y, '{{you}} {{verb see~}} {{a other}}.', {\n                actor: this,\n                verb: 'see',\n                other,\n            });\n        }\n    }\n    endTurn(pct = 100) {\n        if (this.map) {\n            if (this.map.fov.update()) {\n                this.clearActorFlag(Flags.Actor.STABLE_COST_MAP);\n            }\n            this.scent.update();\n        }\n        return super.endTurn(pct);\n    }\n    addToMap(map, x, y) {\n        if (!super.addToMap(map, x, y))\n            return false;\n        this.scent.clear();\n        return true;\n    }\n    setGoal(x, y) {\n        const map = this._map;\n        if (!map)\n            throw new Error('No map to set goal with!');\n        if (!this._goalMap) {\n            this._goalMap = GWU.grid.alloc(map.width, map.height);\n        }\n        const goalMap = this._goalMap;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            let loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            loc = loc || [this.x, this.y];\n            x = loc[0];\n            y = loc[1];\n        }\n        GWU.path.calculateDistances(goalMap, x, y, this.costMap());\n        return this._goalMap;\n    }\n    nextGoalStep() {\n        const map = this.map;\n        if (!map)\n            return null;\n        const goalMap = this.goalMap;\n        const step = GWU.path.nextStep(goalMap, this.x, this.y, (x, y) => map.hasActor(x, y) && map.actorAt(x, y) !== this);\n        return step;\n    }\n    pathTo(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (args.length === 1) {\n            x = args[0].x;\n            y = args[0].y;\n        }\n        const map = this.map;\n        if (!map)\n            return null;\n        const mapToPlayer = this.mapToMe();\n        if (mapToPlayer[x][y] < 0 ||\n            mapToPlayer[x][y] >= GWU.path.NO_PATH ||\n            !map.fov.isRevealed(x, y)) {\n            const loc = GWU.path.getClosestValidLocation(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y));\n            if (!loc)\n                return null;\n            x = loc[0];\n            y = loc[1];\n        }\n        const path = GWU.path.getPath(mapToPlayer, x, y, (x, y) => !map.fov.isRevealed(x, y), true);\n        return path;\n    }\n}\nPlayer.default = {\n    ch: '@',\n    fg: 'white',\n    name: 'You',\n    swim: true,\n    sidebarFg: 'purple',\n};\n","import * as GWU from 'gw-utils';\nimport * as Actor from '../actor';\nimport * as Skills from './skill';\nimport * as Attributes from './attribute';\nimport { Player } from './player';\nimport * as Flags from '../flags';\nexport class PlayerKind extends Actor.ActorKind {\n    constructor(opts = {}) {\n        super((() => {\n            if (!opts.sprite) {\n                opts.ch = opts.ch || Player.default.ch;\n                opts.fg = opts.fg || Player.default.fg;\n            }\n            if (!opts.name) {\n                opts.name = Player.default.name;\n            }\n            if (opts.swim === undefined) {\n                opts.swim = Player.default.swim;\n            }\n            return opts;\n        })());\n        this.flags.actor |= Flags.Actor.IS_PLAYER;\n        this.flags.entity |= Flags.Entity.L_ALWAYS_PLURAL;\n        this.attributes = new Attributes.Attributes(opts.attributes || {});\n        this.skills = new Skills.Skills(opts.skills || {});\n    }\n    make(options) {\n        const actor = new Player(this);\n        this.init(actor, options);\n        return actor;\n    }\n    cellCost(cell, player) {\n        const map = cell.map;\n        if (!map.fov.isRevealed(cell.x, cell.y))\n            return GWU.path.FORBIDDEN;\n        return super.cellCost(cell, player);\n    }\n}\n","import { PlayerKind } from './kind';\nimport * as Actor from '../actor';\nexport function make(id, makeOptions) {\n    let kind;\n    if (typeof id === 'string') {\n        // @ts-ignore\n        kind = Actor.get(id);\n        if (!kind)\n            throw new Error('Failed to find item kind - ' + id);\n        if (!(kind instanceof PlayerKind))\n            throw new Error('Not a player kind.');\n    }\n    else if (id instanceof PlayerKind) {\n        kind = id;\n    }\n    else {\n        kind = makeKind(id);\n    }\n    return kind.make(makeOptions);\n}\nexport function install(id, kind) {\n    if (kind instanceof PlayerKind) {\n        Actor.kinds[id] = kind;\n        return kind;\n    }\n    const made = makeKind(kind);\n    made.id = id;\n    Actor.kinds[id] = made;\n    return made;\n}\nexport function get(id) {\n    if (id instanceof PlayerKind)\n        return id;\n    const k = Actor.kinds[id];\n    if (k && !(k instanceof PlayerKind)) {\n        throw new Error('No a player kind.');\n    }\n    return k;\n}\nexport function makeKind(info) {\n    const config = Object.assign({}, info);\n    return new PlayerKind(config);\n}\n","import * as GWU from 'gw-utils';\nimport { Player } from '../player/player';\nimport * as Flags from '../flags';\nexport class Viewport {\n    constructor(opts) {\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n        this.player = null;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        this.lockX = opts.lock || opts.lockX || false;\n        this.lockY = opts.lock || opts.lockY || false;\n        this.scent = opts.scent || false;\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n        if (subject && subject instanceof Player) {\n            this.player = subject;\n        }\n        else {\n            this.player = null;\n        }\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map || !map.needsRedraw)\n            return false;\n        const fov = map.fov;\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const drawer = map.drawer;\n        drawer.scent = this.scent;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, map, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n    tick(_dt) {\n        if (!this._subject)\n            return false;\n        const map = this._subject.map;\n        if (!map)\n            return false;\n        if (!map.hasMapFlag(Flags.Map.MAP_DANCES) || !GWU.cosmetic.chance(10)) {\n            return false;\n        }\n        map.eachCell((c) => {\n            if (c.hasCellFlag(Flags.Cell.COLORS_DANCE) &&\n                map.fov.isAnyKindOfVisible(c.x, c.y) &&\n                GWU.cosmetic.chance(2)) {\n                c.needsRedraw = true;\n            }\n        });\n        map.needsRedraw = true;\n        return true;\n    }\n    mousemove(ev) {\n        if (!this.bounds.contains(ev.x, ev.y)) {\n            this.clearPath();\n            return false;\n        }\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        return this.showPath(this.toInnerX(ev.x), this.toInnerY(ev.y));\n    }\n    click(ev) {\n        if (!this.bounds.contains(ev.x, ev.y))\n            return false;\n        if (!this.player)\n            return false;\n        if (this.player.hasGoal()) {\n            this.player.clearGoal();\n        }\n        else {\n            this.player.setGoal(this.toInnerX(ev.x), this.toInnerY(ev.y));\n        }\n        return true;\n    }\n    clearPath() {\n        if (!this.player)\n            return;\n        const map = this.player.map;\n        if (!map)\n            return;\n        map.clearPath();\n    }\n    showPath(x, y) {\n        if (!this.player)\n            return false;\n        const map = this.player.map;\n        if (!map)\n            return false;\n        // if (!this.player.hasGoal()) return false;\n        // console.log('mouse', ev.x, ev.y);\n        const path = this.player.pathTo(x, y);\n        if (path) {\n            map.highlightPath(path, true);\n        }\n        else {\n            map.clearPath();\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Messages {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n        this.fg = GWU.color.from(opts.fg || 'white');\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.archive || 40,\n            match: () => {\n                this.needsDraw = true;\n            },\n        });\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    clear() {\n        this.cache.clear();\n        this.needsDraw = true;\n    }\n    click(e, game) {\n        if (!this.bounds.contains(e))\n            return false;\n        return this.showArchive(game);\n    }\n    confirmAll() {\n        this.cache.confirmAll();\n        this.needsDraw = true;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed && this.bg) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    showArchive(game) {\n        if (this.cache.length <= this.bounds.height)\n            return false;\n        return showArchive(this, game).then(() => this.confirmAll());\n    }\n}\nexport class MessageArchive extends GWU.widget.Widget {\n    constructor(layer, source) {\n        super(layer, {\n            id: 'ARCHIVE',\n            tag: 'messages',\n            height: source.bounds.height,\n            width: source.bounds.width,\n            bg: source.bg,\n            x: 0,\n            y: 0,\n            tabStop: true,\n            depth: 100, // I'm on top\n        });\n        this.mode = 'forward';\n        this._timeout = null;\n        this.source = source;\n        this.isOnTop = this.source.bounds.y < 10;\n        this.bounds.height = this.isOnTop\n            ? layer.height - source.bounds.y\n            : source.bounds.bottom;\n        this.totalCount = Math.min(source.cache.length, this.isOnTop\n            ? layer.height - this.source.bounds.top\n            : this.source.bounds.bottom);\n        this.shown = source.bounds.height;\n        this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        // confirm them as they are right now...\n        this.source.cache.confirmAll();\n    }\n    contains() {\n        return true; // Eat all mouse activity\n    }\n    finish() {\n        this.layer.finish();\n    }\n    keypress(e) {\n        return this.click(e);\n    }\n    click(_e) {\n        if (this.mode === 'ack') {\n            this.mode = 'reverse';\n            this.layer.needsDraw = true;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n            }\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        else if (this.mode === 'reverse') {\n            this.finish();\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n            if (this._timeout) {\n                this.layer.clearTimeout(this._timeout);\n                this._timeout = null;\n            }\n            this.layer.needsDraw = true;\n        }\n        return true;\n    }\n    _forward() {\n        // console.log('forward');\n        ++this.shown;\n        this._timeout = null;\n        this.layer.needsDraw = true;\n        if (this.shown < this.totalCount) {\n            this._timeout = this.layer.setTimeout(() => this._forward(), 16);\n        }\n        else {\n            this.mode = 'ack';\n            this.shown = this.totalCount;\n        }\n        return true;\n    }\n    _reverse() {\n        // console.log('reverse');\n        --this.shown;\n        this._timeout = null;\n        if (this.shown <= this.source.bounds.height) {\n            this.finish();\n        }\n        else {\n            this.layer.needsDraw = true;\n            this._timeout = this.layer.setTimeout(() => this._reverse(), 16);\n        }\n        return true;\n    }\n    _draw(buffer) {\n        let fadePercent = 0;\n        // let reverse = this.mode === 'reverse';\n        // Count the number of lines in the archive.\n        // let totalMessageCount = this.totalCount;\n        const isOnTop = this.isOnTop;\n        const dbuf = buffer;\n        const fg = GWU.color.from(this.source.fg);\n        // const dM = reverse ? -1 : 1;\n        // const startM = reverse ? totalMessageCount : this.bounds.height;\n        // const endM = reverse\n        //     ? this.bounds.height + dM + 1\n        //     : totalMessageCount + dM;\n        const startY = isOnTop\n            ? this.shown - 1\n            : this.bounds.bottom - this.shown;\n        const endY = isOnTop ? 0 : this.bounds.bottom - 1;\n        const dy = isOnTop ? -1 : 1;\n        dbuf.fillRect(this.source.bounds.x, Math.min(startY, endY), this.bounds.width, this.shown, ' ', this._used.bg, this._used.bg);\n        this.source.cache.forEach((line, _confirmed, j) => {\n            const y = startY + j * dy;\n            if (isOnTop) {\n                if (y < endY)\n                    return;\n            }\n            else if (y > endY)\n                return;\n            fadePercent = Math.floor((50 * j) / this.shown);\n            const fgColor = fg.mix(this._used.bg, fadePercent);\n            dbuf.drawText(this.source.bounds.x, y, line, fgColor, this._used.bg);\n        });\n        if (this.mode === 'ack') {\n            const y = this.isOnTop ? 0 : dbuf.height - 1;\n            const x = this.source.bounds.x > 8\n                ? this.source.bounds.x - 8 // to left of box\n                : Math.min(this.source.bounds.x + this.bounds.width, // just to right of box\n                dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                );\n            dbuf.wrapText(x, y, 8, '--DONE--', this._used.bg, this._used.fg);\n        }\n        return true;\n    }\n}\nexport async function showArchive(widget, game) {\n    const layer = new GWU.widget.WidgetLayer(game.ui);\n    // @ts-ignore\n    const w = new MessageArchive(layer, widget);\n    await layer.run();\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\nimport * as Tile from '../tile/tile';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor {\n    constructor(opts) {\n        this.needsDraw = true;\n        this.text = '';\n        this.fg = GWU.color.from(opts.fg || 'purple');\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n        this.promptFg = GWU.color.from(opts.promptFg || 'gold');\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = text;\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    clear() {\n        this.text = '';\n        this.isPrompt = false;\n        this.needsDraw = true;\n        return this;\n    }\n    showPrompt(text) {\n        this.text = text;\n        this.isPrompt = true;\n        this.needsDraw = true;\n        return this;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'You see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'You sense';\n        }\n        else if (isRemembered) {\n            intro = 'You remember seeing';\n        }\n        else if (isMapped) {\n            intro = 'You expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(Flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(Flags.Depth.GROUND) || Tile.NULL;\n        const surfaceTile = cell.depthTile(Flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(Flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(Flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(Flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('{{intro}} {{text}}.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n    draw(buffer) {\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, ' ', this.bg, this.bg);\n        buffer.drawText(this.bounds.x, this.bounds.y, this.text, this.fg, this.bg, this.bounds.width, 'left');\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Flags from '../flags';\n// import { UISubject } from './viewport';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawSidebar(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawSidebar(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawSidebar(buffer, bounds);\n    }\n}\nexport class Sidebar {\n    constructor(opts) {\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n        this.needsDraw = true;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'darkest_gray');\n    }\n    contains(xy) {\n        return this.bounds.contains(xy);\n    }\n    reset() {\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n        this.needsDraw = true;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    mousemove(e) {\n        if (this.contains(e)) {\n            this._highlightRow(e.y);\n            return true;\n        }\n        this.clearHighlight();\n        return false;\n    }\n    highlightAt(x, y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.x == x && e.y == y) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this.needsDraw || (this.needsDraw = changed);\n        return changed;\n    }\n    _highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        const changed = this.highlight !== last;\n        this.needsDraw || (this.needsDraw = changed);\n        if (this.highlight && this.subject && this.subject.map) {\n            const path = this.subject.pathTo(\n            // @ts-ignore\n            this.highlight.x, \n            // @ts-ignore\n            this.highlight.y);\n            if (path) {\n                this.subject.map.highlightPath(path, true);\n            }\n            else {\n                // @ts-ignore\n                this.subject.map.showCursor(this.highlight.x, this.highlight.y);\n            }\n        }\n        return changed;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        this.needsDraw || (this.needsDraw = result);\n        return result;\n    }\n    _updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return false;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasTileFlag(Flags.Tile.T_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n        this.needsDraw = true;\n        return true;\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(Flags.Cell.STABLE_MEMORY) ? 3 : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return entry.priority > 2 || !!this.highlight;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0 || priority === 3)\n            return false;\n        if (actor.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        if (item.hasEntityFlag(Flags.Entity.L_NO_SIDEBAR))\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _updateEntryCache(map, cx, cy, fov) {\n        if (map === this.lastMap &&\n            cx === this.lastX &&\n            cy === this.lastY &&\n            !map.hasMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED |\n                Flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return false;\n        }\n        map.clearMapFlag(Flags.Map.MAP_SIDEBAR_CHANGED);\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (!done[x][y] && this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n                a.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n            else {\n                a.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (!done[x][y] && this._addItemEntry(i, map, cx, cy, fov)) {\n                i.setEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n                done[x][y] = 1;\n            }\n            else {\n                i.clearEntityFlag(Flags.Entity.L_IN_SIDEBAR);\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n        return true;\n    }\n    update() {\n        if (!this.subject) {\n            return false;\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        if (!subject.map)\n            return false;\n        return this.updateAt(subject.map, subject.x, subject.y, subject.map.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        let changed = this._updateCellCache(map);\n        if (this._updateEntryCache(map, cx, cy, fov)) {\n            changed = true;\n        }\n        return changed;\n    }\n    draw(buffer) {\n        var _a;\n        const map = (_a = this.subject) === null || _a === void 0 ? void 0 : _a.map;\n        if (!map)\n            return false;\n        if (this.update()) {\n            this.needsDraw = true;\n        }\n        if (!this.needsDraw)\n            return false;\n        this.needsDraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(this.bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            else if (this.highlight === currentEntry) {\n                buffer.mix('white', 20, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Command from '../command';\nimport * as Actor from '../actor';\nimport * as Viewport from './viewport';\nimport * as Message from './message';\nimport * as Flavor from './flavor';\nimport * as Sidebar from './sidebar';\nexport class Game {\n    constructor(opts) {\n        this.result = undefined;\n        this.mouse = false;\n        this.fov = false;\n        this.scent = false;\n        this.running = false;\n        this.keymap = {};\n        this.ui = opts.ui || new GWU.ui.UI(opts);\n        if (!opts.makeMap || !opts.makePlayer) {\n            throw new Error('Need funcitons for makeMap and makePlayer');\n        }\n        this._makeMap = opts.makeMap;\n        this._makePlayer = opts.makePlayer;\n        this._startMap = opts.startMap || GWU.NOOP;\n        if (opts.keymap) {\n            Object.assign(this.keymap, opts.keymap);\n        }\n        if (opts.mouse) {\n            this.mouse = true;\n        }\n        if (typeof opts.messages === 'number') {\n            opts.messages = { size: opts.messages };\n        }\n        if (opts.flavor === true) {\n            opts.flavor = {};\n        }\n        else if (opts.flavor === false) {\n            delete opts.flavor;\n        }\n        opts.viewport = opts.viewport || {};\n        const _opts = opts;\n        _opts.viewport.x = 0;\n        _opts.viewport.y = 0;\n        _opts.viewport.width = this.ui.width;\n        _opts.viewport.height = this.ui.height;\n        this._initMenu(_opts);\n        if (opts.sidebar)\n            this._initSidebar(_opts);\n        if (opts.messages)\n            this._initMessages(_opts);\n        if (opts.flavor)\n            this._initFlavor(_opts);\n        this._initViewport(_opts);\n    }\n    get width() {\n        return this.viewport.bounds.width;\n    }\n    get height() {\n        return this.viewport.bounds.height;\n    }\n    _initMenu(_opts) { }\n    _initSidebar(opts) {\n        if (typeof opts.sidebar === 'number') {\n            opts.sidebar = { width: opts.sidebar };\n        }\n        else if (opts.sidebar === true) {\n            opts.sidebar = {};\n        }\n        const sideOpts = opts.sidebar;\n        sideOpts.width = sideOpts.width || -20; // on right side\n        const viewInit = opts.viewport;\n        if (sideOpts.width < 0) {\n            sideOpts.width *= -1;\n            sideOpts.x = viewInit.x + viewInit.width - sideOpts.width;\n            sideOpts.y = viewInit.y;\n            sideOpts.height = viewInit.height;\n            viewInit.width -= sideOpts.width;\n        }\n        else {\n            sideOpts.x = 0;\n            sideOpts.height = viewInit.height;\n            sideOpts.y = viewInit.y;\n            viewInit.x = sideOpts.width;\n            viewInit.width -= sideOpts.width;\n        }\n        this.sidebar = new Sidebar.Sidebar(sideOpts);\n    }\n    _initMessages(opts) {\n        if (opts.messages === false)\n            return;\n        if (opts.messages === true) {\n            opts.messages = { size: -4 };\n        }\n        const messOpts = opts.messages || { size: -4 };\n        messOpts.size = messOpts.size || messOpts.y || -4;\n        if (messOpts.size < 0) {\n            // bottom\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = this.ui.height + messOpts.size; // length < 0\n            messOpts.width = viewInit.width;\n            messOpts.height = -messOpts.size;\n            opts.viewport.height -= messOpts.height;\n        }\n        else {\n            // top\n            const viewInit = opts.viewport;\n            messOpts.x = viewInit.x;\n            messOpts.y = viewInit.y;\n            messOpts.width = viewInit.width;\n            messOpts.height = messOpts.size;\n            viewInit.y += messOpts.size;\n            viewInit.height -= messOpts.size;\n        }\n        this.messages = new Message.Messages(messOpts);\n    }\n    _initFlavor(opts) {\n        const flavOpts = opts.flavor || {};\n        const viewOpts = opts.viewport;\n        if (viewOpts.y === 0) {\n            // messages must be on bottom (or not there)\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.height - 1;\n            flavOpts.width = viewOpts.width;\n            viewOpts.height -= 1;\n        }\n        else {\n            // messages on top\n            flavOpts.x = viewOpts.x;\n            flavOpts.y = viewOpts.y;\n            flavOpts.width = viewOpts.width;\n            viewOpts.y += 1;\n            viewOpts.height -= 1;\n        }\n        this.flavor = new Flavor.Flavor(flavOpts);\n    }\n    _initViewport(opts) {\n        const viewOpts = opts.viewport || {};\n        const viewInit = viewOpts;\n        viewInit.lock = true;\n        this.viewport = new Viewport.Viewport(viewInit);\n    }\n    async start() {\n        this.layer = new GWU.ui.Layer(this.ui);\n        this.buffer = this.layer.buffer;\n        this.io = this.layer.io;\n        this.running = true;\n        this.scheduler = new GWU.scheduler.Scheduler();\n        if (this.messages)\n            this.messages.clear();\n        this.player = this._makePlayer.call(this);\n        this.viewport.subject = this.player;\n        if (this.sidebar)\n            this.sidebar.subject = this.player;\n        this.startNewMap(0);\n        this.scheduler.push(this.player, 0);\n        while (this.running) {\n            await this.animate();\n            await this.runTurn();\n        }\n        return this.result;\n    }\n    startNewMap(id, _location = 'start') {\n        this.scheduler.clear();\n        this.map = this._makeMap.call(this, id);\n        this.map.setPlayer(this.player);\n        this.map.id = id;\n        this._startMap.call(this, this.map, this.player);\n        // make sure player is on map\n        if (this.player.map !== this.map) {\n            // if not, add them (where?)\n            const loc = this.map.locations.start || [0, 0]; // Is top left fallback any good?\n            this.map.addActorNear(loc[0], loc[1], this.player);\n        }\n        if (this.scent) {\n            this.map.drawer.scent = this.scent;\n        }\n        this.map.actors.forEach((a) => {\n            if (!a.isPlayer()) {\n                this.scheduler.push(a, a.moveSpeed());\n            }\n        });\n        this.map.fov.update();\n        this.draw();\n    }\n    draw() {\n        this.viewport.draw(this.buffer);\n        if (this.messages)\n            this.messages.draw(this.buffer);\n        if (this.flavor)\n            this.flavor.draw(this.buffer);\n        if (this.sidebar)\n            this.sidebar.draw(this.buffer);\n        if (this.buffer.changed) {\n            this.buffer.render();\n        }\n        this.buffer.changed = false;\n    }\n    finish(result) {\n        this.running = false;\n        this.layer.finish();\n        this.result = result;\n    }\n    async runTurn() {\n        const actor = this.scheduler.pop();\n        if (!actor) {\n            this.finish();\n            return;\n        }\n        let nextTime = 0;\n        while (nextTime === 0) {\n            if (actor === this.player) {\n                nextTime = await this.playerTurn(actor);\n            }\n            else if ('act' in actor) {\n                nextTime = await actor.act(this);\n            }\n            else if ('tick' in actor) {\n                nextTime = await actor.tick(); // dt === 100 -- TODO\n            }\n            this.draw();\n        }\n        if (nextTime >= 0) {\n            this.scheduler.push(actor, nextTime);\n        }\n    }\n    async animate() {\n        if (!this.layer.io._tweens.length)\n            return;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            this.layer.io.enqueue(tick);\n        }, 16);\n        while (this.layer.io._tweens.length) {\n            const ev = await this.layer.io.nextTick();\n            if (ev && ev.dt) {\n                this.layer.io._tweens.forEach((a) => a && a.tick(ev.dt));\n                this.layer.io._tweens = this.layer.io._tweens.filter((a) => a && a.isRunning());\n            }\n            this.draw();\n        }\n        clearInterval(timer);\n    }\n    async playerTurn(player) {\n        let done = 0;\n        const timer = setInterval(() => {\n            const tick = GWU.io.makeTickEvent(16);\n            // console.log('-tick', Date.now());\n            this.layer.io.enqueue(tick);\n        }, 16);\n        let elapsed = 0;\n        while (!done && this.running) {\n            const ev = await this.layer.io.nextEvent(-1);\n            if (ev) {\n                if (ev.type === GWU.io.KEYPRESS) {\n                    this.map.clearPath();\n                    if (this.player.hasGoal()) {\n                        this.player.clearGoal();\n                    }\n                    else {\n                        const handler = GWU.io.handlerFor(ev, this.keymap);\n                        if (handler) {\n                            if (typeof handler === 'string') {\n                                const action = Command.getCommand(handler);\n                                if (action) {\n                                    done = await action.call(this, player, ev);\n                                }\n                            }\n                            else if (typeof handler === 'function') {\n                                done = await handler.call(this, player, ev);\n                            }\n                        }\n                    }\n                }\n                else if (ev.type === GWU.io.TICK) {\n                    this.layer.tick(ev); // timeouts\n                    elapsed += ev.dt || 16;\n                    if (this.viewport.tick(ev.dt)) {\n                        this.draw();\n                    }\n                    // console.log('-- event', elapsed);\n                }\n                else if (this.mouse && ev.type === GWU.io.MOUSEMOVE) {\n                    if (this.viewport.mousemove(ev)) {\n                        const x = this.viewport.toInnerX(ev.x);\n                        const y = this.viewport.toInnerY(ev.y);\n                        if (this.flavor) {\n                            const text = this.flavor.getFlavorText(this.map, x, y, this.map.fov);\n                            this.flavor.showText(text);\n                        }\n                        if (this.sidebar) {\n                            this.sidebar.highlightAt(x, y);\n                        }\n                        this.draw();\n                    }\n                    else if (this.sidebar && this.sidebar.mousemove(ev)) {\n                        this.draw();\n                    }\n                }\n                else if (this.mouse && ev.type === GWU.io.CLICK) {\n                    // console.log('click', ev.x, ev.y);\n                    if (this.viewport.contains(ev)) {\n                        this.viewport.click(ev);\n                    }\n                    else if (this.messages && this.messages.contains(ev)) {\n                        await this.messages.showArchive(this);\n                    }\n                }\n            }\n            if (elapsed < 50) {\n                continue;\n            }\n            elapsed -= 50;\n            if (this.player.hasGoal()) {\n                const step = this.player.nextGoalStep();\n                if (!step) {\n                    this.player.clearGoal();\n                }\n                else {\n                    const action = Actor.getAction('moveDir');\n                    if (!action)\n                        throw new Error('Failed to find moveDir action.');\n                    done = await action(this, this.player, { dir: step });\n                    if (done && this.player.hasGoal()) {\n                        const goalMap = this.player.goalMap;\n                        this.viewport.showPath(goalMap.x, goalMap.y);\n                    }\n                }\n            }\n        }\n        clearInterval(timer);\n        return done;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Tile from './tile';\nimport '../effect/handlers';\nimport '../effect/types';\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([30, 30, 30]).rand(20, 0, 0, 0),\n    bg: GWU.color.from([2, 2, 10]).rand(0, 2, 2, 0),\n    priority: 10,\n    article: 'the',\n    flavor: 'the stone floor',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: 'TILE:DOOR_OPEN',\n        open: 'TILE:DOOR_OPEN_ALWAYS',\n    },\n    flavor: 'a closed door',\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            effects: 'TILE:DOOR~!',\n        },\n        enter: null,\n        open: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: 'TILE:DOOR~!',\n    },\n    flavor: 'an open door',\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: 'EMIT:UP_STAIRS',\n    },\n    flavor: 'stairs leading upwards',\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, T_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: 'EMIT:DOWN_STAIRS',\n    },\n    flavor: 'downward leading stairs',\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: GWU.color.from([7, 7, 7]).rand(0, 3, 3, 3),\n    bg: GWU.color.from([40, 40, 40]).rand(10, 10, 0, 5),\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'a very hard wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: GWU.color.from([25, 28, 60]).dance(20, 0, 4, 15),\n    bg: GWU.color.from([10, 15, 41]).dance(20, 5, 5, 5),\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n    flavor: 'some deep water',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: GWU.color.from([5, 8, 10]).dance(10, 0, 4, 15),\n    bg: GWU.color.from([10, 30, 30]).dance(6, 0, 10, 10),\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    flags: 'T_SHALLOW_WATER',\n    // depth: 'LIQUID', // 'SURFACE'?\n    flavor: 'some shallow water',\n});\nTile.install('BRIDGE', {\n    ch: '\\u2630',\n    fg: [80, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n    flavor: 'a bridge',\n});\n"],"names":["Depth","Fl","GWU","flag","fl","Entity","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_WALL_FLAGS","Actor","Item","Tile","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","T_IS_DEEP_LIQUID","T_SHALLOW_WATER","TileMech","Cell","NEEDS_REDRAW","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_SAFE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","Map","Effect","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","Horde","KeyInfo","[object Object]","x","y","disposable","this","lastId","kind","_map","key","machineHome","depth","light","flags","entity","next","id","map","Flags.Entity","L_ALWAYS_PLURAL","setEntityFlag","L_ON_MAP","addToMap","clearEntityFlag","removeFromMap","sprite","isDestroyed","hasEntityFlag","L_DESTROYED","other","constructor","copy","Object","assign","canBeSeen","tag","tags","includes","matches","cell","forbidsCell","avoidsCell","opts","getName","getDescription","getFlavor","verb","getVerb","buffer","bounds","drawSidebar","dest","_observer","drawSprite","default","sidebarFg","EntityKind","config","requireTileFlags","forbidTileFlags","avoidTileFlags","requireTileTags","forbidTileTags","avoidTileTags","name","flavor","description","make","split","t","trim","slice","from","Flags.Tile","color","init","_entity","hasAllTileFlags","hasTileFlag","T_BRIDGE","length","hasAllTileTags","hasAnyTileTag","_opts","mixer","Mixer","getAppearanceAt","wrapText","width","makeOpts","installedActions","installAction","fn","toLowerCase","getAction","Status","_set","_time","_count","_done","_value","changed","clearTime","clearCount","setOff","_update","done","count","Math","max","_addDone","value","range","current","delta","status","cleared","noticed","removeTime","rec","was","doneFn","Stats","_max","_rate","round","get","set","v","amount","allowOver","min","raiseValue","gain","lowerValue","drain","turns","r","elapsed","undefined","type","c","Error","Entity.Entity","super","ai","leader","items","visionDistance","data","_costMap","_goalMap","_mapToMe","actor","Flags.Depth","ACTOR","stats","grid","free","hasActorFlag","Flags.Actor","IS_PLAYER","action","actions","bump","IS_VISIBLE","WAS_VISIBLE","canSee","isAbleToSee","isPlayer","fov","isDirectlyVisible","xy","distanceBetween","forLineBetween","i","j","blocksVision","canSeeOrSense","isAbleToSense","isAnyKindOfVisible","game","startedVisible","player","setActorFlag","console","log","clearActorFlag","becameVisible","interrupt","endTurn","moveSpeed","pct","L_NO_SIDEBAR","L_IN_SIDEBAR","setMapFlag","Flags.Map","MAP_SIDEBAR_CHANGED","floor","_other","_item","item","pickupItem","dropItem","mapChanged","STABLE_COST_MAP","staleMap","alloc","height","update","_v","cellCost","goalMap","path","calculateDistances","costMap","handlers","installHandler","handler","effectTypes","installType","startsWith","endPos","indexOf","tile","substring","effects","Array","isArray","effect","entries","forEach","JSON","stringify","typeName","shift","makeFn","e","push","parts","installedEffects","trigger","bind","install","obj","clone","_a","_b","_c","_d","index","dissipate","priority","groundTile","article","tileMech","hasEffect","T_IS_FLAMMABLE","arraysIntersect","every","blocksMove","T_PATHING_BLOCKER","arg","result","fg","toString","options","_e","_f","base","extends","tiles","text","replace","search","Number","parseInt","makeEffect","message","Flags.TileMech","ch","bg","opacity","all","args","NULL","BasicEffect","chance","seen","Flags.Effect","endsWith","parseFloat","loc","ctx","force","rng","random","didSomething","eff","nextAlways","E_NEXT_ALWAYS","makeBasicEffect","makeSpreadEffect","SpreadEffect","grow","decrement","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","spawnMap","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","E_NEXT_EVERYWHERE","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","forRect","lakeX","lakeY","isStairs","first","floodFill","cellIsOk","isStart","hasXY","hasCellFlag","Flags.Cell","EVENT_PROTECTED","blocksEffects","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","ok","eachNeighbor","E_NO_TOUCH_WALLS","hasTile","dir","x2","y2","madeChange","startProb","probDec","fill","DIRS","clearAll","clear","clearDepth","GAS","LIQUID","SURFACE","GROUND","blockingMap","eachActor","a","matchingLocNear","removeActor","addActor","eachItem","removeItem","addItem","makeEmitHandler","emitEffect","events","emit","makeMessageHandler","src","info","msg","messageEffect","aware","addAt","makeActivateMachine","activateMachine","machine","machineId","makeTileHandler","superpriority","blockedByActors","blockedByItems","tileEffect","setTile","makeClearHandler","layers","reduce","out","ALL_LAYERS","clearEffect","_ctx","makeFeatureHandler","featureEffect","feat","Effect.installedEffects","makeNourishEffect","nourishEffect","actorAt","adjust","n","pukeMsg","makeStatEffect","stat","statEffect","values","NEVER_SEEN","TILE.NULL","chokeCount","memory","TILE.tiles","snapshot","makeMixer","TILE.get","hasStableSnapshot","STABLE_SNAPSHOT","hasStableMemory","setCellFlag","hasItem","hasActor","clearCellFlag","needsRedraw","getSnapshot","checkEntities","some","entityFlags","tileFlags","tileMechFlags","hasTag","hasAllTags","hasAnyTag","withEntities","CHANGED","TILE.Tile","highestPriorityTile","cb","find","blocksPathing","TILE.flags","T_BLOCKS_OTHER_LAYERS","hasAllEntityFlags","T_IS_DOOR","L_BLOCKS_EVERYTHING","L_SECRETLY_PASSABLE","T_ANY_LIQUID","blocksLayer","blockedByOtherLayers","highestPriority","currentGround","depthTile","wantGround","glowLightChanged","T_LIST_IN_SIDEBAR","MAP_SIDEBAR_TILES_CHANGED","CAUGHT_FIRE_THIS_TURN","blackOut","tileFlag","tileMechFlag","hasTileMechFlag","event","ev","_activate","itemAt","hasItems","foundIndex","_actor","actors","HAS_FX","fx","fxAt","_fx","quantity","ITEM","isPlural","messageYou","view","field","messageThe","target","messageA","L_FORMAL_NAME","messageVerb","_name","plural","toPluralVerb","toSingularVerb","addHelper","PainMessages","msgs","_msgs","m","add","singular","clamp","_format","painMessages","ais","AICtx","distanceMap","async","typical","isDead","willAttack","damagePct","getPct","morale","chargeChance","retreatChance","lastSawPlayer","clearGoal","start","canAttack","attack","tooFarFrom","canMoveToward","moveToward","tooCloseTo","canMoveAwayFrom","moveAwayFrom","hasGoal","setGoal","moveTowardGoal","scent","nextDir","moveDir","wanderOpt","object","firstOpt","matchingLoc","NO_PATH","step","nextStep","canPass","wander","idle","standStill","center","_game","_target","distanceFromTo","safetyMap","costGrid","FORBIDDEN","eachCell","AVOIDED","rescan","ActorKind","Entity.EntityKind","DEFAULT","DEFAULT_ACTOR","vision","normal","health","AI.make","waterOnly","lavaOnly","swim","fly","list","remove","OBSTRUCTION","OK","makeOptions","makeKind","kinds","randomKind","match","forbidTags","filter","k","bumpActions","getBumpActions","selfName","selfAction","ctx2","flashSprite","duration","animator","Entity.make","addFx","tween","visible","to","repeat","repeatDelay","onUpdate","removeFx","io","loop","addAnimation","hit","fadeInOut","yoyo","onFinish","moveSprite","source","ceil","maxAxisFromTo","speed","isLoc","vals","stepFn","stopBeforeWalls","moveFx","stop","isInShape","shape","cx","cy","allowCenter","sx","abs","sy","dirFromTo","fade","stopAtWalls","line","forLineFromTo","promises","lastIndex","Promise","radius","checkExplosionOpts","FOV","isBlocked","calculate","x1","y1","minX","minY","maxX","maxY","_obj","success","newX","newY","currentCell","newCell","try","FX.hit","canRemoveActor","canAddActor","moveActor","rate","dirIndex","number","pickup","quiet","avoidsItem","itemAction","canAddItem","pain","made","ItemKind","Flags.Item","isDoor","MapLayer","properties","_x","_y","_tile","_dt","TileLayer","GasLayer","volume","startingVolume","spread","d","clearTile","total","highestVolume","startingTile","highestTile","updateCellVolume","ObjectFlags","TileFlags","TileMechFlags","CellFlags","FireLayer","exposeToFire","alwaysIgnite","ignitionChance","bestExtinguishingPriority","explosiveNeighborCount","fireIgnited","explosivePromotion","eachTile","T_EXTINGUISHES_FIRE","Effect.from","fire","TM_EXPLOSIVE_PROMOTE","x0","y0","fireEvent","highlightColor","BasicDrawer","Buffer","offsetX","offsetY","clearMapFlag","MAP_DANCES","drawCell","needSnapshot","getAppearance","putSnapshot","COLORS_DANCE","applyLight","separate","L_VISUALLY_DISTINCT","IS_CURSOR","inverse","IS_HIGHLIGHTED","mix","s","colors","red","ground","surface","liquid","gas","drawInto","cosmetic","hasFx","dances","bake","isVisible","isRevealed","getLight","multiply","isCursor","invert","scale","locations","_animations","EventEmitter","seed","machineCount","drawer","cells","LightSystem","alwaysVisible","callback","onFovChange","FovSystem","initLayers","setPlayer","addLayer","Layer.TileLayer","Layer.FireLayer","Layer.GasLayer","layer","isAt","fireEffects","_addItem","_fireAddItemEffects","_removeItem","_fireRemoveItemEffects","arrayDelete","isKey","hasPlayer","_addActor","_fireAddActorEffects","_removeActor","_fireRemoveActorEffects","_addFx","updated","_removeFx","fmt","dump","hasMapFlag","MAP_NEEDS_REDRAW","markCursor","clearPath","clearCursor","l","boundary","isBoundaryXY","clearTiles","dt","tick","isRunning","fireAll","willFire","EVENT_FIRED_THIS_TURN","promoteChance","w","originX","originY","eachGlowLight","_cb","FovFlags","PLAYER","isDark","storeMemory","clearMemory","makeVisible","updateChokepoints","updateCounts","passMap","passableArcCount","oldX","CLOCK_DIRS","oldY","cellCount","floodFillCount","i2","j2","results","startX","startY","getCount","todo","pop","updateLoopiness","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","tryAgain","fillInnerLoopGrid","up","left","designationSurvives","Snapshot","version","isHallway","arcCount","isPassable","h","updateChokeCounts","layerVersion","lightVersion","cellVersion","snap","srcCell","snapLayer","destCell","destLayer","srcLayer","prefab","charToTile","isStringArray","len","members","horde","frequency","Flags","canSpawn","TRUE","_spawnLeader","_spawnMembers","leaderKind","Actor.get","Actor.make","_pickLeaderLoc","_addLeader","member","kindId","countRange","_spawnMember","_pickMemberLoc","_addMember","Map.isHallway","hordes","forbidFlags","oodChance","HORDE_NEVER_OOD","weights","weighted","installCommand","getCommand","Actor.actions.moveDir","_ev","playerAction","Attributes","baseValues","_base","_bonus","_sustain","attributes","keys","raiseMax","old","_calcValue","loss","lowerMax","bonus","_addBonus","_clearBonus","arr","findIndex","o","splice","allAdjustments","adj","_applyAdjustment","sustain","fixed","restore","Skill","has","_bool","level","_int","disadvantage","advantage","b","_parent","succeed","fail","_has","_level","_fixed","Skills","_skills","lastIndexOf","Scent","_player","_data","highest","v1","hasLiquid","highestLoc","Player","mapToPlayer","mapToMe","getClosestValidLocation","getPath","PlayerKind","Actor.ActorKind","Attributes.Attributes","skills","Skills.Skills","attr","defaults","Actor.kinds","Viewport","_subject","Bounds","lockX","lock","lockY","contains","subject","halfWidth","halfHeight","right","top","bottom","edgeX","edgeY","thirdW","thirdH","blackOutRect","updateOffset","mapX","mapY","draw","showPath","toInnerX","toInnerY","pathTo","highlightPath","Messages","needsDraw","cache","MessageCache","archive","showArchive","confirmAll","isOnTop","fillRect","confirmed","drawText","then","MessageArchive","widget","Widget","tabStop","mode","_timeout","totalCount","shown","setTimeout","_forward","finish","click","clearTimeout","_reverse","fadePercent","dbuf","endY","dy","_used","_confirmed","fgColor","WidgetLayer","ui","run","Flavor","promptFg","overflow","isPrompt","buf","isRemembered","isMapped","isMagicMapped","intro","theItem","standsInTile","T_STAND_IN_TILE","needObjectArticle","Tile.NULL","surfaceTile","liquidTile","apply","EntryBase","dist","sidebarY","_buffer","_bounds","ActorEntry","ItemEntry","CellEntry","Sidebar","cellCache","lastX","lastY","lastMap","highlight","entry","_highlightRow","clearHighlight","last","showCursor","_getPriority","_makeActorEntry","_makeItemEntry","_makeCellEntry","_addActorEntry","_addItemEntry","_addCellEntry","sort","updateFor","updateAt","_updateCellCache","_updateEntryCache","drawBounds","currentEntry","usedLines","_isDim","mouse","running","keymap","UI","makeMap","makePlayer","_makeMap","_makePlayer","_startMap","startMap","NOOP","messages","size","viewport","_initMenu","sidebar","_initSidebar","_initMessages","_initFlavor","_initViewport","sideOpts","viewInit","Sidebar.Sidebar","messOpts","Message.Messages","flavOpts","viewOpts","Flavor.Flavor","Viewport.Viewport","Layer","scheduler","Scheduler","call","startNewMap","animate","runTurn","_location","addActorNear","render","nextTime","playerTurn","act","_tweens","timer","setInterval","makeTickEvent","enqueue","nextTick","clearInterval","nextEvent","KEYPRESS","handlerFor","Command.getCommand","TICK","MOUSEMOVE","mousemove","getFlavorText","showText","highlightAt","CLICK","nextGoalStep","Actor.getAction","rand","enter","open","close","dance"],"mappings":"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"}