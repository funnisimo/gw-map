{"version":3,"file":"gw-utils.min.js","sources":["../js/random.js","../js/utils/chain.js","../js/utils/index.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["import * as Utils from './utils';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baag√∏e.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    configure(config = {}) {\n        if (config.make) {\n            RANDOM_CONFIG.make = config.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function findInChain(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport class Chain {\n    constructor(sort, onchange) {\n        this.data = null;\n        this.sort = sort || (() => -1);\n        this.onchange = onchange || (() => { });\n    }\n    copy(other) {\n        this.data = other.data;\n        this.sort = other.sort;\n        this.onchange = other.onchange;\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n    add(obj) {\n        if (!this.data || this.sort(this.data, obj) < 0) {\n            obj.next = this.data;\n            this.data = obj;\n            return true;\n        }\n        let prev = this.data;\n        let current = this.data.next;\n        while (current && this.sort(current, obj) < 0) {\n            prev = current;\n            current = current.next;\n        }\n        obj.next = current;\n        prev.next = obj;\n        this.onchange();\n        return true;\n    }\n    has(obj) {\n        return this.find((o) => o === obj) !== null;\n    }\n    remove(obj) {\n        if (!removeFromChain(this, 'data', obj)) {\n            return false;\n        }\n        this.onchange();\n        return true;\n    }\n    find(cb) {\n        return findInChain(this.data, cb);\n    }\n    forEach(cb) {\n        return eachChain(this.data, cb);\n    }\n    reduce(cb, out) {\n        let current = this.data;\n        if (!current)\n            return out;\n        if (out === undefined) {\n            out = current;\n            current = current.next;\n        }\n        while (current) {\n            cb(out, current);\n            current = current.next;\n        }\n        return out;\n    }\n    some(cb) {\n        let current = this.data;\n        while (current) {\n            if (cb(current))\n                return true;\n            current = current.next;\n        }\n        return false;\n    }\n    every(cb) {\n        let current = this.data;\n        while (current) {\n            if (!cb(current))\n                return false;\n            current = current.next;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=chain.js.map","/**\n * GW.utils\n * @module utils\n */\nimport { Random, Alea } from '../random';\nexport { Random, Alea };\nexport * from './chain';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED | FovFlags.VISIBLE);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.onCellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©itemMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©backgroundMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as Utils from './utils';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Œ©',\n    colorEnd: '‚àÜ',\n    field: '¬ß',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)}, opacity: ${this.opacity} }`;\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        if (needs) {\n            this.NEEDS_UPDATE = true;\n        }\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(_x, _y, msg) {\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        this.commitCombatMessage();\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this.addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(_x, _y, msg) {\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n}\n//# sourceMappingURL=message.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        Utils.eachChain(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["Alea","seed","Math","abs","Date","now","FRAC","_s0","_s1","_s2","_c","t","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","i","maxFreq","randIndex","length","range","console","warn","Random","[object Object]","this","_fn","config","random","cosmetic","val","value","max","Number","MAX_SAFE_INTEGER","floor","number","lo","hi","diff","count","sides","addend","total","mult","weights","Array","isArray","entries","Object","map","_","weight","lotteryDrawObject","list","values","obj","item","keys","fromIndex","toIndex","r","buf","arguments","n","shuffle","percent","outOf","clumps","numSides","width","height","matchFn","j","index","locationCount","Utils.forRect","x","y","k","candidateLocs","loc","eachChain","fn","next","addToChain","name","entry","removeFromChain","root","prev","current","findInChain","cb","DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","src","Bounds","w","h","left","right","top","bottom","args","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","updated","copy","clear","nullify","clone","slice","setDefaults","def","custom","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","first","find","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","forCircle","radius","forRect","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","a","b","pct","dx","dy","async","maxIndex","d","x0","y0","findIndex","result","push","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","trim","includes","field","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","line","iterable","chain","sort","onchange","other","o","out","Range","lower","upper","rng","_rng","clumped","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","flagObj","inverse","join","u","startsWith","substring","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","col","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingLoc","matchingLocNear","Utils.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","FovFlags","id","clearEvents","preventDefault","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","onCellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","Text.length","_x","_y","_addMessage","_a","commitCombatMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","didSomething","UTILS.DIRS","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor"],"mappings":"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"}