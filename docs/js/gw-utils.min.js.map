{"version":3,"file":"gw-utils.min.js","sources":["../js/xy.js","../js/random.js","../js/utils/index.js","../js/list.js","../js/object.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    configure(config = {}) {\n        if (config.make) {\n            RANDOM_CONFIG.make = config.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","/**\n * GW.utils\n * @module utils\n */\nimport { Random, Alea } from '../random';\nexport { Random, Alea };\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        obj.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) < 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (!current)\n        return out;\n    if (out === undefined) {\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        done[x][y] = 1;\n        let newX, newY, numberOfCells = 1;\n        // Iterate through the four cardinal neighbors.\n        for (let dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            // If the neighbor is an unmarked region cell,\n            numberOfCells += this._floodFill(newX, newY, matchFn, fillFn, done); // then recurse.\n        }\n        NumGrid.free(done);\n        return numberOfCells;\n    }\n    // Tests cell, then marks and recursively iterates through the neighbors\n    _floodFill(x, y, matchFn, fillFn, done) {\n        if (!this.hasXY(x, y) || done[x][y])\n            return 0;\n        if (!matchFn(this[x][y], x, y, this))\n            return 0;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        done[x][y] = 1;\n        let newX, newY, numberOfCells = 1;\n        // Iterate through the four cardinal neighbors.\n        for (let dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            // If the neighbor is an unmarked region cell,\n            numberOfCells += this._floodFill(newX, newY, matchFn, fillFn, done); // then recurse.\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        if (keymap.start && typeof keymap.start === 'function') {\n            // @ts-ignore\n            await keymap.start();\n        }\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            // @ts-ignore\n            await keymap.stop();\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED | FovFlags.VISIBLE);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.onCellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩitemMessageColorΩ§item§∆.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩbackgroundMessageColorΩ§item§∆.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        if (needs) {\n            this.NEEDS_UPDATE = true;\n        }\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(_x, _y, msg) {\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        this.commitCombatMessage();\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this.addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(_x, _y, msg) {\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","args","i","j","eachNeighbor","fn","only4dirs","max","dir","distanceBetween","x1","y1","x2","y2","Math","abs","min","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","length","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","dest","a","b","pct","clamp","dx","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","t","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","console","warn","Random","_fn","config","random","cosmetic","val","value","Number","MAX_SAFE_INTEGER","number","lo","hi","count","sides","addend","total","mult","weights","Array","isArray","entries","Object","map","_","weight","lotteryDrawObject","list","values","obj","item","keys","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","index","locationCount","XY.forRect","k","candidateLocs","loc","NOOP","TRUE","v","ERROR","message","Error","WARN","first","find","undefined","some","av","includes","arr","reduce","iterable","forEach","root","next","name","entry","remove","prev","current","cb","sort","out","assignField","key","updated","copy","clear","nullify","clone","slice","setDefaults","def","custom","origKey","defValue","parts","split","omit","trim","field","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Range","lower","upper","rng","_rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","flagObj","inverse","join","u","startsWith","substring","XY.DIRS","makeArray","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","numberOfCells","_floodFill","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","start","nextEvent","draw","stop","clearInterval","setTimeout","nextKeyOrClick","pause","clearEvents","preventDefault","loop","FovFlags","id","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","onCellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","rgb","maxRgb","sin","PI","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","Text.length","_x","_y","_addMessage","_a","commitCombatMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor"],"mappings":"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"}