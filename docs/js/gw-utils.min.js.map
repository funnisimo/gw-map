{"version":3,"file":"gw-utils.min.js","sources":["../js/random.js","../js/utils/index.js","../js/list.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["import * as Utils from './utils';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baag√∏e.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    configure(config = {}) {\n        if (config.make) {\n            RANDOM_CONFIG.make = config.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","/**\n * GW.utils\n * @module utils\n */\nimport { Random, Alea } from '../random';\nexport { Random, Alea };\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        obj.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) < 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (!current)\n        return out;\n    if (out === undefined) {\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        done[x][y] = 1;\n        let newX, newY, numberOfCells = 1;\n        // Iterate through the four cardinal neighbors.\n        for (let dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            // If the neighbor is an unmarked region cell,\n            numberOfCells += this._floodFill(newX, newY, matchFn, fillFn, done); // then recurse.\n        }\n        NumGrid.free(done);\n        return numberOfCells;\n    }\n    // Tests cell, then marks and recursively iterates through the neighbors\n    _floodFill(x, y, matchFn, fillFn, done) {\n        if (!this.hasXY(x, y) || done[x][y])\n            return 0;\n        if (!matchFn(this[x][y], x, y, this))\n            return 0;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        done[x][y] = 1;\n        let newX, newY, numberOfCells = 1;\n        // Iterate through the four cardinal neighbors.\n        for (let dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            // If the neighbor is an unmarked region cell,\n            numberOfCells += this._floodFill(newX, newY, matchFn, fillFn, done); // then recurse.\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        if (keymap.start && typeof keymap.start === 'function') {\n            // @ts-ignore\n            await keymap.start();\n        }\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            // @ts-ignore\n            await keymap.stop();\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED | FovFlags.VISIBLE);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.onCellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©itemMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©backgroundMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Œ©',\n    colorEnd: '‚àÜ',\n    field: '¬ß',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        if (needs) {\n            this.NEEDS_UPDATE = true;\n        }\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(_x, _y, msg) {\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        this.commitCombatMessage();\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this.addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(_x, _y, msg) {\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n}\n//# sourceMappingURL=message.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["Alea","seed","Math","abs","Date","now","FRAC","_s0","_s1","_s2","_c","t","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","i","maxFreq","randIndex","length","range","console","warn","Random","[object Object]","this","_fn","config","random","cosmetic","val","value","max","Number","MAX_SAFE_INTEGER","floor","number","lo","hi","diff","count","sides","addend","total","mult","weights","Array","isArray","entries","Object","map","_","weight","lotteryDrawObject","list","values","obj","item","keys","fromIndex","toIndex","r","buf","arguments","n","shuffle","percent","outOf","clumps","numSides","width","height","matchFn","j","index","locationCount","Utils.forRect","x","y","k","candidateLocs","loc","DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","src","Bounds","w","h","left","right","top","bottom","args","eachNeighbor","fn","only4dirs","dir","distanceBetween","x1","y1","x2","y2","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","current","updated","copy","clear","nullify","clone","slice","setDefaults","def","custom","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","first","find","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","forCircle","radius","forRect","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","a","b","pct","dx","dy","async","maxIndex","d","x0","y0","findIndex","result","push","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","trim","includes","field","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","line","iterable","root","next","name","entry","remove","prev","cb","sort","out","Range","lower","upper","rng","_rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","flagObj","inverse","join","u","startsWith","substring","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","col","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingLoc","matchingLocNear","Utils.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","fillFn","done","numberOfCells","_floodFill","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","start","nextEvent","draw","stop","clearInterval","setTimeout","nextKeyOrClick","pause","loop","FovFlags","id","clearEvents","preventDefault","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","onCellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","Text.length","_x","_y","_addMessage","_a","commitCombatMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","UTILS.DIRS","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor"],"mappings":"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,KAAKyhB,KAAK0B,KAAK/f,EAAGC,EAAGrD,KAAKgiB,UAAWhiB,KAAKiiB,YAC1CjiB,KAAKyhB,KAAK2B,OACVpjB,KAAKyhB,KAAKkB,UAAY,QACtB3iB,KAAKyhB,KAAKmB,SAASxf,EAAGC,EAAGrD,KAAKgiB,UAAWhiB,KAAKiiB,YAC9CjiB,KAAKyhB,KAAKkB,UAAY,QACJ,mBAAPD,EACPA,EAAG1iB,KAAKyhB,KAAMre,EAAGC,EAAGrD,KAAKgiB,UAAWhiB,KAAKiiB,kBAGnBnb,IAAlB9G,KAAKohB,KAAKsB,KACV1iB,KAAKohB,KAAKsB,GAAMngB,GACpBvC,KAAKyhB,KAAK4B,SAASX,EAAIvG,EAAIC,IAE/Bpc,KAAKyhB,KAAK6B,UACVtjB,KAAKmhB,aAAc,EAEvBphB,YAAYqiB,GAAY,GACpB,IAAK,IAAI7iB,EAAI,GAAIA,EAAI,MAAOA,EACxBS,KAAKkW,KAAK3W,EAAGyO,OAAOC,aAAa1O,IAErC,CACI,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACFiH,SAAQ,CAACkc,EAAInjB,KACXS,KAAKkW,KAAK3W,EAAGmjB,MAEZN,GAsBD,CACI,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IA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"}