{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/xy.js","../js/list.js","../js/object.js","../js/rng.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/canvas/shaders.js","../js/canvas/canvasGL.js","../js/canvas/make.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function arrayDelete(a, b) {\n    const index = a.indexOf(b);\n    if (index < 0)\n        return false;\n    a.splice(index, 1);\n    return true;\n}\nexport function arrayFindRight(a, fn) {\n    for (let i = a.length - 1; i >= 0; --i) {\n        const e = a[i];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function arrayNext(a, current, fn, wrap = true, forward = true) {\n    const len = a.length;\n    if (len <= 1)\n        return undefined;\n    const startIndex = a.indexOf(current);\n    if (startIndex < 0)\n        return undefined;\n    const dx = forward ? 1 : -1;\n    let startI = wrap ? (len + startIndex + dx) % len : startIndex + dx;\n    let endI = wrap ? startIndex : forward ? len : -1;\n    for (let index = startI; index !== endI; index = wrap ? (len + index + dx) % len : index + dx) {\n        const e = a[index];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function arrayPrev(a, current, fn, wrap = true) {\n    return arrayNext(a, current, fn, wrap, false);\n}\nexport function nextIndex(index, length, wrap = true) {\n    ++index;\n    if (index >= length) {\n        if (wrap)\n            return index % length;\n        return -1;\n    }\n    return index;\n}\nexport function prevIndex(index, length, wrap = true) {\n    if (index < 0)\n        return length - 1; // start in back\n    --index;\n    if (index < 0) {\n        if (wrap)\n            return length - 1;\n        return -1;\n    }\n    return index;\n}\n//# sourceMappingURL=utils.js.map","import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function contains(size, x, y) {\n    return x >= 0 && y >= 0 && x < size.width && y < size.height;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    set left(v) {\n        this.x = v;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    set right(v) {\n        this.x = v - this.width + 1;\n    }\n    get top() {\n        return this.y;\n    }\n    set top(v) {\n        this.y = v;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    set bottom(v) {\n        this.y = v - this.height + 1;\n    }\n    clone() {\n        return new Bounds(this.x, this.y, this.width, this.height);\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n    toString() {\n        return `[${this.x},${this.y} -> ${this.right},${this.bottom}]`;\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function straightDistanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    return x + y;\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return true;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc) === false) {\n            return false;\n        }\n        if (currentLoc[0] === toX && currentLoc[1] === toY)\n            return true;\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return false;\n        line.push([x, y]);\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function at(root, index) {\n    while (root && index) {\n        root = root.next;\n        --index;\n    }\n    return root;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        obj.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) < 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (!current)\n        return out;\n    if (out === undefined) {\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nexport function configure(config = {}) {\n    if (config.make) {\n        RANDOM_CONFIG.make = config.make;\n        random.seed();\n        cosmetic.seed();\n    }\n}\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    if (index < 0)\n        return -1;\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor(seed) {\n        this._fn = RANDOM_CONFIG.make(seed);\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\nexport function make(seed) {\n    return new Random(seed);\n}\n//# sourceMappingURL=rng.js.map","import { random } from './rng';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1) {\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value(rng) {\n        rng = rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config) {\n    if (!config)\n        return new Range(0, 0, 0);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0);\n    if (typeof config == 'number')\n        return new Range(config, config, 1);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2]);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config) {\n    const range = make(config);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    const parts = v.split(/[,|]/);\n                    if (parts.length > 1) {\n                        result = from(obj, result, parts);\n                    }\n                    else if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        const n = Number.parseInt(v);\n                        if (n >= 0) {\n                            result |= n;\n                            return;\n                        }\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport function make(obj) {\n    const out = {};\n    Object.entries(obj).forEach(([key, value]) => {\n        out[key] = from(out, value);\n    });\n    return out;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './rng';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        const grid = this;\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i, grid));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    /**\n     * Finds the first matching value/result and returns that location as an xy.Loc\n     * @param v - The fill value or a function that returns the fill value.\n     * @returns xy.Loc | null - The location of the first cell matching the criteria or null if not found.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    find(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const v = this[x][y];\n                if (fn(v, x, y, this))\n                    return [x, y];\n            }\n        }\n        return null;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y, this);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        let newX, newY;\n        const todo = [[x, y]];\n        const free = [];\n        let count = 1;\n        while (todo.length) {\n            const item = todo.pop();\n            [x, y] = item;\n            free.push(item);\n            if (!this.hasXY(x, y) || done[x][y])\n                continue;\n            if (!matchFn(this[x][y], x, y, this))\n                continue;\n            this[x][y] = fillFn(this[x][y], x, y, this);\n            done[x][y] = 1;\n            ++count;\n            // Iterate through the four cardinal neighbors.\n            for (let dir = 0; dir < 4; dir++) {\n                newX = x + DIRS[dir][0];\n                newY = y + DIRS[dir][1];\n                // If the neighbor is an unmarked region cell,\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n        NumGrid.free(done);\n        return count;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nlet IOMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nexport const STOP = 'stop';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    IOMAP = keymap;\n}\nexport function handlerFor(ev, km) {\n    let c;\n    if (ev.dir) {\n        c = km.dir || km.keypress;\n    }\n    else if (ev.type === KEYPRESS) {\n        c = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        c = km[ev.type];\n    }\n    if (!c) {\n        c = km.dispatch;\n    }\n    return c || null;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    km = km || IOMAP;\n    if (ev.type === STOP) {\n        recycleEvent(ev);\n        return true; // Should stop loops, etc...\n    }\n    const handler = handlerFor(ev, km);\n    if (handler) {\n        // if (typeof c === 'function') {\n        result = await handler.call(km, ev);\n        // } else if (commands[c]) {\n        //     result = await commands[c](ev);\n        // } else {\n        //     Utils.WARN('No command found: ' + c);\n        // }\n    }\n    // TODO - what is this here for?\n    // if ('next' in km && km.next === false) {\n    //     result = false;\n    // }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// STOP\nexport function makeStopEvent() {\n    const ev = makeTickEvent(0);\n    ev.type = STOP;\n    return ev;\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = '';\n    ev.code = '';\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = '';\n    ev.code = '';\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = true;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n        this.interval = 0;\n        this.intervalCount = 0;\n        this.ended = false;\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    _startTicks() {\n        ++this.intervalCount;\n        if (this.interval)\n            return;\n        this.interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n    }\n    _stopTicks() {\n        if (!this.intervalCount)\n            return; // too many calls to stop\n        --this.intervalCount;\n        if (this.intervalCount)\n            return; // still have a loop running\n        clearInterval(this.interval);\n        this.interval = 0;\n    }\n    pushEvent(ev) {\n        if (this.ended)\n            return;\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0 || this.ended)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            throw new Error('OVERWRITE HANDLER -- Check for a missing await around Loop function calls.');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        if (this.ended)\n            return;\n        this.running = true;\n        this.clearEvents(); // ??? Should we do this?\n        this._startTicks();\n        if (keymap.start && typeof keymap.start === 'function') {\n            await keymap.start();\n        }\n        let running = true;\n        while (this.running && running) {\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                keymap.draw();\n            }\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                running = false;\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            await keymap.stop();\n        }\n        this._stopTicks();\n    }\n    stop() {\n        this.clearEvents();\n        this.running = false;\n        this.pushEvent(makeStopEvent());\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = 0;\n        }\n        this.CURRENT_HANDLER = null;\n    }\n    end() {\n        this.stop();\n        this.ended = true;\n    }\n    start() {\n        this.ended = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"ACTOR_DETECTED\"] = Fl(8)] = \"ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ACTOR_DETECTED\"] = Fl(9)] = \"WAS_ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"IS_CURSOR\"] = Fl(15)] = \"IS_CURSOR\";\n    FovFlags[FovFlags[\"IS_HIGHLIGHTED\"] = Fl(16)] = \"IS_HIGHLIGHTED\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_DETECTED\"] = FovFlags.WAS_ITEM_DETECTED | FovFlags.WAS_ACTOR_DETECTED] = \"WAS_DETECTED\";\n    FovFlags[FovFlags[\"IS_DETECTED\"] = FovFlags.ITEM_DETECTED | FovFlags.ACTOR_DETECTED] = \"IS_DETECTED\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER | FovFlags.VISIBLE |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.ACTOR_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GWU from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nimport { NOOP } from '../utils';\nimport * as XY from '../xy';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        // needsUpdate: boolean;\n        this.changed = true;\n        this._callback = NOOP;\n        this.follow = null;\n        this.site = site;\n        let flag = 0;\n        const visible = opts.visible || opts.alwaysVisible;\n        if (opts.revealed || (visible && opts.revealed !== false))\n            flag |= FovFlags.REVEALED;\n        if (visible)\n            flag |= FovFlags.VISIBLE;\n        this.flags = Grid.make(site.width, site.height, flag);\n        // this.needsUpdate = true;\n        if (opts.callback) {\n            this.callback = opts.callback;\n        }\n        this.fov = new FOV.FOV({\n            isBlocked: (x, y) => {\n                return this.site.blocksVision(x, y);\n            },\n            hasXY: (x, y) => {\n                return (x >= 0 &&\n                    y >= 0 &&\n                    x < this.site.width &&\n                    y < this.site.height);\n            },\n        });\n        if (opts.alwaysVisible) {\n            this.makeAlwaysVisible();\n        }\n        if (opts.visible || opts.alwaysVisible) {\n            XY.forRect(site.width, site.height, (x, y) => this._callback(x, y, true));\n        }\n    }\n    get callback() {\n        return this._callback;\n    }\n    set callback(v) {\n        if (!v) {\n            this._callback = NOOP;\n        }\n        else if (typeof v === 'function') {\n            this._callback = v;\n        }\n        else {\n            this._callback = v.onFovChange.bind(v);\n        }\n    }\n    getFlag(x, y) {\n        return this.flags[x][y];\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isClairvoyantVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.CLAIRVOYANT_VISIBLE);\n    }\n    isTelepathicVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.TELEPATHIC_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    fovChanged(x, y) {\n        const flags = this.flags.get(x, y) || 0;\n        const isVisible = !!(flags & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flags & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        return isVisible !== wasVisible;\n    }\n    wasAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |=\n            FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealAll(makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags.update((v) => v | flag);\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealCell(x, y, makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags[x][y] |= flag;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED |\n            FovFlags.REVEALED |\n            FovFlags.ALWAYS_VISIBLE);\n        this.flags[x][y] = this.demoteCellVisibility(this.flags[x][y]); // clears visible, etc...\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    reset() {\n        this.flags.fill(0);\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    // get changed(): boolean {\n    //     return this._changed;\n    // }\n    // set changed(v: boolean) {\n    //     this._changed = v;\n    //     this.needsUpdate = this.needsUpdate || v;\n    // }\n    // CURSOR\n    setCursor(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        this.flags[x][y] |= FovFlags.IS_CURSOR;\n        this.changed = true;\n    }\n    clearCursor(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_CURSOR;\n        }\n        this.changed = true;\n    }\n    isCursor(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_CURSOR);\n    }\n    // HIGHLIGHT\n    setHighlight(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        this.flags[x][y] |= FovFlags.IS_HIGHLIGHTED;\n        this.changed = true;\n    }\n    clearHighlight(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_HIGHLIGHTED;\n        }\n        this.changed = true;\n    }\n    isHighlight(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_HIGHLIGHTED);\n    }\n    // COPY\n    // copy(other: FovSystem) {\n    //     this.site = other.site;\n    //     this.flags.copy(other.flags);\n    //     this.fov = other.fov;\n    //     this.follow = other.follow;\n    //     this.onFovChange = other.onFovChange;\n    //     // this.needsUpdate = other.needsUpdate;\n    //     // this._changed = other._changed;\n    // }\n    //////////////////////////\n    // UPDATE\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            this.flags[x][y] |= FovFlags.REVEALED;\n            this._callback(x, y, isVisible);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            this._callback(x, y, isVisible);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this._callback(x, y, isClairy);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this._callback(x, y, isClairy);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this._callback(x, y, isTele);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            this._callback(x, y, isTele);\n        }\n        return isTele;\n    }\n    updateActorDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.ACTOR_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_ACTOR_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this._callback(x, y, isMonst);\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this._callback(x, y, isMonst);\n        }\n        return isMonst;\n    }\n    updateItemDetect(flag, x, y) {\n        const isItem = !!(flag & FovFlags.ITEM_DETECTED);\n        const wasItem = !!(flag & FovFlags.WAS_ITEM_DETECTED);\n        if (isItem && wasItem) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isItem && wasItem) {\n            // ceased being detected visible\n            this._callback(x, y, isItem);\n        }\n        else if (!wasItem && isItem) {\n            // became detected visible\n            this._callback(x, y, isItem);\n        }\n        return isItem;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateActorDetect(flag, x, y))\n            return;\n        if (this.updateItemDetect(flag, x, y))\n            return;\n    }\n    updateFor(subject) {\n        return this.update(subject.x, subject.y, subject.visionDistance);\n    }\n    update(cx, cy, cr) {\n        if (cx === undefined) {\n            if (this.follow) {\n                return this.updateFor(this.follow);\n            }\n        }\n        // if (\n        //     // !this.needsUpdate &&\n        //     cx === undefined &&\n        //     !this.site.lightingChanged()\n        // ) {\n        //     return false;\n        // }\n        if (cr === undefined) {\n            cr = this.site.width + this.site.height;\n        }\n        // this.needsUpdate = false;\n        this.changed = true; // we updated something...\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            let flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                flag = FovFlags.VISIBLE;\n            // if (!flag)\n            //     throw new Error('Received invalid viewport type: ' + Flag.toString(FovFlags, type));\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked, eightWays = false) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, eightWays);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {EventFn} fn The listener function.\n     * @param {any} [context=null] The context to invoke the listener with.\n     * @param {boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {EventFn} fn - The function\n     * @param {any} [context] - The context Object.\n     * @param {boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","import { cosmetic } from '../rng';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        if (v < 0)\n            return 'transparent';\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.make(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.make(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg.copy(other.fg || -1);\n        this.bg.copy(other.bg || -1);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\nexport var helpers = {\n    default: (name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    },\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from './config';\nexport function compile(template, opts = {}) {\n    const F = opts.field || Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        if (typeof args === 'string') {\n            args = { value: args };\n        }\n        return sections.map((f) => f(args)).join('');\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        let h = Config.helpers[name];\n        if (h) {\n            return h(name, args);\n        }\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        h = Config.helpers.default;\n        if (h) {\n            return h(name, args);\n        }\n        return '!!!ERROR!!!';\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || '0');\n    return function (args) {\n        let text = '' + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = '' + value;\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = '' + value;\n        }\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith('s')) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith('d')) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import { NOOP } from '../utils';\nimport * as Config from './config';\nexport function eachChar(text, fn, opts = {}) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = '' + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = opts.eachColor || NOOP;\n    let fg = opts.fg || Config.options.defaultFg;\n    let bg = opts.bg || Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = opts.colorStart || Config.options.colorStart;\n    const CE = opts.colorEnd || Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split('|');\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nlet inColor = false;\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    inColor = false;\n    let i = start;\n    while (count > 0 && i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n                inColor = true;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            else {\n                inColor = false;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function truncate(text, width) {\n    const len = length(text);\n    if (len <= width)\n        return text;\n    const index = advanceChars(text, 0, width);\n    if (!inColor)\n        return text.substring(0, index);\n    const CE = Config.options.colorEnd;\n    return text.substring(0, index) + CE;\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return (text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1));\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\nexport function spliceRaw(msg, begin, deleteLength, add = '') {\n    const maxLen = msg.length;\n    if (begin >= maxLen)\n        return msg;\n    const preText = msg.substring(0, begin);\n    if (begin + deleteLength >= maxLen) {\n        return preText;\n    }\n    const postText = msg.substring(begin + deleteLength);\n    return preText + add + postText;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from './compile';\nimport { eachChar } from './each';\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, spliceRaw, truncate, } from './utils';\nimport { wordWrap, splitIntoLines } from './lines';\nimport { addHelper, options } from './config';\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, spliceRaw, truncate, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this.changed = false;\n        this._width = width;\n        this._height = height;\n        this._data = this._makeData();\n    }\n    _makeData() {\n        return new Uint32Array(this.width * this.height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    clone() {\n        const other = new DataBuffer(this._width, this._height);\n        other.copy(this);\n        return other;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n        this.changed = true;\n    }\n    _index(x, y) {\n        return y * this.width + x;\n    }\n    get(x, y) {\n        let index = this._index(x, y);\n        return this._data[index] || 0;\n    }\n    info(x, y) {\n        const style = this.get(x, y);\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    set(x, y, style) {\n        let index = this._index(x, y);\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            return true;\n        }\n        return false;\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        const current = this.get(x, y);\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this.set(x, y, style);\n        if (style !== current)\n            this.changed = true;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (arguments.length == 1) {\n            bg = Color.from(glyph).toInt();\n            glyph = 0;\n            fg = 0;\n        }\n        else {\n            if (typeof glyph !== 'number') {\n                if (typeof glyph === 'string') {\n                    glyph = this.toGlyph(glyph);\n                }\n                else {\n                    throw new Error('glyph must be number or char');\n                }\n            }\n            if (typeof fg !== 'number') {\n                fg = Color.from(fg).toInt();\n            }\n            if (typeof bg !== 'number') {\n                bg = Color.from(bg).toInt();\n            }\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        this.changed = true;\n        return this;\n    }\n    copy(other) {\n        this._width = other._width;\n        this._height = other._height;\n        this._data.set(other._data);\n        this.changed = true;\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1, maxWidth = 0, align = 'left') {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        maxWidth = maxWidth || this.width;\n        if (align == 'right') {\n            const len = Text.length(text);\n            x += maxWidth - len;\n        }\n        else if (align == 'center') {\n            const len = Text.length(text);\n            x += Math.floor((maxWidth - len) / 2);\n        }\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width || i >= maxWidth)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, { fg, bg });\n        return 1; // used 1 line\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let lineCount = 0;\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y + lineCount, 0, 0x000, bg0);\n                }\n                ++lineCount;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y + lineCount, ch, fg0, bg0);\n        }, { fg, bg });\n        while (xi < x + width) {\n            this.draw(xi++, y + lineCount, 0, 0x000, bg);\n        }\n        return lineCount + 1;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, bg, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.info(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent, x = 0, y = 0, width = 0, height = 0) {\n        color = Color.from(color);\n        const mixer = new Mixer();\n        if (x && !width)\n            width = 1;\n        if (y && !height)\n            height = 1;\n        const endX = width ? width + x : this.width;\n        const endY = height ? height + y : this.height;\n        for (let i = x; i < endX; ++i) {\n            for (let j = y; j < endY; ++j) {\n                const data = this.info(i, j);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(i, j, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.info(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._target; }\n    clone() {\n        const other = new (this.constructor)(this._target);\n        other.copy(this);\n        return other;\n    }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this);\n        return this;\n    }\n}\n//# sourceMappingURL=buffer.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        // protected _data!: Uint32Array;\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = this._createBuffer();\n    }\n    _createBuffer() {\n        return new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    copy(data) {\n        if (data.width !== this.width || data.height !== this.height)\n            throw new Error('Buffer is not same size as canvas!');\n        if (!data.changed && !this.buffer.changed)\n            return false;\n        data.changed = false;\n        this.buffer.copy(data);\n        this._requestRender();\n        return true;\n    }\n    copyTo(data) {\n        if (!this.buffer)\n            return; // startup/constructor\n        data.copy(this.buffer);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        // this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    draw(data) {\n        if (!data.changed)\n            return false;\n        data.changed = false;\n        let changed = false;\n        const raw = this.buffer._data;\n        for (let i = 0; i < raw.length; ++i) {\n            if (raw[i] !== data._data[i]) {\n                raw[i] = data._data[i];\n                this._changed[i] = 1;\n                changed = true;\n            }\n        }\n        if (!changed)\n            return false;\n        this.buffer.changed = true;\n        this._requestRender();\n        return true;\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n        this.buffer.changed = false;\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this.buffer._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n//# sourceMappingURL=canvas.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","import * as shaders from './shaders';\nimport * as Buffer from './buffer';\nimport * as Canvas from './canvas';\nconst VERTICES_PER_TILE = 6;\nexport class BufferGL extends Buffer.Buffer {\n    constructor(canvas) {\n        super(canvas);\n    }\n    _makeData() {\n        return new Uint32Array(this.width * this.height * VERTICES_PER_TILE);\n    }\n    _index(x, y) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        return index;\n    }\n    set(x, y, style) {\n        let index = this._index(x, y);\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this.changed = true;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        if (this.height !== other.height || this.width !== other.width)\n            throw new Error('Buffers must be same size!');\n        if (this._data.length === other._data.length) {\n            this._data.set(other._data);\n        }\n        else {\n            for (let x = 0; x < this.width; ++x) {\n                for (let y = 0; y < this.width; ++y) {\n                    this.set(x, y, other.get(x, y));\n                }\n            }\n        }\n        this.changed = true;\n        return this;\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class CanvasGL extends Canvas.BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createBuffer() {\n        return new BufferGL(this);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new Canvas.NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        // const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        // this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    draw(data) {\n        if (!data.changed)\n            return false;\n        // data._data.forEach((style, i) => {\n        //     const index = i * VERTICES_PER_TILE;\n        //     this.buffer._data[index + 2] = style;\n        //     this.buffer._data[index + 5] = style;\n        // });\n        this.buffer.copy(data);\n        this._requestRender();\n        data.changed = false;\n        return true;\n    }\n    // copyTo(data: Buffer.DataBuffer) {\n    //     if (!this.buffer) return; // startup\n    //     data.copy(this.buffer);\n    //     data.changed = false;\n    //     // const n = this.width * this.height;\n    //     // for (let i = 0; i < n; ++i) {\n    //     //     const index = i * VERTICES_PER_TILE;\n    //     //     data._data[i] = this._data[index + 2];\n    //     // }\n    // }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this.buffer._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n        this.buffer.changed = false;\n    }\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvasGL.js.map","import { Glyphs } from './glyphs';\nimport { DataBuffer } from './buffer';\nimport { Canvas2D, NotSupportedError, } from './canvas';\nimport { CanvasGL } from './canvasGL';\nimport * as IO from '../io';\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new CanvasGL(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\nexport function makeBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\n//# sourceMappingURL=make.js.map","import * as Color from '../color';\nimport { clamp } from '../utils';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nimport { TRUE } from './utils';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport function get(msgOrId) {\n    return templates[msgOrId] || null;\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.matchFn = opts.match || TRUE;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        this.NEEDS_UPDATE = needs;\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    _addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this.commitCombatMessage();\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this._addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './rng';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rng: random,\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = this.options.rng.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, radius = 1, fadeTo = 0, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color); /* color */\n        this.radius = Range.make(radius);\n        this.fadeTo = fadeTo;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(site, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!site)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(site.width, site.height, 0);\n        site.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            site.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold = 20) {\n    return intensity(light) <= threshold;\n}\nexport function isShadowLight(light, threshold = 40) {\n    return intensity(light) <= threshold;\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    source.id = id;\n    return source;\n}\nexport function installAll(config) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this.changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    copy(other) {\n        this.setAmbient(other.ambient);\n        this.glowLightChanged = true;\n        this.dynamicLightChanged = true;\n        this.changed = true;\n        this.staticLights = null;\n        List.forEach(other.staticLights, (info) => this.addStatic(info.x, info.y, info.light));\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        else if (!Array.isArray(light)) {\n            light = Color.from(light);\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get needsUpdate() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    setLight(x, y, light) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] = light[i];\n        }\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this.changed = false;\n        if (!force && !this.needsUpdate)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this.changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const site = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && site.hasActor(x, y))\n                    return false;\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return site.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["NOOP","TRUE","clamp","v","min","max","ERROR","message","Error","first","args","find","undefined","arrayNext","a","current","fn","wrap","forward","len","length","startIndex","indexOf","dx","endI","index","e","DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","i","j","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","size","dest","b","pct","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","forEach","root","next","obj","name","entry","remove","prev","count","cb","sort","out","assignField","key","updated","copy","clear","nullify","clone","Array","isArray","slice","setDefaults","def","custom","Object","keys","origKey","defValue","parts","split","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","console","warn","Random","_fn","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","item","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","XY.forRect","k","candidateLocs","loc","random","cosmetic","config","Range","lower","upper","rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","reduce","join","XY.DIRS","makeArray","fill","arr","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","grid","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","some","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","pop","_resize","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","todo","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","IOMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","STOP","CONTROL_CODES","handlerFor","ev","km","keypress","type","code","dispatch","dispatchEvent","recycleEvent","handler","call","makeStopEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","interval","intervalCount","ended","setInterval","pushEvent","clearInterval","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","clearEvents","_startTicks","start","draw","nextEvent","stop","_stopTicks","setTimeout","nextKeyOrClick","pause","preventDefault","loop","FovFlags","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","WAS_ITEM_DETECTED","WAS_ACTOR_DETECTED","ITEM_DETECTED","ACTOR_DETECTED","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","changed","_callback","follow","flag","visible","alwaysVisible","revealed","REVEALED","flags","Grid.make","callback","fov","FOV.FOV","blocksVision","makeAlwaysVisible","onFovChange","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","WAS_ANY_KIND_OF_VISIBLE","ALWAYS_VISIBLE","makeVisibleToo","demoteCellVisibility","keep","IS_CURSOR","IS_HIGHLIGHTED","WAS_IN_FOV","isVisible","wasVisible","isClairy","wasClairy","isTele","wasTele","isMonst","wasMonst","isItem","wasItem","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateActorDetect","updateItemDetect","subject","visionDistance","cx","cy","cr","updateFor","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","_changed","blackOut","keepPct","clearDancing","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","rgb","maxRgb","sin","PI","Mixer","ch","Utils.first","fg","Color.make","bg","equals","Color.from","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","eachColor","ctx","CS","CE","newColors","inColor","advanceChars","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","msg","begin","deleteLength","maxLen","preText","DataBuffer","_data","_makeData","Uint32Array","orig","_index","style","glyph","toGlyph","sprite","maxWidth","align","Text.length","Text.eachChar","Text.wordWrap","lineCount","xi","fillRect","strength","mixer","drawSprite","endX","endY","header","Buffer","canvas","_target","copyTo","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","pxWidth","pxHeight","fillStyle","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_createBuffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas2D","Int8Array","raw","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","VS","FS","BufferGL","Buffer.Buffer","CanvasGL","Canvas.BaseCanvas","gl","Canvas.NotSupportedError","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","templates","id","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","msgOrId","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","commitCombatMessage","_addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","_addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","setAmbient","addStatic","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","av"],"mappings":"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"}