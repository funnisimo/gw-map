{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/xy.js","../js/list.js","../js/object.js","../js/rng.js","../js/range.js","../js/flag.js","../js/grid.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/buffer.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/buffer.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/canvas/shaders.js","../js/canvas/canvasGL.js","../js/canvas/make.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js","../js/tween.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function arrayIncludesAll(a, b) {\n    return b.every((av) => a.includes(av));\n}\nexport function arrayDelete(a, b) {\n    const index = a.indexOf(b);\n    if (index < 0)\n        return false;\n    a.splice(index, 1);\n    return true;\n}\nexport function arrayInsert(a, b, beforeFn) {\n    if (!beforeFn) {\n        a.push(b);\n        return;\n    }\n    const index = a.findIndex(beforeFn);\n    if (index < 0) {\n        a.push(b);\n    }\n    else {\n        a.splice(index, 0, b);\n    }\n}\nexport function arrayFindRight(a, fn) {\n    for (let i = a.length - 1; i >= 0; --i) {\n        const e = a[i];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function arrayNext(a, current, fn, wrap = true, forward = true) {\n    const len = a.length;\n    if (len <= 1)\n        return undefined;\n    const startIndex = a.indexOf(current);\n    if (startIndex < 0)\n        return undefined;\n    const dx = forward ? 1 : -1;\n    let startI = wrap ? (len + startIndex + dx) % len : startIndex + dx;\n    let endI = wrap ? startIndex : forward ? len : -1;\n    for (let index = startI; index !== endI; index = wrap ? (len + index + dx) % len : index + dx) {\n        const e = a[index];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function arrayPrev(a, current, fn, wrap = true) {\n    return arrayNext(a, current, fn, wrap, false);\n}\nexport function nextIndex(index, length, wrap = true) {\n    ++index;\n    if (index >= length) {\n        if (wrap)\n            return index % length;\n        return -1;\n    }\n    return index;\n}\nexport function prevIndex(index, length, wrap = true) {\n    if (index < 0)\n        return length - 1; // start in back\n    --index;\n    if (index < 0) {\n        if (wrap)\n            return length - 1;\n        return -1;\n    }\n    return index;\n}\n//# sourceMappingURL=utils.js.map","import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function contains(size, x, y) {\n    return x >= 0 && y >= 0 && x < size.width && y < size.height;\n}\nexport class Bounds {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    set left(v) {\n        this.x = v;\n    }\n    get right() {\n        return this.x + this.width;\n    }\n    set right(v) {\n        this.x = v - this.width;\n    }\n    get top() {\n        return this.y;\n    }\n    set top(v) {\n        this.y = v;\n    }\n    get bottom() {\n        return this.y + this.height;\n    }\n    set bottom(v) {\n        this.y = v - this.height;\n    }\n    clone() {\n        return new Bounds(this.x, this.y, this.width, this.height);\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n    toString() {\n        return `[${this.x},${this.y} -> ${this.right},${this.bottom}]`;\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function straightDistanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    return x + y;\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (Math.sign(a[0]) + Math.sign(b[0]) != 0)\n        return false;\n    if (Math.sign(a[1]) + Math.sign(b[1]) != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return (Math.sign(a[0]) == Math.sign(b[0]) && Math.sign(a[1]) == Math.sign(b[1]));\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return true;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc) === false) {\n            return false;\n        }\n        if (currentLoc[0] === toX && currentLoc[1] === toY)\n            return true;\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return false;\n        line.push([x, y]);\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function at(root, index) {\n    while (root && index) {\n        root = root.next;\n        --index;\n    }\n    return root;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        entry.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) > 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (out === undefined) {\n        if (!current)\n            throw new TypeError('Empty list reduce without initial value not allowed.');\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nexport function configure(config = {}) {\n    if (config.make) {\n        RANDOM_CONFIG.make = config.make;\n        random.seed();\n        cosmetic.seed();\n    }\n}\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    if (index < 0)\n        return -1;\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor(seed) {\n        this._fn = RANDOM_CONFIG.make(seed);\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     * @see: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n     */\n    normal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.value() - 1;\n            v = 2 * this.value() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\nexport function make(seed) {\n    return new Random(seed);\n}\n//# sourceMappingURL=rng.js.map","import { random } from './rng';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1) {\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value(rng) {\n        rng = rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config) {\n    if (!config)\n        return new Range(0, 0, 0);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0);\n    if (typeof config == 'number')\n        return new Range(config, config, 1);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2]);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+)\\+|([+-]?\\d+))$/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3);\n        }\n        else if (results[9]) {\n            const v = Number.parseInt(results[9]);\n            return new Range(v, Number.MAX_SAFE_INTEGER, 1);\n        }\n        else if (results[10]) {\n            const v = Number.parseInt(results[10]);\n            return new Range(v, v, 1);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config) {\n    const range = make(config);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    const parts = v.split(/[,|]/);\n                    if (parts.length > 1) {\n                        result = from(obj, result, parts);\n                    }\n                    else if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        const n = Number.parseInt(v);\n                        if (n >= 0) {\n                            result |= n;\n                            return;\n                        }\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport function make(obj) {\n    const out = {};\n    Object.entries(obj).forEach(([key, value]) => {\n        out[key] = from(out, value);\n    });\n    return out;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './rng';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    let initFn;\n    if (typeof fn !== 'function') {\n        initFn = () => fn;\n    }\n    else {\n        initFn = fn;\n    }\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = initFn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        const grid = this;\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i, grid));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        for (let i = 0; i < sequence.length; ++i) {\n            const n = sequence[i];\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            if (fn(this[x][y], x, y, this) === true)\n                return true;\n        }\n        return false;\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    /**\n     * Finds the first matching value/result and returns that location as an xy.Loc\n     * @param v - The fill value or a function that returns the fill value.\n     * @returns xy.Loc | null - The location of the first cell matching the criteria or null if not found.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    find(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const v = this[x][y];\n                if (fn(v, x, y, this))\n                    return [x, y];\n            }\n        }\n        return null;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y, this);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin, eligibleValueMax, fillValue) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        let newX, newY;\n        const todo = [[x, y]];\n        const free = [];\n        let count = 1;\n        while (todo.length) {\n            const item = todo.pop();\n            [x, y] = item;\n            free.push(item);\n            if (!this.hasXY(x, y) || done[x][y])\n                continue;\n            if (!matchFn(this[x][y], x, y, this))\n                continue;\n            this[x][y] = fillFn(this[x][y], x, y, this);\n            done[x][y] = 1;\n            ++count;\n            // Iterate through the four cardinal neighbors.\n            for (let dir = 0; dir < 4; dir++) {\n                newX = x + DIRS[dir][0];\n                newY = y + DIRS[dir][1];\n                // If the neighbor is an unmarked region cell,\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n        NumGrid.free(done);\n        return count;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import { cosmetic } from '../rng';\nimport { clamp } from '../utils';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\n// All colors are const!!!\nexport class Color {\n    // values are 0-100 for normal RGBA\n    constructor(r = -1, g = 0, b = 0, a = 100) {\n        this._rand = null;\n        this.dances = false;\n        if (r < 0) {\n            a = 0;\n            r = 0;\n        }\n        this._data = [r, g, b, a];\n    }\n    rgb() {\n        return [this.r, this.g, this.b, this.a];\n    }\n    get r() {\n        return Math.round(this._data[0] * 2.550001);\n    }\n    get _r() {\n        return this._data[0];\n    }\n    get _ra() {\n        return Math.round((this._data[0] * this._data[3]) / 100);\n    }\n    get g() {\n        return Math.round(this._data[1] * 2.550001);\n    }\n    get _g() {\n        return this._data[1];\n    }\n    get _ga() {\n        return Math.round((this._data[1] * this._data[3]) / 100);\n    }\n    get b() {\n        return Math.round(this._data[2] * 2.550001);\n    }\n    get _b() {\n        return this._data[2];\n    }\n    get _ba() {\n        return Math.round((this._data[2] * this._data[3]) / 100);\n    }\n    get a() {\n        return this._data[3];\n    }\n    get _a() {\n        return this.a;\n    }\n    rand(all, r = 0, g = 0, b = 0) {\n        this._rand = [all, r, g, b];\n        this.dances = false;\n        return this;\n    }\n    dance(all, r, g, b) {\n        this.rand(all, r, g, b);\n        this.dances = true;\n        return this;\n    }\n    isNull() {\n        return this._data[3] === 0;\n    }\n    alpha(v) {\n        return new Color(this._data[0], this._data[1], this._data[2], clamp(v, 0, 100));\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (other.startsWith('#')) {\n                if (other.length == 4) {\n                    return this.css() === other;\n                }\n                return this.css(true) === other;\n            }\n            if (this.name)\n                return this.name === other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() === other || this.toInt(true) === other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        if (O.isNull())\n            return false;\n        return this._data.every((v, i) => {\n            return v == O._data[i];\n        });\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this._rand || !this.dances) {\n            return toColorInt(this._ra, this._ga, this._ba, base256);\n        }\n        const rand = cosmetic.number(this._rand[0]);\n        const redRand = cosmetic.number(this._rand[1]);\n        const greenRand = cosmetic.number(this._rand[2]);\n        const blueRand = cosmetic.number(this._rand[3]);\n        const r = Math.round(((this._r + rand + redRand) * this._a) / 100);\n        const g = Math.round(((this._g + rand + greenRand) * this._a) / 100);\n        const b = Math.round(((this._b + rand + blueRand) * this._a) / 100);\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._ra, this._ga, this._ba];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        return make(this._data.map((v) => clamp(v, 0, 100)));\n    }\n    blend(other) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (O.a === 100)\n            return O;\n        const pct = O.a / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this._data[0] * keepPct + O._data[0] * pct), Math.round(this._data[1] * keepPct + O._data[1] * pct), Math.round(this._data[2] * keepPct + O._data[2] * pct), Math.round(O.a + this._data[3] * keepPct));\n        if (this._rand) {\n            newColor._rand = this._rand.map((v) => Math.round(v * keepPct));\n            newColor.dances = this.dances;\n        }\n        if (O._rand) {\n            if (!newColor._rand) {\n                newColor._rand = [0, 0, 0, 0];\n            }\n            for (let i = 0; i < 4; ++i) {\n                newColor._rand[i] += Math.round(O._rand[i] * pct);\n            }\n            newColor.dances = newColor.dances || O.dances;\n        }\n        return newColor;\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        const newColor = make(Math.round(this._data[0] * keepPct + O._data[0] * pct), Math.round(this._data[1] * keepPct + O._data[1] * pct), Math.round(this._data[2] * keepPct + O._data[2] * pct), (this.isNull() ? 100 : this._data[3]) * keepPct + O._data[3] * pct);\n        if (this._rand) {\n            newColor._rand = this._rand.slice();\n            newColor.dances = this.dances;\n        }\n        if (O._rand) {\n            if (!newColor._rand) {\n                newColor._rand = O._rand.map((v) => Math.round(v * pct));\n            }\n            else {\n                for (let i = 0; i < 4; ++i) {\n                    newColor._rand[i] = Math.round(newColor._rand[i] * keepPct + O._rand[i] * pct);\n                }\n            }\n            newColor.dances = newColor.dances || O.dances;\n        }\n        return newColor;\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        if (percent <= 0)\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this._data[0] * keepPct + 100 * pct), Math.round(this._data[1] * keepPct + 100 * pct), Math.round(this._data[2] * keepPct + 100 * pct), this._a);\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        const pct = clamp(percent, 0, 100) / 100;\n        const keepPct = 1 - pct;\n        return make(Math.round(this._data[0] * keepPct + 0 * pct), Math.round(this._data[1] * keepPct + 0 * pct), Math.round(this._data[2] * keepPct + 0 * pct), this._a);\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (!this._rand)\n            return this;\n        if (this.dances && !clearDancing)\n            return this;\n        const d = this._rand;\n        const rand = cosmetic.number(d[0]);\n        const redRand = cosmetic.number(d[1]);\n        const greenRand = cosmetic.number(d[2]);\n        const blueRand = cosmetic.number(d[3]);\n        return make(this._r + rand + redRand, this._g + rand + greenRand, this._b + rand + blueRand, this._a);\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        const alpha = (O.a / 100) * (percent / 100);\n        return make(Math.round(this._data[0] + O._data[0] * alpha), Math.round(this._data[1] + O._data[1] * alpha), Math.round(this._data[2] + O._data[2] * alpha), clamp(Math.round(this._a + alpha * 100), 0, 100));\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        const pct = Math.max(0, percent) / 100;\n        return make(Math.round(this._data[0] * pct), Math.round(this._data[1] * pct), Math.round(this._data[2] * pct), this._a);\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data;\n        if (Array.isArray(other)) {\n            if (other.length < 3)\n                throw new Error('requires at least r,g,b values.');\n            data = other;\n        }\n        else {\n            if (other.isNull())\n                return this;\n            data = other._data;\n        }\n        const pct = (data[3] || 100) / 100;\n        return make(Math.round(this._ra * (data[0] / 100) * pct), Math.round(this._ga * (data[1] / 100) * pct), Math.round(this._ba * (data[2] / 100) * pct), 100);\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._ra, this._ga, this._ba);\n        if (max <= 100)\n            return this;\n        return make(Math.round((100 * this._ra) / max), Math.round((100 * this._ga) / max), Math.round((100 * this._ba) / max), 100);\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        if (v < 0)\n            return 'transparent';\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 3; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    if (val < 0) {\n        return new Color();\n    }\n    else if (base256 || val > 0xfff) {\n        return new Color(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255), 100);\n    }\n    else {\n        return new Color(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15), 100);\n    }\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg;\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg);\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return [a, b];\n    const A = a.clamp();\n    const B = b.clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return [A, B]; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return [A, B];\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const out = [A, B];\n    const lo = A.s <= B.s ? 0 : 1;\n    const hi = 1 - lo;\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (out[hi].l - out[lo].l < dist) {\n        out[hi] = out[hi].mix(WHITE, 5);\n        out[lo] = out[lo].mix(BLACK, 5);\n    }\n    // console.log('=>', a.toString(), b.toString());\n    return out;\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    // @ts-ignore\n    c._const = true;\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.lighten(25));\n    install('lighter_' + name, c.lighten(50));\n    install('lightest_' + name, c.lighten(75));\n    install('dark_' + name, c.darken(25));\n    install('darker_' + name, c.darken(50));\n    install('darkest_' + name, c.darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nexport const BLACK = install('black', 0x000);\nexport const WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.make(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.make(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg = Color.from(other.fg);\n        this.bg = Color.from(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg = Color.NONE;\n        this.bg = Color.NONE;\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg = Color.BLACK;\n        this.bg = Color.BLACK;\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg = this.fg.blend(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg = this.bg.blend(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg = this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg = this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg = this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg = this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg = this.fg.scale(multiplier);\n        if (bg)\n            this.bg = this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg = this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg = this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        [this.fg, this.bg] = Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg = this.fg.bake(clearDancing);\n        this.bg = this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\nexport var helpers = {\n    default: (_name, _, _value) => {\n        return '';\n    },\n    debug: (name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    },\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from './config';\nexport function compile(template, opts = {}) {\n    const F = opts.field || Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part, opts);\n    });\n    return function (args = {}) {\n        if (typeof args === 'string') {\n            args = { value: args };\n        }\n        return sections.map((f) => f(args)).join('');\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name, debug = false) {\n    return function (args) {\n        let h = Config.helpers[name];\n        if (h) {\n            return h(name, args);\n        }\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        h = debug ? Config.helpers.debug : Config.helpers.default;\n        return h(name, args);\n    };\n}\nexport function fieldValue(name, source, debug = false) {\n    const helper = debug ? Config.helpers.debug : Config.helpers.default;\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return helper(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return helper(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source, debug = false) {\n    const helper = Config.helpers[name] ||\n        (debug ? Config.helpers.debug : Config.helpers.default);\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || '0');\n    return function (args) {\n        let text = '' + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = '' + value;\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = '' + value;\n        }\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern, opts = {}) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base, opts.debug);\n    if (field && field.length) {\n        result = fieldValue(field, result, opts.debug);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result, opts.debug);\n    }\n    if (format && format.length) {\n        if (format.endsWith('s')) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith('d')) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import { NOOP } from '../utils';\nimport * as Config from './config';\nexport function eachChar(text, fn, opts = {}) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = '' + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = opts.eachColor || NOOP;\n    let fg = opts.fg || Config.options.defaultFg;\n    let bg = opts.bg || Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = opts.colorStart || Config.options.colorStart;\n    const CE = opts.colorEnd || Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split('|');\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nlet inColor = false;\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    inColor = false;\n    let i = start;\n    while (count > 0 && i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n                inColor = true;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            else {\n                inColor = false;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function truncate(text, width) {\n    const len = length(text);\n    if (len <= width)\n        return text;\n    const index = advanceChars(text, 0, width);\n    if (!inColor)\n        return text.substring(0, index);\n    const CE = Config.options.colorEnd;\n    return text.substring(0, index) + CE;\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return (text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1));\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\nexport function spliceRaw(msg, begin, deleteLength, add = '') {\n    const maxLen = msg.length;\n    if (begin >= maxLen)\n        return msg;\n    const preText = msg.substring(0, begin);\n    if (begin + deleteLength >= maxLen) {\n        return preText;\n    }\n    const postText = msg.substring(begin + deleteLength);\n    return preText + add + postText;\n}\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nexport function hash(str) {\n    let hash = 0;\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n        hash = (hash << 5) - hash + str.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from './config';\nimport * as Utils from './utils';\nimport { eachChar } from './each';\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == ' ') {\n            while (text[i + 1] == ' ') {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == '-') {\n            return [i, l];\n        }\n        if (ch == '\\n') {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = '') {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, lineWidth, start, end, wordWidth, spaceLeftOnLine) {\n    while (start < end) {\n        // do not need to hyphenate\n        if (spaceLeftOnLine >= wordWidth)\n            return [text, end];\n        // not much room left and word fits on next line\n        if (spaceLeftOnLine < 4 && wordWidth <= lineWidth) {\n            text = splice(text, start - 1, 1, '\\n');\n            return [text, end + 1];\n        }\n        // if will fit on this line and next...\n        if (wordWidth < spaceLeftOnLine + lineWidth) {\n            const w = Utils.advanceChars(text, start, spaceLeftOnLine - 1);\n            text = splice(text, w, 0, '-\\n');\n            return [text, end + 2];\n        }\n        if (spaceLeftOnLine < 5) {\n            text = splice(text, start - 1, 1, '\\n');\n            spaceLeftOnLine = lineWidth;\n            continue;\n        }\n        // one hyphen will work...\n        const hyphenAt = Math.min(spaceLeftOnLine - 1, Math.floor(wordWidth / 2));\n        const w = Utils.advanceChars(text, start, hyphenAt);\n        text = splice(text, w, 0, '-\\n');\n        start = w + 2;\n        end += 2;\n        wordWidth -= hyphenAt;\n    }\n    return [text, end];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error('Need string and width');\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf('\\n') == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split('\\n');\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join('\\n');\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == '-') {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? '\\n' : '';\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, '\\n'); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width = 200, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    if (!source)\n        return output;\n    if (width <= 0)\n        width = 200;\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == '\\n') {\n            let color = fg0 || bg0\n                ? `${CS}${fg0 ? fg0 : ''}${bg0 ? '|' + bg0 : ''}${CS}`\n                : '';\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : ''}${bg0 ? '|' + bg0 : ''}${CS}` : '';\n    if (start < text.length) {\n        output.push(color + text.substring(start));\n    }\n    return output;\n}\n//# sourceMappingURL=lines.js.map","export { compile, apply } from './compile';\nexport { eachChar } from './each';\nexport * from './utils';\nexport { wordWrap, splitIntoLines } from './lines';\nexport { addHelper, options } from './config';\nimport { options } from './config';\nexport function configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\n//# sourceMappingURL=index.js.map","import { Mixer } from './sprite/mixer';\nimport * as Color from './color';\nimport * as Text from './text';\nexport class Buffer {\n    constructor(width, height) {\n        this.changed = false;\n        this._width = width;\n        this._height = height;\n        this._data = this._makeData();\n    }\n    _makeData() {\n        return new Uint32Array(this.width * this.height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    clone() {\n        const other = new Buffer(this._width, this._height);\n        other.copy(this);\n        return other;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n        this.changed = true;\n    }\n    _index(x, y) {\n        return y * this.width + x;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return 0;\n        let index = this._index(x, y);\n        return this._data[index] || 0;\n    }\n    info(x, y) {\n        const style = this.get(x, y);\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    set(x, y, style) {\n        if (!this.hasXY(x, y))\n            return;\n        let index = this._index(x, y);\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            return true;\n        }\n        return false;\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        if (!this.hasXY(x, y))\n            return this;\n        const current = this.get(x, y);\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        if (typeof fg !== 'number') {\n            fg = Color.from(current & 0xfff)\n                .blend(fg)\n                .toInt();\n        }\n        else if (fg < 0) {\n            fg = current & 0xfff;\n        }\n        else {\n            fg = fg & 0xfff;\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from((current >> 12) & 0xfff)\n                .blend(bg)\n                .toInt();\n        }\n        else if (bg < 0) {\n            bg = (current >> 12) & 0xfff;\n        }\n        else {\n            bg = bg & 0xfff;\n        }\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this.set(x, y, style);\n        if (style !== current)\n            this.changed = true;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (arguments.length == 1) {\n            bg = Color.from(glyph);\n            glyph = 0;\n            fg = 0;\n        }\n        return this.fillRect(0, 0, this.width, this.height, glyph, fg, bg);\n    }\n    copy(other) {\n        this._width = other._width;\n        this._height = other._height;\n        this._data.set(other._data);\n        this.changed = true;\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1, maxWidth = 0, align = 'left') {\n        // if (!this.hasXY(x, y)) return 0;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        maxWidth = Math.min(maxWidth || this.width, this.width - x);\n        if (align == 'right') {\n            const len = Text.length(text);\n            x += maxWidth - len;\n        }\n        else if (align == 'center') {\n            const len = Text.length(text);\n            x += Math.floor((maxWidth - len) / 2);\n        }\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width || i >= maxWidth)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, { fg, bg });\n        return 1; // used 1 line\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        // if (!this.hasXY(x, y)) return 0;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let lineCount = 0;\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y + lineCount, 0, 0x000, bg0);\n                }\n                ++lineCount;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y + lineCount, ch, fg0, bg0);\n        }, { fg, bg });\n        while (xi < x + width) {\n            this.draw(xi++, y + lineCount, 0, 0x000, bg);\n        }\n        return lineCount + 1;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        const xw = Math.min(x + w, this.width);\n        const yh = Math.min(y + h, this.height);\n        for (let i = x; i < xw; ++i) {\n            for (let j = y; j < yh; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, bg, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (!this.hasXY(x, y))\n            return this;\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.info(x, y);\n        mixer.drawSprite(data);\n        mixer.fg = mixer.fg.add(color, strength);\n        mixer.bg = mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent, x = 0, y = 0, width = 0, height = 0) {\n        color = Color.from(color);\n        if (color.isNull())\n            return this;\n        const mixer = new Mixer();\n        if (!width)\n            width = x ? 1 : this.width;\n        if (!height)\n            height = y ? 1 : this.height;\n        const endX = Math.min(width + x, this.width);\n        const endY = Math.min(height + y, this.height);\n        for (let i = x; i < endX; ++i) {\n            for (let j = y; j < endY; ++j) {\n                const data = this.info(i, j);\n                mixer.drawSprite(data);\n                mixer.fg = mixer.fg.mix(color, percent);\n                mixer.bg = mixer.bg.mix(color, percent);\n                this.drawSprite(i, j, mixer);\n            }\n        }\n        return this;\n    }\n    blend(color, x = 0, y = 0, width = 0, height = 0) {\n        color = Color.from(color);\n        if (color.isNull())\n            return this;\n        const mixer = new Mixer();\n        if (!width)\n            width = x ? 1 : this.width;\n        if (!height)\n            height = y ? 1 : this.height;\n        const endX = Math.min(width + x, this.width);\n        const endY = Math.min(height + y, this.height);\n        for (let i = x; i < endX; ++i) {\n            for (let j = y; j < endY; ++j) {\n                const data = this.info(i, j);\n                mixer.drawSprite(data);\n                mixer.fg = mixer.fg.blend(color);\n                mixer.bg = mixer.bg.blend(color);\n                this.drawSprite(i, j, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.info(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function make(width, height) {\n    return new Buffer(width, height);\n}\n//# sourceMappingURL=buffer.js.map","import * as Utils from './utils';\nexport class Event {\n    constructor(type, opts) {\n        this.target = null;\n        // Used in UI\n        this.defaultPrevented = false;\n        this.propagationStopped = false;\n        this.immediatePropagationStopped = false;\n        // Key Event\n        this.key = '';\n        this.code = '';\n        this.shiftKey = false;\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.metaKey = false;\n        // Dir Event extends KeyEvent\n        this.dir = null;\n        // Mouse Event\n        this.x = -1;\n        this.y = -1;\n        this.clientX = -1;\n        this.clientY = -1;\n        // Tick Event\n        this.dt = 0;\n        this.reset(type, opts);\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    stopPropagation() {\n        this.propagationStopped = true;\n    }\n    stopImmediatePropagation() {\n        this.immediatePropagationStopped = true;\n    }\n    reset(type, opts) {\n        this.type = type;\n        this.target = null;\n        this.defaultPrevented = false;\n        this.shiftKey = false;\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.metaKey = false;\n        this.key = '';\n        this.code = '';\n        this.x = -1;\n        this.y = -1;\n        this.dir = null;\n        this.dt = 0;\n        this.target = null;\n        if (opts) {\n            Object.assign(this, opts);\n        }\n    }\n}\nlet IOMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nexport const STOP = 'stop';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    IOMAP = keymap;\n}\nexport function handlerFor(ev, km) {\n    let c;\n    if (ev.dir) {\n        c = km.dir || km.keypress;\n    }\n    else if (ev.type === KEYPRESS) {\n        c = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        c = km[ev.type];\n    }\n    if (!c) {\n        c = km.dispatch;\n    }\n    return c || null;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    km = km || IOMAP;\n    if (ev.type === STOP) {\n        recycleEvent(ev);\n        return true; // Should stop loops, etc...\n    }\n    const handler = handlerFor(ev, km);\n    if (handler) {\n        // if (typeof c === 'function') {\n        result = await handler.call(km, ev);\n        // } else if (commands[c]) {\n        //     result = await commands[c](ev);\n        // } else {\n        //     Utils.WARN('No command found: ' + c);\n        // }\n    }\n    // TODO - what is this here for?\n    // if ('next' in km && km.next === false) {\n    //     result = false;\n    // }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// STOP\nexport function makeStopEvent() {\n    return makeCustomEvent(STOP);\n}\n// CUSTOM\nexport function makeCustomEvent(type, opts) {\n    const ev = DEAD_EVENTS.pop() || null;\n    if (!ev)\n        return new Event(type, opts);\n    ev.reset(type, opts);\n    return ev;\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = makeCustomEvent(TICK);\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || new Event(KEYPRESS);\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.defaultPrevented = false;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    ev.target = null;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || new Event(e.type);\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.defaultPrevented = false;\n    ev.key = '';\n    ev.code = '';\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    ev.target = null;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = true;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n        this.interval = 0;\n        this.intervalCount = 0;\n        this.ended = false;\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    _startTicks() {\n        ++this.intervalCount;\n        if (this.interval)\n            return;\n        this.interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n    }\n    _stopTicks() {\n        if (!this.intervalCount)\n            return; // too many calls to stop\n        --this.intervalCount;\n        if (this.intervalCount)\n            return; // still have a loop running\n        clearInterval(this.interval);\n        this.interval = 0;\n    }\n    pushEvent(ev) {\n        if (this.ended)\n            return;\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms = -1, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms == 0 || this.ended)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            throw new Error('OVERWRITE HANDLER -- Check for a missing await around Loop function calls.');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n                e.dt = elapsed;\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        if (this.ended)\n            return;\n        this.running = true;\n        this.clearEvents(); // ??? Should we do this?\n        this._startTicks();\n        if (keymap.start && typeof keymap.start === 'function') {\n            await keymap.start();\n        }\n        let running = true;\n        while (this.running && running) {\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                keymap.draw();\n            }\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                running = false;\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            await keymap.stop();\n        }\n        this._stopTicks();\n    }\n    stop() {\n        this.clearEvents();\n        this.running = false;\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = 0;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.pushEvent(makeStopEvent());\n        }\n        this.CURRENT_HANDLER = null;\n    }\n    end() {\n        this.stop();\n        this.ended = true;\n    }\n    start() {\n        this.ended = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"ACTOR_DETECTED\"] = Fl(8)] = \"ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ACTOR_DETECTED\"] = Fl(9)] = \"WAS_ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"IS_CURSOR\"] = Fl(15)] = \"IS_CURSOR\";\n    FovFlags[FovFlags[\"IS_HIGHLIGHTED\"] = Fl(16)] = \"IS_HIGHLIGHTED\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_DETECTED\"] = FovFlags.WAS_ITEM_DETECTED | FovFlags.WAS_ACTOR_DETECTED] = \"WAS_DETECTED\";\n    FovFlags[FovFlags[\"IS_DETECTED\"] = FovFlags.ITEM_DETECTED | FovFlags.ACTOR_DETECTED] = \"IS_DETECTED\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER | FovFlags.VISIBLE |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.ACTOR_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GWU from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nimport { NOOP } from '../utils';\nimport * as XY from '../xy';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        // needsUpdate: boolean;\n        this.changed = true;\n        this._callback = NOOP;\n        this.follow = null;\n        this.site = site;\n        let flag = 0;\n        const visible = opts.visible || opts.alwaysVisible;\n        if (opts.revealed || (visible && opts.revealed !== false))\n            flag |= FovFlags.REVEALED;\n        if (visible)\n            flag |= FovFlags.VISIBLE;\n        this.flags = Grid.make(site.width, site.height, flag);\n        // this.needsUpdate = true;\n        if (opts.callback) {\n            this.callback = opts.callback;\n        }\n        this.fov = new FOV.FOV({\n            isBlocked: (x, y) => {\n                return this.site.blocksVision(x, y);\n            },\n            hasXY: (x, y) => {\n                return (x >= 0 &&\n                    y >= 0 &&\n                    x < this.site.width &&\n                    y < this.site.height);\n            },\n        });\n        if (opts.alwaysVisible) {\n            this.makeAlwaysVisible();\n        }\n        if (opts.visible || opts.alwaysVisible) {\n            XY.forRect(site.width, site.height, (x, y) => this._callback(x, y, true));\n        }\n    }\n    get callback() {\n        return this._callback;\n    }\n    set callback(v) {\n        if (!v) {\n            this._callback = NOOP;\n        }\n        else if (typeof v === 'function') {\n            this._callback = v;\n        }\n        else {\n            this._callback = v.onFovChange.bind(v);\n        }\n    }\n    getFlag(x, y) {\n        return this.flags[x][y];\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isClairvoyantVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.CLAIRVOYANT_VISIBLE);\n    }\n    isTelepathicVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.TELEPATHIC_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isActorDetected(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ACTOR_DETECTED);\n    }\n    isItemDetected(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ITEM_DETECTED);\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    fovChanged(x, y) {\n        const flags = this.flags.get(x, y) || 0;\n        const isVisible = !!(flags & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flags & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        return isVisible !== wasVisible;\n    }\n    wasAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |=\n            FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealAll(makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags.update((v) => v | flag);\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealCell(x, y, makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags[x][y] |= flag;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED |\n            FovFlags.REVEALED |\n            FovFlags.ALWAYS_VISIBLE);\n        this.flags[x][y] = this.demoteCellVisibility(this.flags[x][y]); // clears visible, etc...\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    reset() {\n        this.flags.fill(0);\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    // get changed(): boolean {\n    //     return this._changed;\n    // }\n    // set changed(v: boolean) {\n    //     this._changed = v;\n    //     this.needsUpdate = this.needsUpdate || v;\n    // }\n    // CURSOR\n    setCursor(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        this.flags[x][y] |= FovFlags.IS_CURSOR;\n        this.changed = true;\n    }\n    clearCursor(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_CURSOR;\n        }\n        this.changed = true;\n    }\n    isCursor(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_CURSOR);\n    }\n    // HIGHLIGHT\n    setHighlight(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        this.flags[x][y] |= FovFlags.IS_HIGHLIGHTED;\n        this.changed = true;\n    }\n    clearHighlight(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_HIGHLIGHTED;\n        }\n        this.changed = true;\n    }\n    isHighlight(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_HIGHLIGHTED);\n    }\n    // COPY\n    // copy(other: FovSystem) {\n    //     this.site = other.site;\n    //     this.flags.copy(other.flags);\n    //     this.fov = other.fov;\n    //     this.follow = other.follow;\n    //     this.onFovChange = other.onFovChange;\n    //     // this.needsUpdate = other.needsUpdate;\n    //     // this._changed = other._changed;\n    // }\n    //////////////////////////\n    // UPDATE\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV | FovFlags.WAS_DETECTED);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        if (flag & FovFlags.ITEM_DETECTED) {\n            flag &= ~FovFlags.ITEM_DETECTED;\n            flag |= FovFlags.WAS_ITEM_DETECTED;\n        }\n        if (flag & FovFlags.ACTOR_DETECTED) {\n            flag &= ~FovFlags.ACTOR_DETECTED;\n            flag |= FovFlags.WAS_ACTOR_DETECTED;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            this.flags[x][y] |= FovFlags.REVEALED;\n            this._callback(x, y, isVisible);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            this._callback(x, y, isVisible);\n        }\n        return isVisible;\n    }\n    // protected updateCellClairyvoyance(\n    //     flag: number,\n    //     x: number,\n    //     y: number\n    // ): boolean {\n    //     const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n    //     const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n    //     if (isClairy && wasClairy) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isClairy && wasClairy) {\n    //         // ceased being clairvoyantly visible\n    //         this._callback(x, y, isClairy);\n    //     } else if (!wasClairy && isClairy) {\n    //         // became clairvoyantly visible\n    //         this._callback(x, y, isClairy);\n    //     }\n    //     return isClairy;\n    // }\n    // protected updateCellTelepathy(flag: number, x: number, y: number): boolean {\n    //     const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n    //     const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n    //     if (isTele && wasTele) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isTele && wasTele) {\n    //         // ceased being telepathically visible\n    //         this._callback(x, y, isTele);\n    //     } else if (!wasTele && isTele) {\n    //         // became telepathically visible\n    //         this._callback(x, y, isTele);\n    //     }\n    //     return isTele;\n    // }\n    updateCellDetect(flag, x, y) {\n        const isDetect = !!(flag & FovFlags.IS_DETECTED);\n        const wasDetect = !!(flag & FovFlags.WAS_DETECTED);\n        if (isDetect && wasDetect) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isDetect && wasDetect) {\n            // ceased being detected visible\n            this._callback(x, y, isDetect);\n        }\n        else if (!wasDetect && isDetect) {\n            // became detected visible\n            this._callback(x, y, isDetect);\n        }\n        return isDetect;\n    }\n    // protected updateItemDetect(flag: number, x: number, y: number): boolean {\n    //     const isItem = !!(flag & FovFlags.ITEM_DETECTED);\n    //     const wasItem = !!(flag & FovFlags.WAS_ITEM_DETECTED);\n    //     if (isItem && wasItem) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isItem && wasItem) {\n    //         // ceased being detected visible\n    //         this._callback(x, y, isItem);\n    //     } else if (!wasItem && isItem) {\n    //         // became detected visible\n    //         this._callback(x, y, isItem);\n    //     }\n    //     return isItem;\n    // }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        // if (this.updateCellClairyvoyance(flag, x, y)) return;\n        // if (this.updateCellTelepathy(flag, x, y)) return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n        // if (this.updateItemDetect(flag, x, y)) return;\n    }\n    updateFor(subject) {\n        return this.update(subject.x, subject.y, subject.visionDistance);\n    }\n    update(cx, cy, cr) {\n        if (cx === undefined) {\n            if (this.follow) {\n                return this.updateFor(this.follow);\n            }\n        }\n        // if (\n        //     // !this.needsUpdate &&\n        //     cx === undefined &&\n        //     !this.site.lightingChanged()\n        // ) {\n        //     return false;\n        // }\n        if (cr === undefined) {\n            cr = this.site.width + this.site.height;\n        }\n        // this.needsUpdate = false;\n        this.changed = true; // we updated something...\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            let flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                flag = FovFlags.VISIBLE;\n            // if (!flag)\n            //     throw new Error('Received invalid viewport type: ' + Flag.toString(FovFlags, type));\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked, eightWays = false) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, eightWays);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {EventFn} fn The listener function.\n     * @param {any} [context=null] The context to invoke the listener with.\n     * @param {boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {EventFn} fn - The function\n     * @param {any} [context] - The context Object.\n     * @param {boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","import * as Base from '../buffer';\nexport class Buffer extends Base.Buffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._target; }\n    clone() {\n        const other = new (this.constructor)(this._target);\n        other.copy(this);\n        return other;\n    }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.draw(this);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this);\n        return this;\n    }\n}\n//# sourceMappingURL=buffer.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n >= 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2606',\n            '\\u2605',\n            '\\u2023',\n            '\\u2219',\n            '\\u2043',\n            '\\u2022',\n            '\\u2690',\n            '\\u2691',\n            '\\u2610',\n            '\\u2611',\n            '\\u2612',\n            '\\u26ac',\n            '\\u29bf',\n            '\\u2191',\n            '\\u2192',\n            '\\u2193',\n            '\\u2190',\n            '\\u2194',\n            '\\u2195',\n            '\\u25b2',\n            '\\u25b6',\n            '\\u25bc',\n            '\\u25c0', // big left arrow\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { Buffer as CanvasBuffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new CanvasBuffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    copyTo(data) {\n        if (!this.buffer)\n            return; // startup/constructor\n        data.copy(this.buffer);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    draw(data) {\n        // TODO - Remove?\n        if (data._data.every((style, i) => style === this._data[i]))\n            return false;\n        data.changed = false;\n        let changed = false;\n        const src = data._data;\n        const raw = this._data;\n        for (let i = 0; i < raw.length; ++i) {\n            if (raw[i] !== src[i]) {\n                raw[i] = src[i];\n                this._changed[i] = 1;\n                changed = true;\n            }\n        }\n        if (!changed)\n            return false;\n        this.buffer.changed = true;\n        this._requestRender();\n        return true;\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n        this.buffer.changed = false;\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n//# sourceMappingURL=canvas.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","import * as shaders from './shaders';\nimport * as Canvas from './canvas';\nconst VERTICES_PER_TILE = 6;\n// export class BufferGL extends Buffer.Buffer {\n//     constructor(canvas: Buffer.BufferTarget) {\n//         super(canvas);\n//     }\n//     protected _makeData(): Uint32Array {\n//         return new Uint32Array(this.width * this.height * VERTICES_PER_TILE);\n//     }\n//     protected _index(x: number, y: number): number {\n//         let index = y * this.width + x;\n//         index *= VERTICES_PER_TILE;\n//         return index;\n//     }\n//     set(x: number, y: number, style: number): boolean {\n//         let index = this._index(x, y);\n//         const current = this._data[index + 2];\n//         if (current !== style) {\n//             this._data[index + 2] = style;\n//             this._data[index + 5] = style;\n//             this.changed = true;\n//             return true;\n//         }\n//         return false;\n//     }\n//     copy(other: Buffer.DataBuffer): this {\n//         if (this.height !== other.height || this.width !== other.width)\n//             throw new Error('Buffers must be same size!');\n//         if (this._data.length === other._data.length) {\n//             this._data.set(other._data);\n//         } else {\n//             for (let x = 0; x < this.width; ++x) {\n//                 for (let y = 0; y < this.width; ++y) {\n//                     this.set(x, y, other.get(x, y));\n//                 }\n//             }\n//         }\n//         this.changed = true;\n//         return this;\n//     }\n// }\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class CanvasGL extends Canvas.BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    // _createBuffer() {\n    //     return new BufferGL(this);\n    // }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new Canvas.NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        // this._data = new Uint32Array(width * height * VERTICES_PER_TILE);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    draw(data) {\n        // TODO - remove?\n        if (data._data.every((style, i) => {\n            const index = 2 + i * VERTICES_PER_TILE;\n            return style === this._data[index];\n        })) {\n            return false;\n        }\n        data._data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n        data.changed = false;\n        return true;\n    }\n    copyTo(data) {\n        data.changed = false;\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data._data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n        this.buffer.changed = false;\n    }\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvasGL.js.map","import { Glyphs } from './glyphs';\nimport { Canvas2D, NotSupportedError, } from './canvas';\nimport { CanvasGL } from './canvasGL';\nimport * as IO from '../io';\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new CanvasGL(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\n//# sourceMappingURL=make.js.map","import * as Color from '../color';\nimport { clamp } from '../utils';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nimport { TRUE } from './utils';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport function get(msgOrId) {\n    return templates[msgOrId] || null;\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.matchFn = opts.match || TRUE;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        this.NEEDS_UPDATE = needs;\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    _addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this.commitCombatMessage();\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this._addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './rng';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rng: random,\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = this.options.rng.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nlet LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, radius = 1, fadeTo = 0, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color); /* color */\n        this.radius = Range.make(radius);\n        this.fadeTo = fadeTo;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(site, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!site)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS = this.color.bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(site.width, site.height, 0);\n        site.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS._data[k] * lightMultiplier) / 100);\n            }\n            site.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    let data = light;\n    if (light instanceof Color.Color) {\n        data = light._data;\n    }\n    return Math.max(data[0], data[1], data[2]);\n}\nexport function isDarkLight(light, threshold = 20) {\n    return intensity(light) <= threshold;\n}\nexport function isShadowLight(light, threshold = 40) {\n    return intensity(light) <= threshold;\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    source.id = id;\n    return source;\n}\nexport function installAll(config) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this.changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    copy(other) {\n        this.setAmbient(other.ambient);\n        this.glowLightChanged = true;\n        this.dynamicLightChanged = true;\n        this.changed = true;\n        this.staticLights = null;\n        List.forEach(other.staticLights, (info) => this.addStatic(info.x, info.y, info.light));\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        else if (!Array.isArray(light)) {\n            light = Color.from(light).toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get needsUpdate() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    setLight(x, y, light) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] = light[i];\n        }\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this.changed = false;\n        if (!force && !this.needsUpdate)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this.changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const site = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && site.hasActor(x, y))\n                    return false;\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return site.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map","// Tweeing API based on - http://tweenjs.github.io/tween.js/\nimport * as Utils from './utils';\nexport class Tween {\n    constructor(src) {\n        this._repeat = 0;\n        this._count = 0;\n        this._from = false;\n        this._duration = 0;\n        this._delay = 0;\n        this._repeatDelay = -1;\n        this._yoyo = false;\n        this._time = Number.MAX_SAFE_INTEGER;\n        this._startTime = 0;\n        this._goal = {};\n        this._start = {};\n        this._startCb = null;\n        this._updateCb = null;\n        this._repeatCb = null;\n        this._finishCb = null;\n        this._easing = linear;\n        this._interpolate = interpolate;\n        this._obj = src;\n    }\n    isRunning() {\n        return this._time < this._duration;\n    }\n    onStart(cb) {\n        this._startCb = cb;\n        return this;\n    }\n    onUpdate(cb) {\n        this._updateCb = cb;\n        return this;\n    }\n    onRepeat(cb) {\n        this._repeatCb = cb;\n        return this;\n    }\n    onFinish(cb) {\n        this._finishCb = cb;\n        return this;\n    }\n    to(goal, duration) {\n        this._goal = goal;\n        this._from = false;\n        if (duration !== undefined)\n            this._duration = duration;\n        return this;\n    }\n    from(start, duration) {\n        this._start = start;\n        this._from = true;\n        if (duration !== undefined)\n            this._duration = duration;\n        return this;\n    }\n    duration(v) {\n        if (v === undefined)\n            return this._duration;\n        this._duration = v;\n        return this;\n    }\n    repeat(v) {\n        if (v === undefined)\n            return this._repeat;\n        this._repeat = v;\n        return this;\n    }\n    delay(v) {\n        if (v === undefined)\n            return this._delay;\n        this._delay = v;\n        return this;\n    }\n    repeatDelay(v) {\n        if (v === undefined)\n            return this._repeatDelay;\n        this._repeatDelay = v;\n        return this;\n    }\n    yoyo(v) {\n        if (v === undefined)\n            return this._yoyo;\n        this._yoyo = v;\n        return this;\n    }\n    start() {\n        this._time = 0;\n        this._startTime = this._delay;\n        this._count = 0;\n        if (this._from) {\n            this._goal = {};\n            Object.keys(this._start).forEach((key) => (this._goal[key] = this._obj[key]));\n            this._updateProperties(this._obj, this._start, this._goal, 0);\n        }\n        else {\n            this._start = {};\n            Object.keys(this._goal).forEach((key) => (this._start[key] = this._obj[key]));\n        }\n        return this;\n    }\n    tick(dt) {\n        if (!this.isRunning())\n            return this;\n        this._time += dt;\n        if (this._startTime) {\n            if (this._startTime > this._time)\n                return this;\n            this._time -= this._startTime;\n            this._startTime = 0;\n        }\n        if (this._count === 0) {\n            this._count = 1;\n            if (this._startCb) {\n                this._startCb.call(this, this._obj, 0);\n            }\n        }\n        const pct = this._easing(this._time / this._duration);\n        let madeChange = this._updateProperties(this._obj, this._start, this._goal, pct);\n        if (madeChange && this._updateCb) {\n            this._updateCb.call(this, this._obj, pct);\n        }\n        if (this._time >= this._duration) {\n            if (this._repeat > this._count) {\n                // reset starting values\n                Object.entries(this._start).forEach(([key, value]) => {\n                    this._obj[key] = value;\n                });\n                this._time -= this._duration;\n                this._startTime =\n                    this._repeatDelay > -1 ? this._repeatDelay : this._delay;\n                ++this._count;\n                if (this._yoyo) {\n                    [this._start, this._goal] = [this._goal, this._start];\n                }\n                if (this._repeatCb)\n                    this._repeatCb.call(this, this._obj, this._count);\n            }\n            else if (this._finishCb)\n                this._finishCb.call(this, this._obj, 1);\n        }\n        return this;\n    }\n    _updateProperties(obj, start, goal, pct) {\n        let madeChange = false;\n        Object.entries(goal).forEach(([field, goalV]) => {\n            const currentV = obj[field];\n            const startV = start[field];\n            const updatedV = this._interpolate(startV, goalV, pct);\n            if (updatedV !== currentV) {\n                obj[field] = updatedV;\n                madeChange = true;\n            }\n        });\n        return madeChange;\n    }\n}\nexport function make(src) {\n    return new Tween(src);\n}\nexport function linear(pct) {\n    return Utils.clamp(pct, 0, 1);\n}\n// TODO - string, bool, Color\nexport function interpolate(start, goal, pct) {\n    return Math.floor((goal - start) * pct) + start;\n}\n//# sourceMappingURL=tween.js.map"],"names":["NOOP","TRUE","clamp","v","min","max","ERROR","message","Error","first","args","find","undefined","arrayNext","a","current","fn","wrap","forward","len","length","startIndex","indexOf","dx","endI","index","e","DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","i","j","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","size","dest","b","pct","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","forEach","root","next","obj","name","entry","remove","prev","count","cb","sort","out","TypeError","assignField","key","updated","copy","clear","nullify","clone","Array","isArray","slice","setDefaults","def","custom","Object","keys","origKey","defValue","parts","split","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","console","warn","Random","_fn","value","Number","MAX_SAFE_INTEGER","number","lo","hi","mean","stddev","u","r","sqrt","log","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","item","fromIndex","toIndex","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","XY.forRect","k","candidateLocs","loc","random","cosmetic","config","Range","lower","upper","rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","from","fl","N","startsWith","substring","flagObj","inverse","reduce","join","XY.DIRS","makeArray","fill","initFn","arr","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","grid","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","some","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","pop","_resize","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","todo","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","toColorInt","g","base256","round","colors","Color","_rand","dances","_data","_r","_ra","_g","_ga","_b","_ba","_a","all","s","H","R","G","B","css","toInt","O","isNull","every","redRand","greenRand","blueRand","keepPct","newColor","clearDancing","alpha","toString","fromArray","vals","fromCss","fromName","fromNumber","separate","A","hDiff","mix","WHITE","BLACK","install","info","_const","installSpread","lighten","darken","NONE","rgb","maxRgb","sin","PI","Mixer","ch","Utils.first","fg","Color.make","bg","Color.from","_changed","equals","Color.NONE","Color.BLACK","blend","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","default","_name","_value","debug","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","baseValue","source","fieldValue","helperValue","endsWith","text","padEnd","stringFormat","wantSign","intFormat","fixed","parseFloat","toFixed","floatFormat","makeVariable","apply","eachChar","colorFn","eachColor","ctx","CS","CE","newColors","inColor","advanceChars","start","capitalize","test","toUpperCase","nextBreak","splice","hyphenate","lineWidth","end","wordWidth","spaceLeftOnLine","Utils.advanceChars","hyphenAt","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","msg","begin","deleteLength","maxLen","preText","str","hash","Buffer","changed","_makeData","Uint32Array","orig","set","_index","style","glyph","toGlyph","sprite","draw","fillRect","maxWidth","align","Text.length","Text.eachChar","Text.wordWrap","lineCount","xi","xw","yh","strength","mixer","drawSprite","endX","endY","header","Event","type","target","defaultPrevented","propagationStopped","immediatePropagationStopped","code","shiftKey","ctrlKey","altKey","metaKey","clientX","clientY","dt","reset","assign","IOMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","STOP","CONTROL_CODES","handlerFor","ev","km","keypress","dispatch","dispatchEvent","recycleEvent","handler","call","makeStopEvent","makeCustomEvent","makeTickEvent","makeKeyEvent","toLowerCase","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","interval","intervalCount","ended","setInterval","pushEvent","clearInterval","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","clearEvents","_startTicks","nextEvent","stop","_stopTicks","setTimeout","nextKeyOrClick","pause","preventDefault","loop","FovFlags","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","WAS_ITEM_DETECTED","WAS_ACTOR_DETECTED","ITEM_DETECTED","ACTOR_DETECTED","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","_callback","follow","flag","visible","alwaysVisible","revealed","REVEALED","flags","Grid.make","callback","fov","FOV.FOV","blocksVision","makeAlwaysVisible","onFovChange","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","WAS_ANY_KIND_OF_VISIBLE","ALWAYS_VISIBLE","makeVisibleToo","demoteCellVisibility","keep","IS_CURSOR","IS_HIGHLIGHTED","WAS_IN_FOV","WAS_DETECTED","isVisible","wasVisible","isDetect","IS_DETECTED","wasDetect","hasVisibleLight","updateCellVisibility","updateCellDetect","subject","visionDistance","cx","cy","cr","updateFor","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","p","level","funcs","levels","frequency","found","time","cache","delay","Base.Buffer","canvas","_target","copyTo","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","pxWidth","pxHeight","fillStyle","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","CanvasBuffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas2D","Int8Array","raw","_requestRender","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","VS","FS","CanvasGL","Canvas.BaseCanvas","gl","Canvas.NotSupportedError","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","templates","id","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","msgOrId","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","commitCombatMessage","_addMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","_addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","setAmbient","addStatic","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","Tween","_repeat","_count","_from","_duration","_delay","_repeatDelay","_yoyo","_time","_startTime","_goal","_start","_startCb","_updateCb","_repeatCb","_finishCb","_easing","linear","_interpolate","interpolate","_obj","goal","duration","_updateProperties","isRunning","madeChange","goalV","currentV","startV","updatedV","av","beforeFn"],"mappings":"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"}