{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/xy.js","../js/list.js","../js/object.js","../js/rng.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function arrayDelete(a, b) {\n    const index = a.indexOf(b);\n    if (index < 0)\n        return false;\n    a.splice(index, 1);\n    return true;\n}\nexport function arrayFindRight(a, fn) {\n    for (let i = a.length - 1; i >= 0; --i) {\n        const e = a[i];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n//# sourceMappingURL=utils.js.map","import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function contains(size, x, y) {\n    return x >= 0 && y >= 0 && x < size.width && y < size.height;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n    toString() {\n        return `[${this.x},${this.y} -> ${this.right},${this.bottom}]`;\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function straightDistanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    return x + y;\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return true;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc) === false) {\n            return false;\n        }\n        if (currentLoc[0] === toX && currentLoc[1] === toY)\n            return true;\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return false;\n        line.push([x, y]);\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        obj.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) < 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (!current)\n        return out;\n    if (out === undefined) {\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nexport function configure(config = {}) {\n    if (config.make) {\n        RANDOM_CONFIG.make = config.make;\n        random.seed();\n        cosmetic.seed();\n    }\n}\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    if (index < 0)\n        return -1;\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor(seed) {\n        this._fn = RANDOM_CONFIG.make(seed);\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\nexport function make(seed) {\n    return new Random(seed);\n}\n//# sourceMappingURL=rng.js.map","import { random } from './rng';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1) {\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value(rng) {\n        rng = rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config) {\n    if (!config)\n        return new Range(0, 0, 0);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0);\n    if (typeof config == 'number')\n        return new Range(config, config, 1);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2]);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config) {\n    const range = make(config);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        const n = Number.parseInt(v);\n                        if (n >= 0) {\n                            result |= n;\n                            return;\n                        }\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport function make(obj) {\n    const out = {};\n    Object.entries(obj).forEach(([key, value]) => {\n        if (typeof value === 'string') {\n            const parts = value.split(/[,|]/).map((t) => t.trim());\n            const flag = parts.reduce((result, id) => result | out[id], 0);\n            out[key] = flag;\n        }\n        else if (Array.isArray(value)) {\n            const flag = value.reduce((result, v) => {\n                if (typeof v === 'string') {\n                    return result | out[v];\n                }\n                return result | v;\n            }, 0);\n            out[key] = flag;\n        }\n        else if (value) {\n            out[key] = value;\n        }\n    });\n    return out;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './rng';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        const grid = this;\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i, grid));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    /**\n     * Finds the first matching value/result and returns that location as an xy.Loc\n     * @param v - The fill value or a function that returns the fill value.\n     * @returns xy.Loc | null - The location of the first cell matching the criteria or null if not found.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    find(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const v = this[x][y];\n                if (fn(v, x, y, this))\n                    return [x, y];\n            }\n        }\n        return null;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y, this);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        let newX, newY;\n        const todo = [[x, y]];\n        const free = [];\n        let count = 1;\n        while (todo.length) {\n            const item = todo.pop();\n            [x, y] = item;\n            free.push(item);\n            if (!this.hasXY(x, y) || done[x][y])\n                continue;\n            if (!matchFn(this[x][y], x, y, this))\n                continue;\n            this[x][y] = fillFn(this[x][y], x, y, this);\n            done[x][y] = 1;\n            ++count;\n            // Iterate through the four cardinal neighbors.\n            for (let dir = 0; dir < 4; dir++) {\n                newX = x + DIRS[dir][0];\n                newY = y + DIRS[dir][1];\n                // If the neighbor is an unmarked region cell,\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n        NumGrid.free(done);\n        return count;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        if (keymap.start && typeof keymap.start === 'function') {\n            // @ts-ignore\n            await keymap.start();\n        }\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            // @ts-ignore\n            await keymap.stop();\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"ACTOR_DETECTED\"] = Fl(8)] = \"ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ACTOR_DETECTED\"] = Fl(9)] = \"WAS_ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"IS_CURSOR\"] = Fl(15)] = \"IS_CURSOR\";\n    FovFlags[FovFlags[\"IS_HIGHLIGHTED\"] = Fl(16)] = \"IS_HIGHLIGHTED\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_DETECTED\"] = FovFlags.WAS_ITEM_DETECTED | FovFlags.WAS_ACTOR_DETECTED] = \"WAS_DETECTED\";\n    FovFlags[FovFlags[\"IS_DETECTED\"] = FovFlags.ITEM_DETECTED | FovFlags.ACTOR_DETECTED] = \"IS_DETECTED\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.ACTOR_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GWU from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nimport { NOOP } from '../utils';\nimport * as XY from '../xy';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.onFovChange = { onFovChange: NOOP };\n        this.follow = null;\n        this.site = site;\n        let flag = 0;\n        const visible = opts.visible || opts.alwaysVisible;\n        if (opts.revealed || (visible && opts.revealed !== false))\n            flag |= FovFlags.REVEALED;\n        if (visible)\n            flag |= FovFlags.VISIBLE;\n        this.flags = Grid.make(site.width, site.height, flag);\n        this.needsUpdate = true;\n        this._changed = true;\n        if (typeof opts.onFovChange === 'function') {\n            this.onFovChange.onFovChange = opts.onFovChange;\n        }\n        else if (opts.onFovChange) {\n            this.onFovChange = opts.onFovChange;\n        }\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.alwaysVisible) {\n            this.makeAlwaysVisible();\n        }\n        if (opts.visible || opts.alwaysVisible) {\n            XY.forRect(site.width, site.height, (x, y) => this.onFovChange.onFovChange(x, y, true));\n        }\n    }\n    getFlag(x, y) {\n        return this.flags[x][y];\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    fovChanged(x, y) {\n        const flags = this.flags.get(x, y) || 0;\n        const isVisible = !!(flags & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flags & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        return isVisible !== wasVisible;\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n        this.changed = true;\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n        this.changed = true;\n    }\n    revealAll(makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags.update((v) => v | flag);\n        this.changed = true;\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n        this.changed = true;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED |\n            FovFlags.REVEALED |\n            FovFlags.ALWAYS_VISIBLE);\n        this.flags[x][y] = this.demoteCellVisibility(this.flags[x][y]); // clears visible, etc...\n        this.changed = true;\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n        this.changed = true;\n    }\n    reset() {\n        this.flags.fill(0);\n        this.changed = true;\n    }\n    get changed() {\n        return this._changed;\n    }\n    set changed(v) {\n        this._changed = v;\n        this.needsUpdate = this.needsUpdate || v;\n    }\n    // CURSOR\n    setCursor(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        this.flags[x][y] |= FovFlags.IS_CURSOR;\n    }\n    clearCursor(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_CURSOR;\n        }\n    }\n    isCursor(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_CURSOR);\n    }\n    // HIGHLIGHT\n    setHighlight(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        this.flags[x][y] |= FovFlags.IS_HIGHLIGHTED;\n    }\n    clearHighlight(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_HIGHLIGHTED;\n        }\n    }\n    isHighlight(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_HIGHLIGHTED);\n    }\n    // COPY\n    copy(other) {\n        this.flags.copy(other.flags);\n        this.needsUpdate = other.needsUpdate;\n        this._changed = other._changed;\n    }\n    //////////////////////////\n    // UPDATE\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            this.flags[x][y] |= FovFlags.REVEALED;\n            this.onFovChange.onFovChange(x, y, isVisible);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            this.onFovChange.onFovChange(x, y, isVisible);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.onFovChange.onFovChange(x, y, isClairy);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.onFovChange.onFovChange(x, y, isClairy);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.onFovChange.onFovChange(x, y, isTele);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            this.onFovChange.onFovChange(x, y, isTele);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.ACTOR_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_ACTOR_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.onFovChange.onFovChange(x, y, isMonst);\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.onFovChange.onFovChange(x, y, isMonst);\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    updateFor(subject) {\n        return this.update(subject.x, subject.y, subject.visionDistance);\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (arguments.length == 0 && this.follow) {\n            return this.updateFor(this.follow);\n        }\n        if (!this.needsUpdate &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        if (cr === undefined) {\n            cr = this.site.width + this.site.height;\n        }\n        this.needsUpdate = false;\n        this._changed = false;\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked, eightWays = false) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, eightWays);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {EventFn} fn The listener function.\n     * @param {any} [context=null] The context to invoke the listener with.\n     * @param {boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {EventFn} fn - The function\n     * @param {any} [context] - The context Object.\n     * @param {boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../rng';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        if (v < 0)\n            return 'transparent';\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.make(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.make(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg.copy(other.fg || -1);\n        this.bg.copy(other.bg || -1);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nlet inColor = false;\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    inColor = false;\n    let i = start;\n    while (count > 0 && i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n                inColor = true;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            else {\n                inColor = false;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function truncate(text, width) {\n    const len = length(text);\n    if (len <= width)\n        return text;\n    const index = advanceChars(text, 0, width);\n    if (!inColor)\n        return text.substring(0, index);\n    const CE = Config.options.colorEnd;\n    return text.substring(0, index) + CE;\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return (text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1));\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    clone() {\n        const other = new DataBuffer(this._width, this._height);\n        other.copy(this);\n        return other;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (arguments.length == 1) {\n            bg = Color.from(glyph).toInt();\n            glyph = 0;\n            fg = 0;\n        }\n        else {\n            if (typeof glyph !== 'number') {\n                if (typeof glyph === 'string') {\n                    glyph = this.toGlyph(glyph);\n                }\n                else {\n                    throw new Error('glyph must be number or char');\n                }\n            }\n            if (typeof fg !== 'number') {\n                fg = Color.from(fg).toInt();\n            }\n            if (typeof bg !== 'number') {\n                bg = Color.from(bg).toInt();\n            }\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1, maxWidth = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        maxWidth = maxWidth || this.width;\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width || i > maxWidth)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    // mix(color: Color.ColorBase, percent: number) {\n    //     if (typeof color !== 'number') color = Color.from(color);\n    //     const mixer = new Mixer();\n    //     for (let x = 0; x < this.width; ++x) {\n    //         for (let y = 0; y < this.height; ++y) {\n    //             const data = this.get(x, y);\n    //             mixer.drawSprite(data);\n    //             mixer.fg.mix(color, percent);\n    //             mixer.bg.mix(color, percent);\n    //             this.drawSprite(x, y, mixer);\n    //         }\n    //     }\n    //     return this;\n    // }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    clone() {\n        const other = new Buffer(this._target);\n        other.copy(this);\n        return other;\n    }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nimport { clamp } from '../utils';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        this.NEEDS_UPDATE = needs;\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(_x, _y, msg) {\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        this.commitCombatMessage();\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this.addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(_x, _y, msg) {\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './rng';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rng: random,\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = this.options.rng.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, radius = 1, fadeTo = 0, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color); /* color */\n        this.radius = Range.make(radius);\n        this.fadeTo = fadeTo;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(site, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!site)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(site.width, site.height, 0);\n        site.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            site.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold = 20) {\n    return intensity(light) <= threshold;\n}\nexport function isShadowLight(light, threshold = 40) {\n    return intensity(light) <= threshold;\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    source.id = id;\n    return source;\n}\nexport function installAll(config) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this.changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    copy(other) {\n        this.setAmbient(other.ambient);\n        this.glowLightChanged = true;\n        this.dynamicLightChanged = true;\n        this.changed = true;\n        this.staticLights = null;\n        List.forEach(other.staticLights, (info) => this.addStatic(info.x, info.y, info.light));\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        else if (!Array.isArray(light)) {\n            light = Color.from(light);\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get needsUpdate() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    setLight(x, y, light) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] = light[i];\n        }\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this.changed = false;\n        if (!force && !this.needsUpdate)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this.changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const site = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && site.hasActor(x, y))\n                    return false;\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return site.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["NOOP","TRUE","clamp","v","min","max","ERROR","message","Error","WARN","args","console","warn","first","find","undefined","DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","i","j","eachNeighbor","fn","only4dirs","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","length","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","size","dest","a","b","pct","dx","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","forEach","root","index","next","obj","name","entry","remove","prev","current","count","cb","sort","out","assignField","key","updated","copy","clear","nullify","clone","Array","isArray","slice","setDefaults","def","custom","Object","keys","origKey","defValue","parts","split","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","item","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","XY.forRect","k","candidateLocs","loc","random","cosmetic","config","Range","lower","upper","rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","flagObj","inverse","reduce","join","u","startsWith","substring","flag","id","XY.DIRS","makeArray","fill","arr","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","grid","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","some","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","todo","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","start","nextEvent","draw","stop","clearInterval","setTimeout","nextKeyOrClick","pause","clearEvents","preventDefault","loop","FovFlags","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","WAS_ITEM_DETECTED","WAS_ACTOR_DETECTED","ITEM_DETECTED","ACTOR_DETECTED","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","onFovChange","follow","visible","alwaysVisible","revealed","REVEALED","flags","Grid.make","needsUpdate","_changed","fov","FOV.FOV","blocksVision","makeAlwaysVisible","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","WAS_ANY_KIND_OF_VISIBLE","ALWAYS_VISIBLE","changed","makeVisibleToo","demoteCellVisibility","keep","IS_CURSOR","IS_HIGHLIGHTED","WAS_IN_FOV","isVisible","wasVisible","isClairy","wasClairy","isTele","wasTele","isMonst","wasMonst","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","subject","visionDistance","cx","cy","cr","updateFor","lightingChanged","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","rgb","maxRgb","sin","PI","Mixer","Utils.first","fg","Color.make","bg","equals","Color.from","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","maxWidth","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","templates","msg","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","Text.length","_x","_y","_addMessage","_a","commitCombatMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","setAmbient","addStatic","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","av"],"mappings":"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"}